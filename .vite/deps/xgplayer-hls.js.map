{
  "version": 3,
  "sources": ["../../node_modules/_eventemitter3@4.0.7@eventemitter3/index.js", "../../node_modules/_concat-typed-array@1.0.2@concat-typed-array/lib/concat.js", "../../node_modules/_concat-typed-array@1.0.2@concat-typed-array/lib/index.js", "dep:xgplayer-hls", "../../node_modules/_xgplayer-hls@2.5.2@xgplayer-hls/es/index.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/index.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/mse/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/common/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/common/func/debounce.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/common/func/caculate.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/common/func/softSolution-probe.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/context/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/events/index.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/index.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/playlist.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/remuxed-buffer.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/data-view.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/track.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/u8a-buffer.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/track-meta.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/track-sample.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/media-info.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/flv-tag.js", "../../node_modules/_xgplayer-helper-models@2.5.2@xgplayer-helper-models/es/ts-frag.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/crypto/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/eme/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/mse/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/sniffer/index.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/sniffer/page-visibility.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/loader-fetch/fetch-loader.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/loader-fetch/speed.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/loader-fetch/xhr-loader.js", "../../node_modules/_xgplayer-helper-utils@2.5.2@xgplayer-helper-utils/es/common/dev-logger.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/mse/hls-live.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/mse/config.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/index.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/aac/index.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/aac/adts.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/avc/index.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/avc/sps.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/avc/golomb.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/avc/nalunit.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/avc/sei.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/avc/rbsp.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/hevc/index.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/hevc/sps.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/hevc/golomb.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/hevc/nalunit.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/hevc/sei.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/hevc/rbsp.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/compat/index.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/compat/hls.js", "../../node_modules/_xgplayer-helper-codec@2.5.2@xgplayer-helper-codec/es/utf8/index.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/index.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/flv/index.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/flv/demuxer.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/flv/amf-parser.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/hls/ts.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/hls/ts-demuxer.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/hls/m3u8.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/mp4-remux/index.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/mp4-remux/remuxer.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/mp4-remux/buffer.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/mp4-remux/fmp4.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/mp4-remux/mp4-remuxer.js", "../../node_modules/_xgplayer-helper-transmuxers@2.5.2@xgplayer-helper-transmuxers/es/mp4-remux/mp4.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/mobile/index.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/mobile/hls-live-mobile.js", "../../node_modules/_xgplayer-hls-live@2.5.2@xgplayer-hls-live/es/mobile/config.js", "../../node_modules/_xgplayer-hls-vod@2.5.2@xgplayer-hls-vod/es/index.js", "../../node_modules/_xgplayer-hls-vod@2.5.2@xgplayer-hls-vod/es/hls-vod.js"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};", "'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;", "import d from \"./node_modules/_xgplayer-hls@2.5.2@xgplayer-hls/es/index.js\";export default d;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport HlsLivePlayer from 'xgplayer-hls-live';\nimport HlsVodPlayer from 'xgplayer-hls-vod';\nimport Player from 'xgplayer';\n\nvar HlsPlayer = function () {\n  function HlsPlayer(config) {\n    _classCallCheck(this, HlsPlayer);\n\n    if (config.isLive) {\n      return new HlsLivePlayer(config);\n    } else {\n      return new HlsVodPlayer(config);\n    }\n  }\n\n  _createClass(HlsPlayer, null, [{\n    key: 'isSupported',\n    value: function isSupported() {\n      return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    }\n  }, {\n    key: 'install',\n    value: function install(name, plugin) {\n      return Player.install(name, plugin);\n    }\n  }]);\n\n  return HlsPlayer;\n}();\n\nexport default HlsPlayer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Player from 'xgplayer';\nimport HlsLiveMsePlayer from './mse';\nimport HlsLiveMobilePlayer from './mobile';\nimport { EVENTS } from 'xgplayer-helper-utils';\n// import 'xgplayer-mobilevideo'\n\nvar HlsLivePlayer = function () {\n  function HlsLivePlayer(config) {\n    _classCallCheck(this, HlsLivePlayer);\n\n    if (HlsLiveMobilePlayer.isSupported() && config.useWASM) {\n      return new HlsLiveMobilePlayer(config);\n    }if (HlsLiveMsePlayer.isSupported()) {\n      return new HlsLiveMsePlayer(config);\n    } else {\n      return new Player(config);\n    }\n  }\n\n  _createClass(HlsLivePlayer, null, [{\n    key: 'install',\n    value: function install(name, plugin) {\n      return Player.install(name, plugin);\n    }\n  }]);\n\n  return HlsLivePlayer;\n}();\n\nexport default HlsLivePlayer;\n\n\nHlsLivePlayer.EVENTS = EVENTS;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Player from 'xgplayer';\nimport { EVENTS, Context } from 'xgplayer-helper-utils';\nimport HlsLiveController from './hls-live';\nimport defaultConfig from './config';\nvar HlsAllowedEvents = EVENTS.HlsAllowedEvents;\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nvar util = Player.util;\n\nvar HlsLivePlayer = function (_Player) {\n  _inherits(HlsLivePlayer, _Player);\n\n  function HlsLivePlayer(options) {\n    _classCallCheck(this, HlsLivePlayer);\n\n    var _this = _possibleConstructorReturn(this, (HlsLivePlayer.__proto__ || Object.getPrototypeOf(HlsLivePlayer)).call(this, options));\n\n    _this.hlsOps = {};\n    _this.hlsOps = Object.assign(_this.hlsOps, defaultConfig);\n    util.deepCopy(_this.hlsOps, options);\n    _this._played = false;\n    // this.started = false;\n    return _this;\n  }\n\n  _createClass(HlsLivePlayer, [{\n    key: '_initEvents',\n    value: function _initEvents() {\n      var _this2 = this;\n\n      this.__core__.once(REMUX_EVENTS.INIT_SEGMENT, function () {\n        var mse = _this2._context.getInstance('MSE');\n        if (!_this2.started) {\n          var live = util.createDom('xg-live', '\u6B63\u5728\u76F4\u64AD', {}, 'xgplayer-live');\n          util.addClass(_this2.root, 'xgplayer-is-live');\n          _this2.controls.appendChild(live);\n        }\n        _this2.started = true;\n        _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'start', _this2).call(_this2, mse.url);\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.url;\n\n      if (!url || this.started) {\n        return;\n      }\n\n      if (!this._context) {\n        this._context = new Context(this, this.hlsOps, HlsAllowedEvents);\n      }\n\n      if (!this.hlsOps) {\n        this.hlsOps = {};\n        this.hlsOps = Object.assign(this.hlsOps, defaultConfig);\n        util.deepCopy(this.hlsOps, this.config);\n        this._played = false;\n      }\n\n      this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({ player: this, container: this.video, preloadTime: this.config.preloadTime });\n      this._context.init();\n      this.url = url;\n      this.__core__.load(url);\n      this._initEvents();\n      this.started = true;\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this3 = this;\n\n      if (this._played) {\n        this.src = this.config.url;\n        this.once('canplay', function () {\n          _this3.video.play();\n        });\n        return;\n      }\n      this._played = true;\n      _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'play', this).call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this4 = this;\n\n      if (this._context) {\n        this._context.destroy();\n      }\n      var prom = new Promise(function (resolve) {\n        if (_this4.__core__ && _this4.__core__.mse) {\n          _this4.__core__.mse.destroy().then(function () {\n            setTimeout(function () {\n              resolve();\n            }, 50);\n          });\n        } else {\n          setTimeout(function () {\n            resolve();\n          }, 50);\n        }\n      });\n      _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'destroy', this).call(this);\n\n      return prom;\n    }\n  }, {\n    key: 'src',\n    set: function set(url) {\n      var _this5 = this;\n\n      this.onWaiting = this.onWaiting.bind(this);\n      this.__core__.mse.destroy().then(function () {\n        _this5._context.destroy();\n        _this5._context = null;\n        _this5.started = false;\n        _this5.video.currentTime = 0;\n\n        _this5.start(url);\n      });\n    }\n  }], [{\n    key: 'isSupported',\n    value: function isSupported() {\n      return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    }\n  }, {\n    key: 'install',\n    value: function install(name, plugin) {\n      return Player.install(name, plugin);\n    }\n  }]);\n\n  return HlsLivePlayer;\n}(Player);\n\nexport default HlsLivePlayer;\n\n\nHlsLivePlayer.install = Player.install.bind(Player);", "import * as common from './common';\nimport Context from './context';\nimport Crypto from './crypto';\nimport Eme from './eme';\nimport Mse from './mse';\nimport Sniffer from './sniffer';\nimport PageVisibility from './sniffer/page-visibility';\nimport EVENTS from './events';\nimport FetchLoader from './loader-fetch/fetch-loader';\nimport XhrLoader from './loader-fetch/xhr-loader';\nimport logger from './common/dev-logger';\n\nexport { common, Context, Crypto, Eme, Mse, Sniffer, PageVisibility, EVENTS, FetchLoader, XhrLoader, logger };", "// import './func/buffer-dump'\nimport debounce from './func/debounce';\nimport caculate from './func/caculate';\nimport softSolutionProbe from './func/softSolution-probe';\n\nexport { debounce, caculate, softSolutionProbe };", "/**\n * @param {number} num\n * @param {number} fixed\n * @return {number}\n */\nexport default (function (fn, wait) {\n  var lastTime = Date.now();\n  var timer = null;\n  var isFirstTime = true;\n\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var now = Date.now();\n    if (isFirstTime) {\n      lastTime = Date.now();\n      isFirstTime = false;\n      fn.apply(undefined, args);\n    }\n    if (now - lastTime > wait) {\n      lastTime = now;\n      fn.apply(undefined, args);\n    } else {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n      timer = setTimeout(function () {\n        fn.apply(undefined, args);\n      }, wait);\n    }\n  };\n});", "/**\n *\n * @param {number} num\n * @param {number} fixed\n * @return {number}\n */\nvar fixedFloat = function fixedFloat(num, fixed) {\n  return parseFloat(Number(num).toFixed(fixed));\n};\nexport default {\n  fixedFloat: fixedFloat\n};", "\nexport default function () {\n  var webAudioEnable = false;\n  var webglEnable = false;\n\n  try {\n    var AudioContext = window.AudioContext || window.webkitAudioContext;\n    var ctx = new AudioContext();\n    ctx.close();\n    ctx = null;\n    webAudioEnable = true;\n  } catch (e) {}\n\n  try {\n    var cvs = document.createElement('canvas');\n    var validContextNames = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\n    for (var i = 0; i < validContextNames.length; i++) {\n      var glCtx = cvs.getContext(validContextNames[i]);\n      if (glCtx) {\n        glCtx = null;\n        cvs = null;\n        webglEnable = true;\n        break;\n      }\n    }\n  } catch (e) {}\n\n  var WebComponentSupported = 'customElements' in window && window.customElements.define;\n  var isComponentDefined = void 0;\n  if (WebComponentSupported) {\n    var mVideo = window.customElements.get('live-video');\n    isComponentDefined = mVideo && mVideo.isSupported();\n  }\n\n  return webAudioEnable && webglEnable && isComponentDefined;\n}", "var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from '../events';\nimport { MediaInfo } from 'xgplayer-helper-models';\nimport EventEmitter from 'eventemitter3';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  /**\n   *\n   * @param {*} player\n   * @param {*} configs\n   * @param {string[]}allowedEvents\n   */\n  function Context(player, configs) {\n    var allowedEvents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    _classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n\n    this.mediaInfo = new MediaInfo();\n    this._instanceMap = {}; // \u6240\u6709\u7684\u89E3\u7801\u6D41\u7A0B\u5B9E\u4F8B\n    this._clsMap = {}; // \u6784\u9020\u51FD\u6570\u7684map\n    this._inited = false;\n    this.allowedEvents = allowedEvents;\n    this._configs = configs;\n    this._player = player;\n    this._hooks = {}; // \u6CE8\u518C\u5728\u4E8B\u4EF6\u524D/\u540E\u7684\u94A9\u5B50\uFF0C\u4F8B\u5982 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * \u4ECE\u4E0A\u4E0B\u6587\u4E2D\u83B7\u53D6\u89E3\u7801\u6D41\u7A0B\u5B9E\u4F8B\uFF0C\u5982\u679C\u6CA1\u6709\u5B9E\u4F8B\uFF0C\u6784\u9020\u4E00\u4E2A\n   * @param {string} tag\n   * @returns {*}\n   */\n\n\n  _createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}\u5B9E\u4F8B\u5C1A\u672A\u521D\u59CB\u5316`)\n        return null;\n      }\n    }\n\n    /**\n     * \u521D\u59CB\u5316\u5177\u4F53\u5B9E\u4F8B\n     * @param {string} tag\n     * @param {any[]}args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var a = args[0],\n          b = args[1],\n          c = args[2],\n          d = args[3];\n\n      if (this._clsMap[tag]) {\n        var newInstance = new this._clsMap[tag](a, b, c, d);\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * \u907F\u514D\u5927\u91CF\u7684initInstance\u8C03\u7528\uFF0C\u521D\u59CB\u5316\u6240\u6709\u7684\u7EC4\u4EF6\n     * @param {*} config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * \u6CE8\u518C\u4E00\u4E2A\u4E0A\u4E0B\u6587\u6D41\u7A0B\uFF0C\u63D0\u4F9B\u5B89\u5168\u7684\u4E8B\u4EF6\u53D1\u9001\u673A\u5236\n     * @param {string} tag\n     * @param {*} cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        _inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          _classCallCheck(this, enhanced);\n\n          var _this = _possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        /**\n         * @param {string} messageName\n         * @param {function} callback\n         */\n\n\n        _createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // \u5EFA\u7ACB\u5B9A\u5411\u901A\u4FE1\u76D1\u542C\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * @param {string} messageName\n           * @param {function} callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n\n          /**\n           * @param {string} messageName\n           * @param {function} callback\n           */\n\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n\n          /**\n           * @param {string} messageName\n           * @param {any[]} args\n           */\n\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            // console.log('emit ', messageName);\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                // eslint-disable-next-line standard/no-callback-literal\n                callback.apply(undefined, args);\n              }\n            }\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * \u5B9A\u5411\u53D1\u9001\u7ED9\u67D0\u4E2A\u7EC4\u4EF6\u5355\u4F8B\u7684\u6D88\u606F\n           * @param {string} messageName\n           * @param {any[]} args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n\n          /**\n           * \u5B9A\u5411\u53D1\u9001\u7ED9\u67D0\u4E2A\u7EC4\u4EF6\u5355\u4F8B\u7684\u6D88\u606F\n           * @param {string} messageName\n           * @param {function} callback\n           */\n\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * \u5728\u7EC4\u4EF6\u9500\u6BC1\u65F6\uFF0C\u9ED8\u8BA4\u5C06\u5B83\u6CE8\u518C\u7684\u4E8B\u4EF6\u5168\u90E8\u5378\u8F7D\uFF0C\u786E\u4FDD\u4E0D\u4F1A\u9020\u6210\u5185\u5B58\u6CC4\u6F0F\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (_get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return _get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n            this._context = null;\n          }\n        }, {\n          key: '_player',\n          get: function get() {\n            if (!this._context) {\n              return null;\n            }\n            return this._context._player;\n          },\n          set: function set(v) {\n            if (this._context) {\n              this._context._player = v;\n            }\n          }\n        }, {\n          key: '_pluginConfig',\n          get: function get() {\n            if (!this._context) {\n              return null;\n            }\n            return this._context._configs;\n          }\n        }]);\n\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * \u5404\u4E2A\u6A21\u5757\u5904\u7406seek\n     * @param {number} time\n     */\n\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      this._emitter.emit(EVENTS.PLAYER_EVENTS.SEEK, time);\n    }\n\n    /**\n     * \u5BF9\u5B58\u5728\u7684\u5B9E\u4F8B\u8FDB\u884C\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * \u7F16\u89E3\u7801\u6D41\u7A0B\u65E0\u9700\u5173\u6CE8\u4E8B\u4EF6\u7684\u89E3\u7ED1\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.destroyInstances();\n      if (this._emitter) {\n        this._emitter.removeAllListeners();\n      }\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._hooks = null;\n      this._player = null;\n      this._configs = null;\n    }\n\n    /**\n     * \u5BF9\u4FE1\u9053\u8FDB\u884C\u6536\u62E2\n     * @param {string} messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n\n  return Context;\n}();\n\nexport default Context;", "var BROWSER_EVENTS = {\n  VISIBILITY_CHANGE: 'VISIBILITY_CHANGE'\n};\nvar PLAYER_EVENTS = {\n  SEEK: 'SEEK'\n};\n\nvar LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_RESPONSE_HEADERS: 'LOADER_RESPONSE_HEADERS',\n  LOADER_ERROR: 'LOADER_ERROR',\n  LOADER_RETRY: 'LOADER_RETRY',\n  LOADER_TTFB: 'LOADER_TTFB'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  SEI_PARSED: 'SEI_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO',\n  ISKEYFRAME: 'ISKEYFRAME'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  DETECT_AUDIO_GAP: 'DETECT_AUDIO_GAP',\n  DETECT_LARGE_GAP: 'DETECT_LARGE_GAP',\n  DETECT_AUDIO_OVERLAP: 'DETECT_AUDIO_OVERLAP',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT',\n  DETECT_FRAG_ID_DISCONTINUE: 'DETECT_FRAG_ID_DISCONTINUE'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END',\n  MSE_ERROR: 'MSE_ERROR',\n  MSE_WRONG_TRACK_ADD: 'MSE_WRONG_TRACK_ADD'\n\n  // hls\u4E13\u6709events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYPTO_EVENTS = {\n  START_DECRYPTOO: 'START_DECRYPTO',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS, PLAYER_EVENTS, BROWSER_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYPTO_EVENTS: CRYPTO_EVENTS,\n  PLAYER_EVENTS: PLAYER_EVENTS,\n  BROWSER_EVENTS: BROWSER_EVENTS\n};", "import Playlist from './playlist';\nimport RemuxedBufferManager from './remuxed-buffer';\nimport XGDataView from './data-view';\nimport Tracks, { AudioTrack, VideoTrack } from './track';\nimport Buffer from './u8a-buffer';\nimport { AudioTrackMeta, VideoTrackMeta } from './track-meta';\nimport { AudioSample, VideoSample } from './track-sample';\nimport MediaInfo from './media-info';\nimport FlvTag from './flv-tag';\nimport TsFrag from './ts-frag';\nexport { FlvTag, Playlist, RemuxedBufferManager, XGDataView, Tracks, AudioTrack, VideoTrack, Buffer, AudioTrackMeta, VideoTrackMeta, AudioSample, VideoSample, MediaInfo, TsFrag };", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @typedef {Object} TSFrag\n * @property {number} duration\n * @property {boolean} downloaded\n * @property {boolean} downloading\n * @property {number=} start\n * @property {number} cc\n * @property {boolean} discontinue\n */\n\nvar Playlist = function () {\n  function Playlist(configs) {\n    _classCallCheck(this, Playlist);\n\n    /** @type {string} */\n    this._baseURL = '';\n    /** @type {Object.<number, string>} */\n    this._list = {};\n    /** @type {Object.<string, TSFrag>} */\n    this._ts = {};\n    /** @type {number} */\n    this.version = 0;\n    /** @type {number} */\n    this.sequence = -1;\n    /** @type {number} */\n    this.targetduration = 0;\n    /** @type {number} */\n    this.duration = 0;\n    /** @type {number} */\n    this.fragLength = 0;\n    /** @type {TSFrag | undefined} */\n    this._lastget = undefined;\n    /** @type {boolean} */\n    this.end = false; // \u5224\u65ADlive | vod , \u5BF9\u70B9\u64AD\u6216\u76F4\u64AD\u7ED3\u675F\u65F6\u5B58\u5728 EXT-X-ENDLIST\n    /** @type {boolean} */\n    this.autoclear = configs.autoclear || false;\n    /** @type {*} */\n    this.logger = configs.logger;\n    /** @type {string[]} */\n    this.downloadedUrls = [];\n    this._avgSegmentDuration = 4;\n  }\n\n  /**\n   * @return {Object<number, string>}\n   */\n\n\n  _createClass(Playlist, [{\n    key: 'push',\n\n\n    /**\n     * add a ts frag to play list\n     * @param {string} tsURL ts frag url\n     * @param {number} duration ts frag duration\n     * @param {boolean} discontinue has #EXT-X-DISCONTINUITY tag before this frag\n     * @param {number} id\n     * @param {number} cc\n     */\n    value: function push(tsURL, duration, discontinue, id, cc, isLast) {\n      if (!this._ts[tsURL]) {\n        this._ts[tsURL] = {\n          duration: duration,\n          downloaded: false,\n          downloading: false,\n          start: this.duration,\n          discontinue: !!discontinue,\n          id: id,\n          cc: cc,\n          isLast: isLast || false\n        };\n        this._list[this.duration] = tsURL;\n        this.duration += duration;\n        this.fragLength += 1;\n      }\n    }\n\n    /**\n     * delete a fragment from playlist\n     * @param {string} url\n     */\n\n  }, {\n    key: 'deleteFrag',\n    value: function deleteFrag(url) {\n      if (this._ts[url]) {\n        if (this._ts[url].start > this._lastget.time) {\n          this._lastget = {\n            duration: this._ts[url].duration,\n            time: this._ts[url].start,\n            downloaded: false,\n            downloading: false,\n            url: url,\n            id: this._ts[url].id\n          };\n        }\n        delete this._list[this._ts[url].start];\n        delete this._ts[url];\n        this.fragLength -= 1;\n      }\n    }\n  }, {\n    key: '_calcAvgFrgmentDuration',\n    value: function _calcAvgFrgmentDuration(data) {\n      if (!data.frags) return data.targetduration;\n      var fragLen = data.frags.length;\n      return Math.floor(data.duration / fragLen / 1000);\n    }\n\n    /**\n     * add m3u8 to current play list\n     * @param {*} data\n     * @param {boolean} deletepre\n     */\n\n  }, {\n    key: 'pushM3U8',\n    value: function pushM3U8(data, deletepre) {\n      // \u5E38\u89C4\u4FE1\u606F\u66FF\u6362\n      if (!data) {\n        throw new Error('No m3u8 data received.');\n      }\n      this.version = data.version;\n\n      this.targetduration = data.targetduration;\n\n      this._avgSegmentDuration = Math.min(this.targetduration, this._calcAvgFrgmentDuration(data));\n\n      if (data.encrypt && !this.encrypt) {\n        this.encrypt = data.encrypt;\n      }\n\n      this.end = data.end || false;\n\n      if (!data.sequence) {\n        data.sequence = 0;\n      }\n\n      // \u65B0\u5206\u7247\u4FE1\u606F\n      if (data.sequence > this.sequence) {\n        var len = data.frags.length;\n        if (this.logger) {\n          this.logger.log('PLAYLIST', 'new playlist [' + data.sequence + ', ' + (data.sequence + len - 1) + ']');\n        }\n        this.sequence = data.sequence;\n        var newfraglist = [];\n        for (var i = 0; i < len; i++) {\n          var frag = data.frags[i];\n          if (!this._ts[frag.url] && this.downloadedUrls.indexOf(frag.url) < 0) {\n            newfraglist.push(frag.url);\n            this.push(frag.url, frag.duration, frag.discontinue, frag.id, frag.cc, frag.isLast);\n          }\n        }\n\n        if (newfraglist.length < 1) {\n          throw new Error('Can not read ts file list.');\n        }\n\n        if (deletepre) {\n          var tslist = this.getTsList();\n          for (var _i = 0; _i < tslist.length; _i++) {\n            if (newfraglist.indexOf(tslist[_i]) < 0) {\n              this.deleteFrag(tslist[_i]);\n            }\n          }\n        }\n      } else {\n        throw new Error('Old m3u8 file received, ' + data.sequence);\n      }\n    }\n\n    /**\n     * return ts url list\n     * @return {string[]}\n     */\n\n  }, {\n    key: 'getTsList',\n    value: function getTsList() {\n      return Object.keys(this._ts);\n    }\n\n    /**\n     * mark a ts frag as downloaded / not downloaded\n     * @param {string} tsname\n     * @param {boolean} isloaded\n     */\n\n  }, {\n    key: 'downloaded',\n    value: function downloaded(tsname, isloaded) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloaded = isloaded;\n      }\n    }\n\n    /**\n     * mark a ts frag as loading / not loading\n     * @param {string} tsname\n     * @param {boolean} loading\n     */\n\n  }, {\n    key: 'downloading',\n    value: function downloading(tsname, loading) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloading = loading;\n      }\n    }\n\n    /**\n     * get a frag by ts name\n     * @param name\n     * @return {TSFrag}\n     */\n\n  }, {\n    key: 'getTsByName',\n    value: function getTsByName(name) {\n      return this._ts[name];\n    }\n\n    /**\n     * get ts frag by timestamp\n     * @param {number} time\n     * @return {undefined|TSFrag}\n     */\n\n  }, {\n    key: 'getTs',\n    value: function getTs(time) {\n      var timelist = Object.keys(this._list);\n      var ts = void 0;\n\n      if (time === undefined) {\n        if (this._lastget) {\n          time = this._lastget.time + this._lastget.duration;\n        } else {\n          time = 0;\n        }\n      }\n\n      if (timelist.length < 1 || time >= this.duration) {\n        return undefined;\n      }\n      timelist = timelist.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      for (var i = 0; i < timelist.length; i++) {\n        if (time >= parseInt(timelist[i])) {\n          var url = this._list[timelist[i]];\n          var downloaded = this._ts[url].downloaded;\n          var downloading = this._ts[url].downloading;\n          ts = {\n            url: url,\n            downloaded: downloaded,\n            downloading: downloading,\n            time: parseInt(timelist[i]),\n            duration: parseInt(this._ts[url].duration),\n            id: this._ts[url].id,\n            cc: this._ts[url].cc,\n            isLast: this._ts[url].isLast\n          };\n          if (this.autoclear && this._lastget) {\n            delete this._ts[this._lastget.url];\n            delete this._list[this._lastget.time];\n          }\n          this._lastget = ts;\n        } else {\n          break;\n        }\n      }\n      if (ts) {\n        this.downloadedUrls.push(ts.url);\n      }\n      return ts;\n    }\n\n    /**\n     * get last downloaded ts frag\n     * @return {TSFrag|undefined}\n     */\n\n  }, {\n    key: 'getLastDownloadedTs',\n    value: function getLastDownloadedTs() {\n      var timelist = Object.keys(this._list).sort(function (a, b) {\n        var result = Number(a) - Number(b);\n        return result;\n      });\n      var found = void 0;\n      for (var i = 0; i < timelist.length; i++) {\n        var url = this._list[timelist[i]];\n        var downloaded = this._ts[url].downloaded;\n        var downloading = this._ts[url].downloading;\n        if (downloaded) {\n          found = { url: url, downloaded: downloaded, downloading: downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration) };\n        } else {\n          break;\n        }\n      }\n\n      return found;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n    }\n  }, {\n    key: 'clearDownloaded',\n    value: function clearDownloaded() {\n      var list = Object.keys(this._ts);\n      for (var i = 0, l = list.length; i < l; i++) {\n        var ts = this._ts[list[i]];\n        ts.downloaded = false;\n        ts.downloading = false;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n      this.fragLength = 0;\n      this._lastget = undefined;\n      this.autoclear = false;\n    }\n  }, {\n    key: 'resetSequence',\n    value: function resetSequence() {\n      this.sequence = -1;\n    }\n  }, {\n    key: 'list',\n    get: function get() {\n      return this._list;\n    }\n\n    /**\n     * @param {string} baseURL\n     */\n\n  }, {\n    key: 'baseURL',\n    set: function set(baseURL) {\n      if (this.baseURL !== baseURL) {\n        this.clear();\n        this._baseURL = baseURL;\n      }\n    }\n\n    /**\n     * base cdn url for ts fragments\n     * @return {string}\n     */\n    ,\n    get: function get() {\n      return this._baseURL;\n    }\n  }, {\n    key: 'avgSegmentDuration',\n    get: function get() {\n      return this._avgSegmentDuration;\n    }\n  }]);\n\n  return Playlist;\n}();\n\nexport default Playlist;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var RemuxedBuffer = function RemuxedBuffer() {\n  _classCallCheck(this, RemuxedBuffer);\n\n  /** @type{string} */\n  this.mimetype = '';\n  /** @type{Uint8Array|null} */\n  this.init = null;\n  /** @type{Uint8Array[]} */\n  this.data = [];\n  /** @type{number} */\n  this.bufferDuration = 0;\n};\n\nvar RemuxedBufferManager = function () {\n  function RemuxedBufferManager() {\n    _classCallCheck(this, RemuxedBufferManager);\n\n    /** @type{Object.<string, RemuxedBuffer>} */\n    this.sources = {};\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @return {RemuxedBuffer}\n   */\n\n\n  _createClass(RemuxedBufferManager, [{\n    key: 'getSource',\n    value: function getSource(name) {\n      return this.sources[name];\n    }\n\n    /**\n     * @param {string} name\n     * @return {RemuxedBuffer}\n     */\n\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new RemuxedBuffer();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.clear();\n    }\n  }]);\n\n  return RemuxedBufferManager;\n}();\n\nexport default RemuxedBufferManager;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XGDataView = function () {\n  function XGDataView(buffer) {\n    _classCallCheck(this, XGDataView);\n\n    if (buffer instanceof ArrayBuffer) {\n      /** @type {ArrayBuffer} */\n      this.buffer = buffer;\n      /** @type {DataView} */\n      this.dataview = new DataView(buffer);\n      /** @type {number} */\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  /**\n   * byffer length\n   * @return {number}\n   */\n\n\n  _createClass(XGDataView, [{\n    key: 'back',\n\n\n    /**\n     * move read position backward\n     * @param count\n     */\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'getUint8',\n    value: function getUint8(offset) {\n      return this.dataview.getUint8(offset);\n    }\n\n    /**\n     * move read position forward\n     * @param count\n     */\n\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        XGDataView.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        XGDataView.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte \u4ECEDataView\u4E2D\u8BFB\u53D6\u6570\u636E]\n     * @param  {DataView} buffer [DataView\u5B9E\u4F8B]\n     * @param  {Number} size   [\u8BFB\u53D6\u5B57\u8282\u6570]\n     * @return {Number}        [\u6574\u6570]\n     */\n\n  }, {\n    key: 'readUint8',\n\n\n    /**\n     * @return {Number}\n     */\n    value: function readUint8() {\n      return XGDataView.readByte(this.dataview, 1);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return XGDataView.readByte(this.dataview, 2);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return XGDataView.readByte(this.dataview, 3);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return XGDataView.readByte(this.dataview, 4);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return XGDataView.readByte(this.dataview, 8);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return XGDataView.readByte(this.dataview, 1, true);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return XGDataView.readByte(this.dataview, 2, true);\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return XGDataView.readByte(this.dataview, 4, true);\n    }\n\n    /**\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n\n    /**\n     * set current read position of data-view\n     * @param value\n     */\n\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    }\n\n    /**\n     * set current read position of data-view\n     * @param value\n     */\n    ,\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n\n  return XGDataView;\n}();\n\nexport default XGDataView;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Track = function () {\n  function Track() {\n    _classCallCheck(this, Track);\n\n    /** @type {number} */\n    this.id = -1;\n    /** @type {number} */\n    this.sequenceNumber = 0;\n    /** @type {*} */\n    this.samples = [];\n    /** @type {*} */\n    this.droppedSamples = [];\n    /** @type {number} */\n    this.length = 0;\n  }\n\n  _createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    /** @type {string} */\n    var _this = _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    /** @type {string} */\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  _inherits(VideoTrack, _Track2);\n\n  function VideoTrack() {\n    _classCallCheck(this, VideoTrack);\n\n    /** @type {string} */\n    var _this2 = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    /** @type {string} */\n    _this2.type = 'video';\n    /** @type {number} */\n    _this2.dropped = 0;\n    /** @type {number} */\n    _this2.sequenceNumber = 0;\n    return _this2;\n  }\n\n  _createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    _classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  _createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n\n  return Tracks;\n}();", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    _classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {Uint8Array} data - The data to push into the buffer\n   */\n\n\n  _createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n\n  return XgBuffer;\n}();\n\nexport default XgBuffer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    _classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    _classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n\n  return VideoTrackMeta;\n}();", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @typedef {Object} TAudioSample\n * @property {number} dts\n * @property {number} pts\n * @property {number} originDts\n * @property {Uint8Array} data\n */\n\n/**\n * @typedef {Object} TVideoSample\n * @property {number} dts\n * @property {number} pts\n * @property {boolean} isKeyframe\n * @property {number} originDts\n * @property {Uint8Array} data\n * @property {Array<any>} nals\n */\n\nexport var AudioSample = function () {\n  function AudioSample(info) {\n    _classCallCheck(this, AudioSample);\n\n    var _default = AudioSample.getDefault();\n    if (!info) {\n      return _default;\n    }\n    return Object.assign({}, _default, info);\n  }\n\n  /**\n   * default audio sample\n   * @return {TAudioSample}\n   */\n\n\n  _createClass(AudioSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: -1,\n        pts: -1,\n        originDts: -1,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n\n  return AudioSample;\n}();\n\nexport var VideoSample = function () {\n  /**\n   * @constructor\n   * @param info\n   * @return {TVideoSample}\n   */\n  function VideoSample(info) {\n    _classCallCheck(this, VideoSample);\n\n    var _default = VideoSample.getDefault();\n\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  /**\n   * default video sample\n   * @return {TVideoSample}\n   */\n\n\n  _createClass(VideoSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: -1,\n        pts: undefined,\n        isKeyframe: false, // is Random access point\n        originDts: -1,\n        data: new Uint8Array(),\n        nals: []\n      };\n    }\n  }]);\n\n  return VideoSample;\n}();", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @typedef {Object} VideoMediaInfo\n * @property {string|null} codec\n * @property {number|null} width\n * @property {number|null} height\n * @property {string|null} profile\n * @property {{fixed: boolean,fps: number,fps_num: number,fps_den: number}} frameRate\n * @property {string|null} chromaFormat\n * @property {{width:number,height:number}} parRatio\n */\n\n/**\n * @typedef {Object} AudioMediaInfo\n * @property {string|null} codec\n * @property {number|null} sampleRate\n * @property {number|null} sampleRateIndex\n * @property {number|null} channelCount\n */\n\n/**\n * @param {Object} obj\n * @return {boolean}\n */\nvar isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    _classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    /** @type {boolean} */\n    this.hasVideo = false;\n    /**\n     * video media info\n     * @type {VideoMediaInfo}\n     */\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n      /** @type {boolean} */\n    };this.hasAudio = false;\n\n    /**\n     * video media info\n     * @type {AudioMediaInfo}\n     */\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  _createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n\n  return MediaInfo;\n}();\n\nexport default MediaInfo;", "function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FlvTag = function FlvTag() {\n  _classCallCheck(this, FlvTag);\n\n  /** @type {number} */\n  this.filtered = -1;\n  /** @type {number} */\n  this.tagType = -1;\n  /** @type {number} */\n  this.datasize = -1;\n  /** @type {number} */\n  this.dts = -1;\n};\n\nexport default FlvTag;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @typedef {Object} TsFragProps\n * @property {number} start\n * @property {number} duration\n * @property {string} url\n * @property {boolean} discontinue\n * @property {number} id\n * @property {number} cc\n */\nvar TsFrag = function () {\n  _createClass(TsFrag, null, [{\n    key: 'getDefault',\n\n    /**\n     *\n     * @return TsFrag\n     */\n    value: function getDefault() {\n      return {\n        id: -1,\n        url: '',\n        start: -1,\n        duration: -1,\n        discontinue: false,\n        cc: -1\n      };\n    }\n    /**\n     *\n     * @param {TsFragProps} props\n     */\n\n  }]);\n\n  function TsFrag(props) {\n    _classCallCheck(this, TsFrag);\n\n    var merged = Object.assign({}, TsFrag.getDefault(), props);\n\n    this.id = merged.id;\n\n    this.url = merged.url;\n\n    this.start = merged.start;\n\n    this.duration = merged.duration;\n\n    this.discontinue = merged.discontinue;\n\n    this.cc = merged.cc;\n  }\n\n  return TsFrag;\n}();\n\nexport default TsFrag;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from '../events';\n\nvar CRYPTO_EVENTS = EVENTS.CRYPTO_EVENTS;\n\nvar Crypto = function () {\n  function Crypto(config) {\n    _classCallCheck(this, Crypto);\n\n    this.inputBuffer = config.inputbuffer;\n    this.outputBuffer = config.outputbuffer;\n    this.key = config.key;\n    this.iv = config.iv;\n    this.method = config.method;\n\n    this.crypto = window.crypto || window.msCrypto;\n  }\n\n  _createClass(Crypto, [{\n    key: 'init',\n    value: function init() {\n      this.on(CRYPTO_EVENTS.START_DECRYPTO, this.decrypto.bind(this));\n    }\n  }, {\n    key: 'decrypto',\n    value: function decrypto() {\n      var _this = this;\n\n      if (!this.aeskey) {\n        var sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n        sbkey.then(function (key) {\n          _this.aeskey = key;\n          _this.decryptoData();\n        });\n      } else {\n        this.decryptoData();\n      }\n    }\n  }, {\n    key: 'decryptoData',\n    value: function decryptoData() {\n      var _this2 = this;\n\n      var inputbuffer = this._context.getInstance(this.inputBuffer);\n      var outputbuffer = this._context.getInstance(this.outputBuffer);\n      var data = inputbuffer.shift();\n      if (data) {\n        this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(function (res) {\n          outputbuffer.push(new Uint8Array(res));\n          _this2.emit(CRYPTO_EVENTS.DECRYPTED);\n          _this2.decryptoData(data);\n        });\n      }\n    }\n  }]);\n\n  return Crypto;\n}();\n\nexport default Crypto;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KeySystems = {\n  WIDEVINE: 'com.widevine.alpha',\n  PLAYREADY: 'com.microsoft.playready'\n};\n\nvar MAX_LICENSE_REQUEST_FAILURES = 3;\n\nvar EME = function () {\n  function EME(_ref) {\n    var config = _ref.config,\n        player = _ref.player;\n\n    _classCallCheck(this, EME);\n\n    this.licenseUrl = config.licenseUrl;\n    this.mediaKeySystemConfigs = config.mediaKeySystemConfigs;\n    this.keySystem = config.keySystem || KeySystems.WIDEVINE;\n    this.video = player.video;\n    this.mediaKeysList = [];\n    this.requestLicenseFailureCount = 0;\n  }\n\n  _createClass(EME, [{\n    key: 'init',\n    value: function init() {\n      this.on('ManifestParsed', this.onManifestParsed.bind(this));\n    }\n  }, {\n    key: 'onManifestParsed',\n    value: function onManifestParsed(data) {\n      var _this = this;\n\n      var mediaKeySystemConfigs = this.mediaKeySystemConfigs || this.createWidevineMediaKeySystemConfigurations(data.audioCodecs, data.videoCodecs);\n\n      navigator.requestMediaKeySystemAccess(this.keySystem, mediaKeySystemConfigs).then(function (keySystemAccess) {\n        return keySystemAccess.createMediaKeys();\n      }).then(function (mediaKeys) {\n        _this.video.setMediaKeys(mediaKeys);\n      });\n\n      this.video.addEventListener('encrypted', this.onMediaEncrypted.bind(this));\n    }\n  }, {\n    key: 'onKeySessionMessage',\n    value: function onKeySessionMessage(keySession, message) {\n      this.requestLicense(message, function (data) {\n        keySession.update(data);\n      });\n    }\n  }, {\n    key: 'requestLicense',\n    value: function requestLicense(keyMessage, callback) {\n      try {\n        var url = this.licenseUrl;\n        var xhr = this.createLicenseXhr(url, keyMessage, callback);\n        xhr.send(keyMessage);\n      } catch (e) {}\n    }\n  }, {\n    key: 'createLicenseXhr',\n    value: function createLicenseXhr(url, keyMessage, callback) {\n      var xhr = new window.XMLHttpRequest();\n\n      xhr.open('POST', url, true);\n\n      xhr.responseType = 'arraybuffer';\n      xhr.onreadystatechange = this.onLicenseRequestReadyStageChange.bind(this, xhr, url, keyMessage, callback);\n      return xhr;\n    }\n  }, {\n    key: 'onLicenseRequestReadyStageChange',\n    value: function onLicenseRequestReadyStageChange(xhr, url, keyMessage, callback) {\n      switch (xhr.readyState) {\n        case 4:\n          if (xhr.status === 200) {\n            this.requestLicenseFailureCount = 0;\n            callback(xhr.response);\n          } else {\n            this.requestLicenseFailureCount++;\n\n            if (this.requestLicenseFailureCount > MAX_LICENSE_REQUEST_FAILURES) {\n              return;\n            }\n            this.requestLicense(keyMessage, callback);\n          }\n          break;\n      }\n    }\n  }, {\n    key: 'onMediaEncrypted',\n    value: function onMediaEncrypted(e) {\n      var _this2 = this;\n\n      var keySession = this.video.mediaKeys.createSession();\n      keySession.addEventListener('message', function (event) {\n        _this2.onKeySessionMessage(keySession, event.message);\n      }, false);\n      keySession.generateRequest(e.initDataType, e.initData);\n    }\n  }, {\n    key: 'createWidevineMediaKeySystemConfigurations',\n    value: function createWidevineMediaKeySystemConfigurations(audioCodecs, videoCodecs) {\n      return [{\n        videoCapabilities: videoCodecs.map(function (codec) {\n          return {\n            contentType: 'video/mp4; codecs=\"' + codec + '\"'\n          };\n        })\n      }];\n    }\n  }], [{\n    key: 'isSupported',\n    value: function isSupported() {\n      var checkIsIncompatibleBrowser = function checkIsIncompatibleBrowser() {\n        var ua = navigator.userAgent;\n        var isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n        var isMSBrowser = ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0;\n        var isFirefox = ua.indexOf('Firefox') > 0;\n        var isEdge = ua.indexOf('Edge') > 0;\n        return isSafari || isMSBrowser || isFirefox || isEdge;\n      };\n      return !!navigator.requestMediaKeySystemAccess && !checkIsIncompatibleBrowser();\n    }\n  }]);\n\n  return EME;\n}();\n\nexport default EME;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from '../events';\n\nvar MSE_EVENTS = EVENTS.MSE_EVENTS;\n\nvar MSE = function () {\n  function MSE(configs, context) {\n    _classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.TAG = 'MSE';\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.format = this.configs.format; // hls | flv\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n    this.opened = false;\n  }\n\n  _createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this._url = null;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx, keepBuffer) {\n      this._context = newCtx;\n      this.emit = newCtx._emitter.emit.bind(newCtx._emitter);\n      if (!keepBuffer) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n          if (!buffer.updating) {\n            MSE.clearBuffer(buffer);\n          }\n        }\n      }\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.opened = true;\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit(MSE_EVENTS.SOURCE_UPDATE_END);\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (!this.mediaSource || this.mediaSource.readyState !== 'open' || !this.opened) {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n      if (!sources || !tracks) {\n        return;\n      }\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        add = false;\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track && sources[type].init !== null && sources[type].data.length) {\n          add = true;\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 1) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          if (this.sourceBuffers[_type]) {\n            continue;\n          }\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n\n          try {\n            // console.log('add sourcebuffer', mime);\n            var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n            this.sourceBuffers[_type] = sourceBuffer;\n            sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          } catch (e) {\n            if (e.code === 22 && Object.keys(this.sourceBuffers).length > 0) {\n              return this.emit(MSE_EVENTS.MSE_WRONG_TRACK_ADD, _type);\n            }\n            this.emit(MSE_EVENTS.MSE_ERROR, this.TAG, new Error(e.message));\n          }\n        }\n        if (Object.keys(this.sourceBuffers).length === this.sourceBufferLen) {\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      if (!this.mediaSource || this.mediaSource.readyState === 'closed') return;\n      this._doCleanupSourceBuffer();\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (!sources) return;\n      if (Object.keys(this.sourceBuffers).length < this.sourceBufferLen) {\n        return;\n      }\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var type = Object.keys(this.sourceBuffers)[i];\n        var sourceBuffer = this.sourceBuffers[type];\n        if (sourceBuffer.updating) continue;\n        var source = sources.sources[type];\n        if (this['no' + type]) {\n          source.data = [];\n          source.init.buffer = null;\n          continue;\n        }\n        if (source && !source.inited) {\n          try {\n            // console.log('append init buffer: ', type)\n            sourceBuffer.appendBuffer(source.init.buffer.buffer);\n            source.inited = true;\n          } catch (e) {\n            // DO NOTHING\n          }\n        } else if (source) {\n          var data = source.data.shift();\n          if (data) {\n            try {\n              // console.log('append buffer: ', type);\n              sourceBuffer.appendBuffer(data.buffer.buffer);\n            } catch (e) {\n              source.data.unshift(data);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      try {\n        var readyState = this.mediaSource.readyState;\n\n        if (readyState === 'open') {\n          this.mediaSource.endOfStream();\n        }\n      } catch (e) {}\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      try {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n          if (!buffer.updating) {\n            if (end > start) {\n              buffer.remove(start, end);\n            }\n          }\n        }\n      } catch (e) {}\n    }\n  }, {\n    key: '_doCleanupSourceBuffer',\n    value: function _doCleanupSourceBuffer() {\n      var currentTime = this.container.currentTime;\n      var autoCleanupMinBackwardDuration = 60 * 3;\n      var _pendingRemoveRanges = {\n        video: [],\n        audio: []\n      };\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var type = Object.keys(this.sourceBuffers)[i];\n        var sourceBuffer = this.sourceBuffers[type];\n        var buffered = sourceBuffer.buffered;\n        var doRemove = false;\n        for (var j = 0; j < buffered.length; j++) {\n          var start = buffered.start(j);\n          var end = buffered.end(j);\n          if (start <= currentTime && currentTime < end + 3) {\n            if (currentTime - start >= autoCleanupMinBackwardDuration) {\n              doRemove = true;\n              var removeEnd = currentTime - autoCleanupMinBackwardDuration;\n              _pendingRemoveRanges[type].push({ start: start, end: removeEnd });\n            }\n          } else if (end < currentTime && currentTime - start >= autoCleanupMinBackwardDuration) {\n            doRemove = true;\n            _pendingRemoveRanges[type].push({ start: start, end: end });\n          }\n        }\n        if (doRemove && !sourceBuffer.updating) {\n          this._doRemoveRanges(_pendingRemoveRanges);\n        }\n      }\n    }\n  }, {\n    key: '_doRemoveRanges',\n    value: function _doRemoveRanges(_pendingRemoveRanges) {\n      for (var type in _pendingRemoveRanges) {\n        if (!this.sourceBuffers[type] || this.sourceBuffers[type].updating) {\n          continue;\n        }\n        var sb = this.sourceBuffers[type];\n        var ranges = _pendingRemoveRanges[type];\n        while (ranges.length && !sb.updating) {\n          var range = ranges.shift();\n          try {\n            if (range && range.end > range.start) {\n              sb.remove(range.start, range.end);\n            }\n          } catch (e) {}\n        }\n      }\n    }\n  }, {\n    key: 'cleanBuffers',\n    value: function cleanBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this2 = this;\n\n      var taskList = [];\n\n      var _loop2 = function _loop2(i) {\n        var buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this2.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop2(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      if (!this.container) return Promise.resolve();\n      this.container.removeEventListener('timeupdate', this.onTimeUpdate);\n      this.container.removeEventListener('waiting', this.onWaiting);\n      this.mediaSource.removeEventListener('sourceopen', this.onSourceOpen);\n      return this.removeBuffers().then(function () {\n        var sources = Object.keys(_this3.sourceBuffers);\n        for (var i = 0; i < sources.length; i++) {\n          var _buffer = _this3.sourceBuffers[sources[i]];\n          delete _this3.sourceBuffers[sources[i]];\n\n          if (_this3.mediaSource.readyState === 'open') {\n            _this3.mediaSource.removeSourceBuffer(_buffer);\n          }\n        }\n\n        _this3.endOfStream();\n        try {\n          window.URL.revokeObjectURL(_this3.url);\n        } catch (e) {}\n\n        _this3.url = null;\n        _this3.configs = {};\n        _this3.container = null;\n        _this3.mediaSource = null;\n        _this3.sourceBuffers = {};\n        _this3.preloadTime = 1;\n\n        _this3.onSourceOpen = null;\n        _this3.onTimeUpdate = null;\n        _this3.onUpdateEnd = null;\n        _this3.onWaiting = null;\n        _this3.noaudio = undefined;\n        _this3.novideo = undefined;\n      });\n    }\n  }, {\n    key: 'sourceBufferLen',\n    get: function get() {\n      if (!this._context.mediaInfo) {\n        if (this.noaudio || this.novideo) return 1;\n        return 2;\n      }\n      return (!!this._context.mediaInfo.hasVideo && !this.novideo) + (!!this._context.mediaInfo.hasAudio && !this.noaudio);\n    }\n  }, {\n    key: 'url',\n    set: function set(val) {\n      this._url = val;\n    },\n    get: function get() {\n      if (!this._url) {\n        try {\n          this._url = window.URL.createObjectURL(this.mediaSource);\n        } catch (e) {}\n      }\n      return this._url;\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      try {\n        var buffered = buffer.buffered;\n        var bEnd = 0.1;\n        for (var i = 0, len = buffered.length; i < len; i++) {\n          bEnd = buffered.end(i);\n        }\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n\n  return MSE;\n}();\n\nexport default MSE;", "import _PageVisibility from './page-visibility';\n\nvar le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  /**\n   * get device type\n   * @return {'pc'|'mobile'|'tablet'}\n   */\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport var PageVisibility = _PageVisibility;\nexport default sniffer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from '../events';\n\nvar BROWSER_EVENTS = EVENTS.BROWSER_EVENTS;\nvar hidden = void 0;\nvar visibilityChange = void 0;\n\nfunction checkEnv() {\n  if (typeof document.hidden !== 'undefined') {\n    // Opera 12.10 and Firefox 18 and later support\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if (typeof document.msHidden !== 'undefined') {\n    hidden = 'msHidden';\n    visibilityChange = 'msvisibilitychange';\n  } else if (typeof document.webkitHidden !== 'undefined') {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n}\n\nvar PageVisibility = function () {\n  function PageVisibility() {\n    _classCallCheck(this, PageVisibility);\n\n    this.callbacks = {\n      onShow: [],\n      onHidden: []\n    };\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    this.init();\n  }\n\n  _createClass(PageVisibility, [{\n    key: 'init',\n    value: function init() {\n      !visibilityChange && checkEnv();\n      document.addEventListener(visibilityChange, this.handleVisibilityChange, false);\n    }\n  }, {\n    key: 'handleVisibilityChange',\n    value: function handleVisibilityChange() {\n      this.emit(BROWSER_EVENTS.VISIBILITY_CHANGE, document[hidden]);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      document.removeEventListener(visibilityChange, this.handleVisibilityChange);\n    }\n  }]);\n\n  return PageVisibility;\n}();\n\nexport default PageVisibility;", "var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from '../events';\nimport Speed from './speed';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    _classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n    this._ttfb = 0;\n    this._speed = new Speed();\n    if (window.AbortController) {\n      this.abortControllerEnabled = true;\n    }\n  }\n\n  _createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'fetch',\n\n\n    /**\n     * @param {string}      url\n     * @param {RequestInit} params\n     * @param {number}      timeout\n     * @return {Promise<unknown>}\n     */\n    value: function (_fetch) {\n      function fetch(_x, _x2, _x3) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (url, params, timeout) {\n      var _this2 = this;\n\n      var timer = null;\n      if (this.abortControllerEnabled) {\n        this.abortController = new window.AbortController();\n      }\n      Object.assign(params, { signal: this.abortController ? this.abortController.signal : undefined });\n      var start = new Date().getTime();\n      return Promise.race([fetch(url, params), new Promise(function (resolve, reject) {\n        timer = setTimeout(function () {\n          /* eslint-disable-next-line */\n          reject({\n            code: 999,\n            message: 'fetch timeout'\n          });\n          if (_this2.abortController) {\n            _this2.abortController.abort();\n          }\n        }, timeout || 1e4); // 10s\n      })]).then(function (response) {\n        if (timer) {\n          clearTimeout(timer);\n          timer = null;\n        }\n        var end = new Date().getTime();\n        _this2.emit(LOADER_EVENTS.LOADER_TTFB, {\n          start: start,\n          end: end,\n          elapsed: end - start\n        });\n        return response;\n      });\n    })\n\n    /**\n     * @param {string}      url\n     * @param {RequestInit} params\n     * @param {number}      retryTimes\n     * @param {number}      totalRetry\n     * @param {number}      delayTime\n     * @return {Promise<{ok}>}\n     */\n\n  }, {\n    key: 'internalLoad',\n    value: function internalLoad(url, params, retryTimes, totalRetry) {\n      var _this3 = this;\n\n      var delayTime = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var loadTimeout = arguments[5];\n\n      if (this._destroyed) return;\n      this.loading = true;\n      return this.fetch(this.url, params, loadTimeout).then(function (response) {\n        !_this3._destroyed && _this3.emit(LOADER_EVENTS.LOADER_RESPONSE_HEADERS, _this3.TAG, response.headers);\n\n        if (response.ok) {\n          _this3.status = response.status;\n          Promise.resolve().then(function () {\n            _this3._onFetchResponse(response);\n          });\n\n          return Promise.resolve(response);\n        }\n\n        if (retryTimes-- > 0) {\n          _this3._retryTimer = setTimeout(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_RETRY, _this3.TAG, {\n              response: response,\n              reason: 'response not ok',\n              retryTime: totalRetry - retryTimes\n            });\n            return _this3.internalLoad(url, params, retryTimes, totalRetry, delayTime, loadTimeout);\n          }, delayTime);\n        } else {\n          _this3.loading = false;\n          _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, {\n            code: response.status || 21,\n            message: response.status + ' (' + response.statusText + ')'\n          });\n        }\n      }).catch(function (error) {\n        if (_this3._destroyed) {\n          _this3.loading = false;\n          return;\n        }\n\n        if (retryTimes-- > 0) {\n          _this3._retryTimer = setTimeout(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_RETRY, _this3.TAG, {\n              error: error,\n              reason: 'fetch error',\n              retryTime: totalRetry - retryTimes\n            });\n            return _this3.internalLoad(url, params, retryTimes, totalRetry, delayTime, loadTimeout);\n          }, delayTime);\n        } else {\n          _this3.loading = false;\n          if (error && error.name === 'AbortError') {\n            return;\n          }\n          _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, Object.assign({ code: 21 }, error));\n        }\n      });\n    }\n\n    /**\n     * @param {string}      url\n     * @param {RequestInit} opts\n     * @param {retryCount, retryDelay, loadTimeout}  pluginConfig\n     * @return {Promise<{ok}>}\n     */\n\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          retryCount = _ref.retryCount,\n          retryDelay = _ref.retryDelay,\n          loadTimeout = _ref.loadTimeout;\n\n      retryCount = retryCount === undefined ? 3 : retryCount;\n      this.url = url;\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n\n      return this.internalLoad(url, params, retryCount, retryCount, retryDelay, loadTimeout);\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this4 = this;\n\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this4._speed.addBytes(data.byteLength);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            }).catch(function () {});\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var _this5 = this;\n\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2APromise. \u56DE\u8C03\u4E2D\u53EF\u4EE5\u83B7\u53D6\u5230\u6570\u636E\u3002\u5F53value.done\u5B58\u5728\u65F6\uFF0C\u8BF4\u660E\u94FE\u63A5\u65AD\u5F00\u3002\n      this._noDataTimer = setTimeout(function () {\n        if (_this5.loading === false) return;\n        _this5.emit(LOADER_EVENTS.LOADER_COMPLETE);\n      }, 3000);\n      this._reader && this._reader.read().then(function (val) {\n        clearTimeout(_this5._noDataTimer);\n        if (_this5._canceled || _this5._destroyed) {\n          if (_this5._reader) {\n            try {\n              _this5._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this5.loading = false;\n          _this5.status = 0;\n          Promise.resolve().then(function () {\n            _this5.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          });\n          return;\n        }\n\n        buffer.push(val.value);\n        _this5._speed.addBytes(val.value.byteLength);\n        Promise.resolve().then(function () {\n          _this5.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        });\n        return _this5._onReader(reader, taskno);\n      }).catch(function (error) {\n        clearTimeout(_this5._noDataTimer);\n        _this5.loading = false;\n        if (error && error.name === 'AbortError') return;\n        _this5.emit(LOADER_EVENTS.LOADER_ERROR, _this5.TAG, error);\n      });\n    }\n\n    /**\n     *\n     * @param {RequestInit} opts\n     * @return {{mode: string, headers: Headers, cache: string, method: string}}\n     */\n\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // \u6DFB\u52A0\u81EA\u5B9A\u4E49\u5934\n      };if (_typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (_typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials \u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E0D\u88AB\u4F7F\u7528\u3002\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n\n    // in KB/s\n\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // \u9632\u6B62failed: 200\u9519\u8BEF\u88AB\u6253\u5370\u5230\u63A7\u5236\u53F0\u4E0A\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      clearTimeout(this._noDataTimer);\n      this._canceled = true;\n      if (this.abortController) {\n        this.abortController.abort();\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      clearTimeout(this._retryTimer);\n      clearTimeout(this._noDataTimer);\n      this.cancel();\n      this._speed.reset();\n    }\n  }, {\n    key: 'currentSpeed',\n    get: function get() {\n      return this._speed.lastSamplingKBps;\n    }\n  }], [{\n    key: 'isSupported',\n    value: function isSupported() {\n      return !!window.fetch;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n\n  return FetchLoader;\n}();\n\nexport default FetchLoader;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Speed = function () {\n  function Speed() {\n    _classCallCheck(this, Speed);\n\n    // milliseconds\n    this._firstCheckpoint = 0;\n    this._lastCheckpoint = 0;\n    this._intervalBytes = 0;\n    this._lastSamplingBytes = 0;\n\n    this._now = Date.now;\n  }\n\n  _createClass(Speed, [{\n    key: \"reset\",\n    value: function reset() {\n      this._firstCheckpoint = this._lastCheckpoint = 0;\n      this._intervalBytes = 0;\n      this._lastSamplingBytes = 0;\n    }\n  }, {\n    key: \"addBytes\",\n    value: function addBytes(bytes) {\n      var duration = this._now() - this._lastCheckpoint;\n      if (this._firstCheckpoint === 0) {\n        this._firstCheckpoint = this._now();\n        this._lastCheckpoint = this._firstCheckpoint;\n        this._intervalBytes += bytes;\n      } else if (duration < 5000) {\n        this._intervalBytes += bytes;\n      } else {\n        // duration >= 1000\n        this._lastSamplingBytes = this._intervalBytes / (duration / 1000);\n        this._intervalBytes = bytes;\n        this._lastCheckpoint = this._now();\n      }\n    }\n  }, {\n    key: \"currentKBps\",\n    get: function get() {\n      this.addBytes(0);\n\n      var durationSeconds = (this._now() - this._lastCheckpoint) / 1000;\n      if (durationSeconds === 0) durationSeconds = 1;\n      return this._intervalBytes / durationSeconds / 1024;\n    }\n  }, {\n    key: \"lastSamplingKBps\",\n    get: function get() {\n      this.addBytes(0);\n\n      if (this._lastSamplingBytes !== 0) {\n        return this._lastSamplingBytes / 1024;\n      } else {\n        // lastSecondBytes === 0\n        if (this._now() - this._lastCheckpoint >= 500) {\n          // if time interval since last checkpoint has exceeded 500ms\n          // the speed is nearly accurate\n          return this.currentKBps;\n        } else {\n          // We don't know\n          return 0;\n        }\n      }\n    }\n  }]);\n\n  return Speed;\n}();\n\nexport default Speed;", "var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-undef */\n\nimport EVENTS from '../events';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_TEXT = 1; // text\nvar READ_JSON = 2; // json\nvar READ_BUFFER = 3; // arraybuffer\n\nvar DEFAULT_TIMEOUT_IMMS = 2000;\n\nvar XhrLoader = function () {\n  function XhrLoader(configs) {\n    _classCallCheck(this, XhrLoader);\n\n    this._xhr = null;\n    this.configs = Object.assign({}, configs);\n    this.loading = false;\n    this._readtype = this.configs.readtype;\n    this._bufferType = this.configs.buffer || 'LOADER_BUFFER';\n    this._requestInfo = null;\n    this._onReadyStateChange = this._onReadyStateChange.bind(this);\n    this._onError = this._onError.bind(this);\n    this._onAbort = this._onAbort.bind(this);\n    this._onTimeout = this._onTimeout.bind(this);\n  }\n\n  _createClass(XhrLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: '_createXhr',\n    value: function _createXhr() {\n      var xhr = void 0;\n      if (window.XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n      } else {\n        xhr = new ActiveXObject('Microsoft.XMLHTTP');\n      }\n      return xhr;\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var retryTimes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var delayTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      var options = Object.assign({}, opts);\n      this._requestInfo = {\n        url: url,\n        options: options,\n        retryTimes: retryTimes,\n        totalRetry: retryTimes,\n        delayTime: delayTime\n      };\n      this._xhr = this._createXhr();\n      this.loading = true;\n\n      try {\n        this._bindEvents();\n        this._loadInternal(url, options);\n      } catch (e) {\n        this._whenError({\n          code: this._xhr.status,\n          message: e && e.message\n        });\n      }\n    }\n  }, {\n    key: '_loadInternal',\n    value: function _loadInternal(url, options) {\n      var xhr = this._xhr;\n      xhr.open('GET', url, true);\n      this._setTimeout(xhr, options);\n      this._setCredentails(xhr, options);\n      this._setHeaders(xhr, options);\n      this._setResponseType(xhr);\n      xhr.send();\n    }\n  }, {\n    key: '_bindEvents',\n    value: function _bindEvents() {\n      var xhr = this._xhr;\n      xhr.addEventListener('readystatechange', this._onReadyStateChange);\n      xhr.addEventListener('timeout', this._onTimeout);\n      xhr.addEventListener('error', this._onError);\n      xhr.addEventListener('abort', this._onAbort);\n    }\n  }, {\n    key: '_setTimeout',\n    value: function _setTimeout(xhr, options) {\n      xhr.timeout = options.timeout || DEFAULT_TIMEOUT_IMMS;\n    }\n  }, {\n    key: '_setCredentails',\n    value: function _setCredentails(xhr, options) {\n      if (options.withCredentials) {\n        xhr.withCredentials = true;\n      }\n    }\n\n    // call after open(), before send()\n\n  }, {\n    key: '_setHeaders',\n    value: function _setHeaders(xhr, options) {\n      if (_typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var key in optHeaders) {\n          if (optHeaders.hasOwnProperty(key)) {\n            xhr.setRequestHeader(key, optHeaders[key]);\n          }\n        }\n      }\n    }\n  }, {\n    key: '_setResponseType',\n    value: function _setResponseType(xhr) {\n      switch (this._readtype) {\n        case READ_BUFFER:\n          xhr.responseType = 'arraybuffer';\n          break;\n        case READ_JSON:\n          xhr.responseType = 'json';\n          break;\n        case READ_TEXT:\n        default:\n          xhr.responseType = '';\n      }\n    }\n  }, {\n    key: '_onReadyStateChange',\n    value: function _onReadyStateChange() {\n      var _xhr = this._xhr,\n          readyState = _xhr.readyState,\n          status = _xhr.status;\n\n\n      if (readyState === 4) {\n        if (status >= 200 && status < 300) {\n          this._onComplete(this._xhr);\n          return;\n        }\n\n        // abort\u3001timeout\u90FD\u4F1A\u8D70\u5230\u8FD9, status === 0, \u8FD9\u4E9B\u60C5\u51B5\u5728\u4E8B\u4EF6\u76D1\u542C\u4E2D\u6267\u884C\n        if (status === 0) return;\n\n        this._onError();\n      }\n    }\n  }, {\n    key: '_onComplete',\n    value: function _onComplete(xhr) {\n      var data = void 0;\n      switch (this._readtype) {\n        case READ_JSON:\n          try {\n            data = JSON.parse(xhr.responseText);\n          } catch (e) {}\n          break;\n        case READ_BUFFER:\n          var buffer = xhr.response;\n          data = new Uint8Array(buffer);\n          break;\n        case READ_TEXT:\n        default:\n          data = xhr.responseText;\n      }\n      if (this.bufferIns) {\n        this.bufferIns.push(data);\n        this.emit(LOADER_EVENTS.LOADER_COMPLETE, this.bufferIns);\n      } else {\n        this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n      }\n      this.loading = false;\n    }\n  }, {\n    key: '_onError',\n    value: function _onError() {\n      var xhr = this._xhr;\n      var err = {\n        code: xhr.status || 21,\n        message: xhr.statusText\n      };\n      this._whenError(err);\n    }\n  }, {\n    key: '_onTimeout',\n    value: function _onTimeout() {\n      console.warn('timeout');\n      this._whenError({\n        code: 999,\n        message: 'fetch timeout'\n      });\n    }\n  }, {\n    key: '_onAbort',\n    value: function _onAbort() {\n      console.warn('abort');\n    }\n  }, {\n    key: '_whenError',\n    value: function _whenError(info) {\n      var _this = this;\n\n      var _requestInfo = this._requestInfo,\n          url = _requestInfo.url,\n          options = _requestInfo.options,\n          totalRetry = _requestInfo.totalRetry,\n          retryTimes = _requestInfo.retryTimes,\n          delayTime = _requestInfo.delayTime;\n\n\n      if (!retryTimes) {\n        // emit error\n        this.loading = false;\n        this.emit(LOADER_EVENTS.LOADER_ERROR, this.TAG, info);\n        return;\n      }\n\n      retryTimes--;\n\n      setTimeout(function () {\n        _this.emit(LOADER_EVENTS.LOADER_RETRY, _this.TAG, {\n          response: info,\n          reason: 'response not ok',\n          retryTime: totalRetry - retryTimes\n        });\n        _this.load(url, options, retryTimes, delayTime);\n      }, delayTime);\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._xhr.readyState !== 4) {\n        this._xhr.abort();\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.cancel();\n      if (this._xhr) {\n        this._xhr.removeEventListener('readystatechange', this._onReadyStateChange);\n        this._xhr.removeEventListener('timeout', this._onTimeout);\n        this._xhr.removeEventListener('error', this._onError);\n        this._xhr.removeEventListener('abort', this._onAbort);\n        this._xhr = null;\n      }\n    }\n  }, {\n    key: 'bufferIns',\n    get: function get() {\n      return this._context.getInstance(this._bufferType);\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n\n  return XhrLoader;\n}();\n\nexport default XhrLoader;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DevLogger = function () {\n  function DevLogger() {\n    var _this = this;\n\n    _classCallCheck(this, DevLogger);\n\n    try {\n      var matched = /xgd=(\\d)/.exec(document.cookie);\n      this._status = !!matched;\n      this._level = matched && matched[1];\n    } catch (e) {\n      this._status = false;\n    }\n\n    ['group', 'groupEnd', 'log', 'warn', 'error'].forEach(function (funName) {\n      _this[funName] = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {\n        var _console;\n\n        if (!_this._status) return;\n        var tagName = arg1;\n        var args = [arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10].filter(function (x) {\n          return x !== undefined;\n        });\n        (_console = console)[funName].apply(_console, ['[' + tagName + ']:'].concat(_toConsumableArray(args)));\n      };\n    });\n  }\n\n  /**\n   * @return {*|boolean|boolean}\n   */\n\n\n  _createClass(DevLogger, [{\n    key: 'enable',\n    get: function get() {\n      return this._status;\n    }\n\n    /**\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'long',\n    get: function get() {\n      return this._level === '2';\n    }\n  }]);\n\n  return DevLogger;\n}();\n\nexport default new DevLogger();", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS, FetchLoader, Crypto } from 'xgplayer-helper-utils';\n\nimport Player from 'xgplayer';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar HLS_EVENTS = EVENTS.HLS_EVENTS;\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nvar MSE_EVENTS = EVENTS.MSE_EVENTS;\nvar HLS_ERROR = 'HLS_ERROR';\n\nvar MASTER_PLAYLIST_REGEX = /#EXT-X-STREAM-INF:([^\\n\\r]*)[\\r\\n]+([^\\r\\n]+)/g;\n\nvar HlsLiveController = function () {\n  function HlsLiveController(configs) {\n    _classCallCheck(this, HlsLiveController);\n\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.preloadTime = this.configs.preloadTime;\n    this.container = this.configs.container;\n    this._m3u8lasttime = 0;\n    this._timmer = setInterval(this._checkStatus.bind(this), 300);\n    this._lastCheck = 0;\n    this.m3u8Text = null;\n  }\n\n  _createClass(HlsLiveController, [{\n    key: 'init',\n    value: function init() {\n      // \u521D\u59CB\u5316Buffer \uFF08M3U8/TS/Playlist);\n      var _player$hlsOps = this._player.hlsOps,\n          XgBuffer = _player$hlsOps.XgBuffer,\n          Tracks = _player$hlsOps.Tracks,\n          Playlist = _player$hlsOps.Playlist,\n          RemuxedBufferManager = _player$hlsOps.RemuxedBufferManager,\n          Compatibility = _player$hlsOps.Compatibility,\n          FetchLoader = _player$hlsOps.FetchLoader,\n          TsDemuxer = _player$hlsOps.TsDemuxer,\n          Mp4Remuxer = _player$hlsOps.Mp4Remuxer,\n          Mse = _player$hlsOps.Mse;\n\n      this._context.registry('M3U8_BUFFER', XgBuffer);\n      this._context.registry('TS_BUFFER', XgBuffer);\n      this._context.registry('TRACKS', Tracks);\n\n      this._playlist = this._context.registry('PLAYLIST', Playlist)({ autoclear: true });\n      this._context.registry('PRE_SOURCE_BUFFER', RemuxedBufferManager);\n\n      this._context.registry('COMPATIBILITY', Compatibility);\n\n      // \u521D\u59CB\u5316M3U8Loader;\n      this._m3u8loader = this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n      this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n      // \u521D\u59CB\u5316TS Demuxer\n      this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n      // \u521D\u59CB\u5316MP4 Remuxer\n      this._context.registry('MP4_REMUXER', Mp4Remuxer);\n\n      // \u521D\u59CB\u5316MSE\n      this.mse = this._context.registry('MSE', Mse)({ container: this.container });\n      this.initEvents();\n    }\n  }, {\n    key: 'initEvents',\n    value: function initEvents() {\n      this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete.bind(this));\n      this.on(LOADER_EVENTS.LOADER_RETRY, this._handleFetchRetry.bind(this));\n\n      this.on(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers.bind(this.mse));\n\n      this.on(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend.bind(this.mse));\n\n      this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed.bind(this));\n\n      this.on(DEMUX_EVENTS.SEI_PARSED, this._handleSEIParsed.bind(this));\n\n      this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete.bind(this));\n\n      this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError.bind(this));\n\n      this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError.bind(this));\n\n      this.on(REMUX_EVENTS.REMUX_ERROR, this._onRemuxError.bind(this));\n\n      this.on(MSE_EVENTS.MSE_ERROR, this._handleMseError.bind(this));\n    }\n  }, {\n    key: '_onError',\n    value: function _onError(type, mod, err, fatal) {\n      var error = {\n        code: err.code,\n        errorType: type,\n        errorDetails: '[' + mod + ']: ' + (err ? err.message : ''),\n        errorFatal: fatal\n      };\n      this._player.emit(HLS_ERROR, error);\n    }\n  }, {\n    key: '_onDemuxComplete',\n    value: function _onDemuxComplete() {\n      this.emit(REMUX_EVENTS.REMUX_MEDIA, 'ts');\n    }\n  }, {\n    key: '_onMetadataParsed',\n    value: function _onMetadataParsed(type) {\n      if (type === 'video') {\n        this._context.mediaInfo.hasVideo = true;\n      }\n      if (type === 'audio') {\n        this._context.mediaInfo.hasAudio = true;\n      }\n      this.emit(REMUX_EVENTS.REMUX_METADATA, type);\n    }\n  }, {\n    key: '_onLoadError',\n    value: function _onLoadError(loader, error) {\n      if (!this._tsloader.loading && !this._m3u8loader.loading && this.retrytimes >= 1) {\n        this.retrytimes--;\n        this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, false);\n      } else if (this.retrytimes <= 1) {\n        this._player.emit('error', {\n          code: error.code,\n          errorType: 'network',\n          ex: '[' + loader + ']: ' + error.message,\n          errd: {}\n        });\n        this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, true);\n        this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n        this.mse.endOfStream();\n      }\n    }\n  }, {\n    key: '_onDemuxError',\n    value: function _onDemuxError(mod, error, fatal) {\n      if (fatal === undefined) {\n        fatal = true;\n      }\n      this._player.emit('error', {\n        code: error.code,\n        errorType: 'network',\n        ex: '[' + mod + ']: ' + (error ? error.message : ''),\n        errd: {}\n      });\n      this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n    }\n  }, {\n    key: '_onRemuxError',\n    value: function _onRemuxError(mod, error, fatal) {\n      if (fatal === undefined) {\n        fatal = true;\n      }\n      this._player.emit('error', {\n        errorType: 'parse',\n        ex: '[' + mod + ']: ' + error.message,\n        errd: {}\n      });\n      this._onError(REMUX_EVENTS.REMUX_ERROR, mod, error, fatal);\n    }\n  }, {\n    key: '_handleMseError',\n    value: function _handleMseError(tag, err, fatal) {\n      if (fatal === undefined) {\n        fatal = false;\n      }\n      this._player.emit('error', {\n        errorType: 'format',\n        ex: '[' + tag + ']: ' + err.message,\n        errd: {}\n      });\n      this._onError(MSE_EVENTS.MSE_ERROR, tag, err, fatal);\n    }\n  }, {\n    key: '_handleSEIParsed',\n    value: function _handleSEIParsed(sei) {\n      this._player.emit('SEI_PARSED', sei);\n    }\n  }, {\n    key: '_onLoadComplete',\n    value: function _onLoadComplete(buffer) {\n      if (buffer.TAG === 'M3U8_BUFFER') {\n        var mdata = void 0;\n        try {\n          this.m3u8Text = buffer.shift();\n          var result = MASTER_PLAYLIST_REGEX.exec(this.m3u8Text);\n          if (result && result[2]) {\n            // redirect\n            this.load(result[2]);\n          } else {\n            mdata = this._player.hlsOps.M3U8Parser.parse(this.m3u8Text, this.url);\n          }\n        } catch (error) {\n          this._onError('M3U8_PARSER_ERROR', 'M3U8_PARSER', error, false);\n        }\n\n        if (!mdata) {\n          if (this.retrytimes > 0) {\n            this.retrytimes--;\n            this._preload();\n          } else {\n            this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n            this.mse.endOfStream();\n          }\n          return;\n        }\n\n        try {\n          this._playlist.pushM3U8(mdata, true);\n        } catch (error) {\n          this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, false);\n        }\n\n        if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n          var XgBuffer = this._player.hlsOps.XgBuffer;\n\n          this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n          this._context.registry('KEY_BUFFER', XgBuffer)();\n          this._tsloader.buffer = 'DECRYPT_BUFFER';\n          this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({ buffer: 'KEY_BUFFER', readtype: 3 });\n\n          var _ref = this._player.config.retry || {},\n              times = _ref.count,\n              delayTime = _ref.delay;\n\n          this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri, {}, times, delayTime);\n        } else {\n          this._m3u8Loaded(mdata);\n        }\n      } else if (buffer.TAG === 'TS_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.downloaded(this._tsloader.url, true);\n        this.emit(DEMUX_EVENTS.DEMUX_START);\n      } else if (buffer.TAG === 'DECRYPT_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.downloaded(this._tsloader.url, true);\n        this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT);\n      } else if (buffer.TAG === 'KEY_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.encrypt.key = buffer.shift();\n        this._crypto = this._context.registry('CRYPTO', Crypto)({\n          key: this._playlist.encrypt.key,\n          iv: this._playlist.encrypt.ivb,\n          method: this._playlist.encrypt.method,\n          inputbuffer: 'DECRYPT_BUFFER',\n          outputbuffer: 'TS_BUFFER'\n        });\n        this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n      }\n    }\n  }, {\n    key: '_handleFetchRetry',\n    value: function _handleFetchRetry(tag, info) {\n      this._player.emit('retry', Object.assign({\n        tag: tag\n      }, info));\n    }\n  }, {\n    key: '_onDcripted',\n    value: function _onDcripted() {\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }\n  }, {\n    key: '_m3u8Loaded',\n    value: function _m3u8Loaded(mdata) {\n      if (!this.preloadTime) {\n        this.preloadTime = this._playlist.targetduration ? this._playlist.targetduration : 5;\n      }\n      if (this._playlist.fragLength > 0 && this._playlist.sequence < mdata.sequence) {\n        this.retrytimes = this.configs.retrytimes || 3;\n      } else {\n        if (this.retrytimes > 0) {\n          this.retrytimes--;\n          this._preload();\n        } else {\n          this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n          this.mse.endOfStream();\n        }\n      }\n    }\n  }, {\n    key: '_checkStatus',\n    value: function _checkStatus() {\n      if (this.retrytimes < 1 && Date.now() - this._lastCheck < 4000) {\n        return;\n      } else if (this.retrytimes < 1) {\n        clearInterval(this._timmer);\n      }\n      this._lastCheck = new Date().getTime();\n      if (this.container.buffered.length < 1) {\n        this._preload();\n      } else {\n        // Check for load.\n        var currentTime = this.container.currentTime;\n        var bufferstart = this.container.buffered.start(this.container.buffered.length - 1);\n        if (this.container.readyState <= 2) {\n          if (currentTime < bufferstart) {\n            this.container.currentTime = bufferstart;\n            currentTime = bufferstart;\n          } else {\n            this._preload();\n          }\n        }\n        var bufferend = this.container.buffered.end(this.container.buffered.length - 1);\n        if (currentTime < bufferend - this.preloadTime * 2) {\n          this.container.currentTime = bufferend - this.preloadTime;\n        }\n\n        if (currentTime > bufferend - this.preloadTime) {\n          this._preload();\n        }\n      }\n    }\n  }, {\n    key: '_preload',\n    value: function _preload() {\n      if (this._tsloader.loading || this._m3u8loader.loading) {\n        return;\n      }\n      var frag = this._playlist.getTs();\n\n      var _ref2 = this._player.config.retry || {},\n          times = _ref2.count,\n          delayTime = _ref2.delay;\n\n      if (frag && !frag.downloaded && !frag.downloading) {\n        this._playlist.downloading(frag.url, true);\n        this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url, {}, times, delayTime);\n      } else {\n        var preloadTime = this.preloadTime ? this.preloadTime : 0;\n        var current = new Date().getTime();\n        if ((!frag || frag.downloaded) && (current - this._m3u8lasttime) / 1000 > preloadTime) {\n          this._m3u8lasttime = current;\n          this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url, {}, times, delayTime);\n        }\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      this.url = url;\n      this._preload();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      clearInterval(this._timmer);\n      this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete);\n      this.off(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers);\n      this.off(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend);\n      // this.off(REMUX_EVENTS.REMUX_ERROR);\n      this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n      this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n      this.mse = null;\n      this.m3u8Text = null;\n    }\n  }]);\n\n  return HlsLiveController;\n}();\n\nexport default HlsLiveController;", "import { Mse, FetchLoader, Crypto } from 'xgplayer-helper-utils';\nimport { Tracks, RemuxedBufferManager, Buffer as XgBuffer, Playlist } from 'xgplayer-helper-models';\n\nimport { CompatHls as Compatibility } from 'xgplayer-helper-codec';\nimport { Mp4Remuxer, M3U8Parser, TsDemuxer } from 'xgplayer-helper-transmuxers';\n\nexport default {\n  Mse: Mse,\n  Tracks: Tracks,\n  RemuxedBufferManager: RemuxedBufferManager,\n  XgBuffer: XgBuffer,\n  FetchLoader: FetchLoader,\n  Compatibility: Compatibility,\n  Mp4Remuxer: Mp4Remuxer,\n  Crypto: Crypto,\n  M3U8Parser: M3U8Parser,\n  TsDemuxer: TsDemuxer,\n  Playlist: Playlist\n};", "import AAC from './aac';\nimport ADTS from './aac/adts';\nimport * as avc from './avc';\nimport * as hevc from './hevc';\nimport Compat from './compat';\nimport CompatHls from './compat/hls';\nimport UTF8 from './utf8';\n\nexport { AAC, ADTS, avc, hevc, Compat, CompatHls, UTF8 };", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AAC = function () {\n  function AAC() {\n    _classCallCheck(this, AAC);\n  }\n\n  _createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n\n  return AAC;\n}();\n\nexport default AAC;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ADTS = function () {\n  function ADTS() {\n    _classCallCheck(this, ADTS);\n  }\n\n  _createClass(ADTS, null, [{\n    key: \"isHeader\",\n    value: function isHeader(data, offset) {\n      // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n      // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n      // More info https://wiki.multimedia.cx/index.php?title=ADTS\n      if (offset + 1 < data.length && ADTS.isHeaderPattern(data, offset)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getFrameDuration\",\n    value: function getFrameDuration(samplerate) {\n      return 1024 * 90000 / samplerate;\n    }\n  }, {\n    key: \"isHeaderPattern\",\n    value: function isHeaderPattern(data, offset) {\n      return data[offset] === 0xff && (data[offset + 1] & 0xf6) === 0xf0;\n    }\n  }, {\n    key: \"getHeaderLength\",\n    value: function getHeaderLength(data, offset) {\n      return data[offset + 1] & 0x01 ? 7 : 9;\n    }\n  }, {\n    key: \"getFullFrameLength\",\n    value: function getFullFrameLength(data, offset) {\n      return (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;\n    }\n  }, {\n    key: \"parseFrameHeader\",\n    value: function parseFrameHeader(data, offset, pts, frameIndex, frameDuration) {\n      var headerLength = void 0,\n          frameLength = void 0,\n          stamp = void 0;\n      var length = data.length;\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n      headerLength = ADTS.getHeaderLength(data, offset);\n      // retrieve frame size\n      frameLength = ADTS.getFullFrameLength(data, offset);\n      frameLength -= headerLength;\n\n      if (frameLength > 0 && offset + headerLength + frameLength <= length) {\n        stamp = pts + frameIndex * frameDuration;\n        // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n        return { headerLength: headerLength, frameLength: frameLength, stamp: stamp };\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"appendFrame\",\n    value: function appendFrame(sampleRate, data, offset, pts, frameIndex) {\n      var frameDuration = ADTS.getFrameDuration(sampleRate);\n      var header = ADTS.parseFrameHeader(data, offset, pts, frameIndex, frameDuration);\n      if (header) {\n        var stamp = header.stamp;\n        var headerLength = header.headerLength;\n        var frameLength = header.frameLength;\n\n        // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n        var aacSample = {\n          unit: data.subarray(offset + headerLength, offset + headerLength + frameLength),\n          pts: stamp,\n          dts: stamp\n        };\n\n        return { sample: aacSample, length: frameLength + headerLength };\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return ADTS;\n}();\n\nexport default ADTS;", "import SpsParser from './sps';\nimport NalUnit from './nalunit';\nimport SEIParser from './sei';\nimport Golomb from './golomb';\n\nexport { SpsParser, NalUnit, SEIParser, Golomb };", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    _classCallCheck(this, SPSParser);\n  }\n\n  _createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n\n    /**\n     * 0x00000300  -> 0x000000\n     * 0x00000301  -> 0x000001\n     * 0x00000302  -> 0x000002\n     * 0x00000303  -> 0x000003\n     */\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1;var par_height = 1;\n      var fps = 0;var fps_fixed = true;var fps_num = 0;var fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0;var crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var lastScale = 8;\n      var nextScale = 8;\n      var deltaScale = 0;\n      for (var i = 0; i < count; i++) {\n        if (nextScale !== 0) {\n          deltaScale = gb.readSEG();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n\n  return SPSParser;\n}();\n\nexport default SPSParser;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Golomb = function () {\n  /**\n   * @param {Uint8Array} uint8array\n   */\n  function Golomb(uint8array) {\n    _classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  _createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO \u5F02\u5E38\u5904\u7406\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n\n    /**\n     * @param size\n     * @return {number|*|number}\n     */\n\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n\n    /**\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n\n    /**\n     * @return {*|number}\n     */\n\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n\n    /**\n     * @return {number}\n     */\n\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n\n    /**\n     * @return {number}\n     */\n\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }, {\n    key: 'readSliceType',\n    value: function readSliceType() {\n      // skip NALu type Nal unit header 8bit\n      this.readByte();\n      // discard first_mb_in_slice\n      this.readUEG();\n      // return slice_type\n      return this.readUEG();\n    }\n  }]);\n\n  return Golomb;\n}();\n\nexport default Golomb;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport SpsParser from './sps';\nimport SEIParser from './sei';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    _classCallCheck(this, Nalunit);\n  }\n\n  _createClass(Nalunit, null, [{\n    key: 'getNalunits',\n\n    // https://en.wikipedia.org/wiki/Network_Abstraction_Layer\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      // 0x001 || 0x0001\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      // buffer.buffer = RBSP.EBSP2RBSP(new Uint8Array(buffer.buffer)).buffer;\n      // buffer.dataview = new DataView(buffer.buffer)\n      // buffer.dataview.position = 0;\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32(buffer.dataview.position);\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = new Uint8Array(buffer.buffer.slice(buffer.position, buffer.position + length));\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n\n    // * ISO-14496-10 7.3.1\n    // *  forbidden_zero_bit  1bit\n    // *  nal_ref_idc  2bit\n    // *  nal_unit_type 5bit\n\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          try {\n            unit.sei = SEIParser.parse(unit.body);\n          } catch (e) {}\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      var bufferLen = buffer.length;\n      while (headerLength !== 3 && headerLength !== 4 && pos < bufferLen - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === bufferLen - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else {\n            pos = bufferLen;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = bufferLen;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n\n    // \u7EC4\u88C5AvcDecoderConfigurationRecord\n    // *  configurationVerison = 1  uint(8)\n    // *  avcProfileIndication      uint(8)\n    // *  profile_compatibility     uint(8)\n    // *  avcLevelIndication        uint(8)\n    // *  reserved   `111111`       bit(6)\n    // *  lengthSizeMinusOne        uint(2)\n    // *  reserved   `111`          bit(3)\n    // *  numOfSPS                  uint(5)\n    // *  for(numOfSPS)\n    // *    spsLength               uint(16)\n    // *    spsNALUnit              spsLength\u4E2A\u5B57\u8282\n    // *  numOfPPS                  uint(8)\n    // *  for(numOfPPS)\n    // *     ppsLength              uint(16)\n    // *     ppsNALUnit             ppsLength\u4E2A\u5B57\u8282\n\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225; // 11100001\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n\n  return Nalunit;\n}();\n\nexport default Nalunit;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport RBSP from './rbsp';\n\nvar u8aToString = function u8aToString(data) {\n  var result = '';\n  for (var i = 0; i < data.byteLength; i++) {\n    result += String.fromCharCode(data[i]);\n  }\n  return result;\n};\n\nvar SEIParser = function () {\n  function SEIParser() {\n    _classCallCheck(this, SEIParser);\n  }\n\n  _createClass(SEIParser, null, [{\n    key: '_resolveNalu',\n    value: function _resolveNalu(data) {\n      if (data.length >= 1) {\n        return RBSP.EBSP2SODB(RBSP.EBSP2RBSP(data.slice(1)));\n      }\n      return null;\n    }\n    /**\n     *\n     * @param data {Uint8Array}\n     */\n\n  }, {\n    key: 'parse',\n    value: function parse(data) {\n      var sodb = SEIParser._resolveNalu(data);\n\n      var _SEIParser$switchPayl = SEIParser.switchPayloadType(sodb),\n          payloadType = _SEIParser$switchPayl.payloadType,\n          offset = _SEIParser$switchPayl.offset;\n\n      var content = sodb.slice(offset);\n\n      switch (payloadType) {\n        case 5:\n          return SEIParser.user_data_unregistered(content);\n        default:\n          return {\n            code: payloadType,\n            content: content\n          };\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {{payloadType: number, offset: number}}\n     */\n\n  }, {\n    key: 'switchPayloadType',\n    value: function switchPayloadType(data) {\n      var dv = new DataView(data.buffer);\n      var payloadType = 0;\n      var offset = 0;\n      while (dv.getUint8(offset) === 255) {\n        offset++;\n        payloadType += 255;\n      }\n      payloadType += dv.getUint8(offset++);\n\n      return {\n        payloadType: payloadType,\n        offset: offset\n      };\n    }\n\n    /**\n     *\n     * @param data {Uint8Array}\n     * @return {{ payloadLength: number, offset: number }}\n     */\n\n  }, {\n    key: 'getPayloadLength',\n    value: function getPayloadLength(data) {\n      var dv = new DataView(data.buffer);\n\n      var payloadLength = 0;\n      var offset = 0;\n      while (dv.getUint8(offset) === 255) {\n        offset++;\n        payloadLength += 255;\n      }\n      payloadLength += dv.getUint8(offset++);\n\n      return {\n        payloadLength: payloadLength,\n        offset: offset\n      };\n    }\n\n    /**\n     * resolve 0x05 user data unregistered\n     * @param data {Uint8Array}\n     */\n    // eslint-disable-next-line camelcase\n\n  }, {\n    key: 'user_data_unregistered',\n    value: function user_data_unregistered(data) {\n      var _SEIParser$getPayload = SEIParser.getPayloadLength(data),\n          payloadLength = _SEIParser$getPayload.payloadLength,\n          offset = _SEIParser$getPayload.offset;\n\n      if (payloadLength < 16) {\n        return {\n          uuid: '',\n          content: null\n        };\n      }\n      var payload = data.slice(offset);\n\n      var uuid = u8aToString(payload.slice(0, 16));\n      var content = u8aToString(payload.slice(16, payloadLength));\n\n      return {\n        code: 5, // for user data unregistered\n        uuid: uuid,\n        content: content\n      };\n    }\n  }]);\n\n  return SEIParser;\n}();\n\nexport default SEIParser;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RBSP = function () {\n  function RBSP() {\n    _classCallCheck(this, RBSP);\n  }\n\n  _createClass(RBSP, null, [{\n    key: \"EBSP2RBSP\",\n\n    /**\n     * convert EBSP to RBSP\n     * @param data {Uint8Array}\n     * @returns {Uint8Array}\n     * @constructor\n     */\n    value: function EBSP2RBSP(data) {\n      return data.filter(function (el, idx) {\n        if (idx < 2) {\n          return true;\n        } else {\n          return !(data[idx - 2] === 0 && data[idx - 1] === 0 && el === 3);\n        }\n      });\n    }\n\n    /**\n     * EBSP = SODB + '10000000'\n     * @param data {Uint8Array}\n     * @constructor\n     */\n\n  }, {\n    key: \"EBSP2SODB\",\n    value: function EBSP2SODB(data) {\n      var lastByte = data[data.byteLength - 1];\n      if (lastByte && lastByte === 128) {\n        return data.slice(0, data.byteLength - 1);\n      }\n\n      return data;\n    }\n  }]);\n\n  return RBSP;\n}();\n\nexport default RBSP;", "import SpsParserHEVC from './sps';\nimport NalUnitHEVC from './nalunit';\n\nexport { SpsParserHEVC, NalUnitHEVC };", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    _classCallCheck(this, SPSParser);\n  }\n\n  _createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n\n    /**\n     *\n     * @param {Uint8Array} uint8array\n     * @return {Uint8Array}\n     */\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n\n    /**\n     * @param {Uint8Array} uint8array\n     * @return {{width: *, general_profile_idc: number, chromaFormatIdc: *, general_level_idc: number, general_tier_flag: number, bitDepthLumaMinus8: (*|number), bitDepthChromaMinus8: (*|number), general_profile_space: number, height: *}}\n     */\n\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      var vpsId = 0;\n      var maxSubLayersMinus1 = 0;\n      var tINf = 0;\n      var spsId = 0;\n      var separate_colour_plane_flag = 0;\n      var chromaFormatIdc = 0;\n      var width = 0;\n      var height = 0;\n      var conf_win_left_offset = 0;\n      var conf_win_right_offset = 0;\n      var conf_win_top_offset = 0;\n      var conf_win_bottom_offset = 0;\n      var conformanceWindowFlag = 0;\n      var bitDepthLumaMinus8 = 0;\n      var bitDepthChromaMinus8 = 0;\n      var sub_width_c = 0;\n      var sub_height_c = 0;\n      var profileTierLevel = {};\n\n      gb.readByte(); // NAL header\n      gb.readByte();\n\n      vpsId = gb.readBits(4); // vps_id\n      maxSubLayersMinus1 = gb.readBits(3); // max_sub_layers_minus1\n      tINf = gb.readBits(1); // temporal_id_nesting_flag\n\n      profileTierLevel = SPSParser._readProfileTierLevel(gb, maxSubLayersMinus1);\n\n      spsId = gb.readUEG(); // sps id\n      chromaFormatIdc = gb.readUEG();\n      if (chromaFormatIdc === 3) {\n        separate_colour_plane_flag = gb.readBits(1); // separate_colour_plane_flag\n      }\n\n      width = gb.readUEG(); // pic_width_in_luma_samples\n      height = gb.readUEG(); // pic_height_in_luma_samples\n\n      conformanceWindowFlag = gb.readBits(1);\n      if (conformanceWindowFlag === 1) {\n        conf_win_left_offset = gb.readUEG(); // conf_win_left_offset\n        conf_win_right_offset = gb.readUEG(); // conf_win_right_offset\n        conf_win_top_offset = gb.readUEG(); // conf_win_top_offset\n        conf_win_bottom_offset = gb.readUEG(); // conf_win_bottom_offset\n      }\n\n      bitDepthLumaMinus8 = gb.readUEG(); // bit_depth_luma_minus8\n      bitDepthChromaMinus8 = gb.readUEG(); // bit_depth_chroma_minus8\n\n      if (conformanceWindowFlag === 1) {\n        sub_width_c = (chromaFormatIdc === 1 || chromaFormatIdc === 2) && separate_colour_plane_flag === 0 ? 2 : 1;\n        sub_height_c = chromaFormatIdc === 1 && separate_colour_plane_flag === 0 ? 2 : 1;\n        width -= sub_width_c * conf_win_right_offset + sub_width_c * conf_win_left_offset;\n        height -= sub_height_c * conf_win_bottom_offset + sub_height_c * conf_win_top_offset;\n      }\n\n      gb.destroy();\n      gb = null;\n\n      return { width: width,\n        height: height,\n        general_profile_space: profileTierLevel.general_profile_space,\n        general_tier_flag: profileTierLevel.general_tier_flag,\n        general_profile_idc: profileTierLevel.general_profile_idc,\n        general_level_idc: profileTierLevel.general_level_idc,\n        chromaFormatIdc: chromaFormatIdc,\n        bitDepthLumaMinus8: bitDepthLumaMinus8,\n        bitDepthChromaMinus8: bitDepthChromaMinus8 };\n    }\n\n    // static parseSPS (uint8array) {\n    //   let rbsp = SPSParser._ebsp2rbsp(uint8array)\n    //   let gb = new Golomb(rbsp)\n    //\n    //   gb.readByte()\n    //   let profileIdc = gb.readByte()\n    //   gb.readByte()\n    //   let levelIdc = gb.readByte()\n    //   gb.readUEG()\n    //\n    //   let profile_string = SPSParser.getProfileString(profileIdc)\n    //   let level_string = SPSParser.getLevelString(levelIdc)\n    //   let chroma_format_idc = 1\n    //   let chroma_format = 420\n    //   let chroma_format_table = [0, 420, 422, 444]\n    //   let bit_depth = 8\n    //\n    //   if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 ||\n    //     profileIdc === 244 || profileIdc === 44 || profileIdc === 83 ||\n    //     profileIdc === 86 || profileIdc === 118 || profileIdc === 128 ||\n    //     profileIdc === 138 || profileIdc === 144) {\n    //     chroma_format_idc = gb.readUEG()\n    //     if (chroma_format_idc === 3) {\n    //       gb.readBits(1)\n    //     }\n    //     if (chroma_format_idc <= 3) {\n    //       chroma_format = chroma_format_table[chroma_format_idc]\n    //     }\n    //\n    //     bit_depth = gb.readUEG() + 8\n    //     gb.readUEG()\n    //     gb.readBits(1)\n    //     if (gb.readBool()) {\n    //       let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12\n    //       for (let i = 0; i < scaling_list_count; i++) {\n    //         if (gb.readBool()) {\n    //           if (i < 6) {\n    //             SPSParser._skipScalingList(gb, 16)\n    //           } else {\n    //             SPSParser._skipScalingList(gb, 64)\n    //           }\n    //         }\n    //       }\n    //     }\n    //   }\n    //   gb.readUEG()\n    //   let pic_order_cnt_type = gb.readUEG()\n    //   if (pic_order_cnt_type === 0) {\n    //     gb.readUEG()\n    //   } else if (pic_order_cnt_type === 1) {\n    //     gb.readBits(1)\n    //     gb.readSEG()\n    //     gb.readSEG()\n    //     let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG()\n    //     for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n    //       gb.readSEG()\n    //     }\n    //   }\n    //   gb.readUEG()\n    //   gb.readBits(1)\n    //\n    //   let pic_width_in_mbs_minus1 = gb.readUEG()\n    //   let pic_height_in_map_units_minus1 = gb.readUEG()\n    //\n    //   let frame_mbs_only_flag = gb.readBits(1)\n    //   if (frame_mbs_only_flag === 0) {\n    //     gb.readBits(1)\n    //   }\n    //   gb.readBits(1)\n    //\n    //   let frame_crop_left_offset = 0\n    //   let frame_crop_right_offset = 0\n    //   let frame_crop_top_offset = 0\n    //   let frame_crop_bottom_offset = 0\n    //\n    //   let frame_cropping_flag = gb.readBool()\n    //   if (frame_cropping_flag) {\n    //     frame_crop_left_offset = gb.readUEG()\n    //     frame_crop_right_offset = gb.readUEG()\n    //     frame_crop_top_offset = gb.readUEG()\n    //     frame_crop_bottom_offset = gb.readUEG()\n    //   }\n    //\n    //   let par_width = 1, par_height = 1\n    //   let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0\n    //\n    //   let vui_parameters_present_flag = gb.readBool()\n    //   if (vui_parameters_present_flag) {\n    //     if (gb.readBool()) { // aspect_ratio_info_present_flag\n    //       let aspect_ratio_idc = gb.readByte()\n    //       let par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2]\n    //       let par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1]\n    //\n    //       if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n    //         par_width = par_w_table[aspect_ratio_idc - 1]\n    //         par_height = par_h_table[aspect_ratio_idc - 1]\n    //       } else if (aspect_ratio_idc === 255) {\n    //         par_width = gb.readByte() << 8 | gb.readByte()\n    //         par_height = gb.readByte() << 8 | gb.readByte()\n    //       }\n    //     }\n    //\n    //     if (gb.readBool()) {\n    //       gb.readBool()\n    //     }\n    //     if (gb.readBool()) {\n    //       gb.readBits(4)\n    //       if (gb.readBool()) {\n    //         gb.readBits(24)\n    //       }\n    //     }\n    //     if (gb.readBool()) {\n    //       gb.readUEG()\n    //       gb.readUEG()\n    //     }\n    //     if (gb.readBool()) {\n    //       let num_units_in_tick = gb.readBits(32)\n    //       let time_scale = gb.readBits(32)\n    //       fps_fixed = gb.readBool()\n    //\n    //       fps_num = time_scale\n    //       fps_den = num_units_in_tick * 2\n    //       fps = fps_num / fps_den\n    //     }\n    //   }\n    //\n    //   let parScale = 1\n    //   if (par_width !== 1 || par_height !== 1) {\n    //     parScale = par_width / par_height\n    //   }\n    //\n    //   let crop_unit_x = 0, crop_unit_y = 0\n    //   if (chroma_format_idc === 0) {\n    //     crop_unit_x = 1\n    //     crop_unit_y = 2 - frame_mbs_only_flag\n    //   } else {\n    //     let sub_wc = (chroma_format_idc === 3) ? 1 : 2\n    //     let sub_hc = (chroma_format_idc === 1) ? 2 : 1\n    //     crop_unit_x = sub_wc\n    //     crop_unit_y = sub_hc * (2 - frame_mbs_only_flag)\n    //   }\n    //\n    //   let codec_width = (pic_width_in_mbs_minus1 + 1) * 16\n    //   let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16)\n    //\n    //   codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x\n    //   codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y\n    //\n    //   let present_width = Math.ceil(codec_width * parScale)\n    //\n    //   gb.destroy()\n    //   gb = null\n    //\n    //   return {\n    //     profile_string: profile_string,\n    //     level_string: level_string,\n    //     bit_depth: bit_depth,\n    //     chroma_format: chroma_format,\n    //     chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n    //\n    //     frame_rate: {\n    //       fixed: fps_fixed,\n    //       fps: fps,\n    //       fps_den: fps_den,\n    //       fps_num: fps_num\n    //     },\n    //\n    //     par_ratio: {\n    //       width: par_width,\n    //       height: par_height\n    //     },\n    //\n    //     codec_size: {\n    //       width: codec_width,\n    //       height: codec_height\n    //     },\n    //\n    //     present_size: {\n    //       width: present_width,\n    //       height: codec_height\n    //     }\n    //   }\n    // }\n    /**\n     * @param gb\n     * @param maxSubLayersMinus1\n     * @return {{general_profile_idc: (*|number), general_level_idc: (*|number), general_tier_flag: (*|number), general_profile_space: (*|number)}}\n     */\n\n  }, {\n    key: '_readProfileTierLevel',\n    value: function _readProfileTierLevel(gb, maxSubLayersMinus1) {\n      var general_profile_space = 0;\n      var general_tier_flag = 0;\n      var general_profile_idc = 0;\n      var general_level_idc = 0;\n      general_profile_space = gb.readBits(2) || 0; // profile_space\n      general_tier_flag = gb.readBits(1) || 0; // tierFlag\n      general_profile_idc = gb.readBits(5) || 0; // profileIdc\n\n      gb.readBits(16); // some 32bits\n      gb.readBits(16);\n\n      gb.readBits(1); // progressiveSourceFlag\n      gb.readBits(1); // interlacedSourceFlag\n      gb.readBits(1); // nonPackedConstraintFlag\n      gb.readBits(1); // frameOnlyConstraintFlag\n\n      gb.readBits(16); // reserved zero bits\n      gb.readBits(16);\n      gb.readBits(12);\n\n      general_level_idc = gb.readBits(8) || 0; // level_idc\n\n      var subLayerProfilePresentFlag = [];\n      var subLayerLevelPresentFlag = [];\n      for (var j = 0; j < maxSubLayersMinus1; j++) {\n        subLayerProfilePresentFlag[j] = gb.readBits(1);\n        subLayerLevelPresentFlag[j] = gb.readBits(1);\n      }\n\n      if (maxSubLayersMinus1 > 0) {\n        gb.readBits((8 - maxSubLayersMinus1) * 2);\n      }\n\n      for (var i = 0; i < maxSubLayersMinus1; i++) {\n        if (subLayerProfilePresentFlag[i] !== 0) {\n          gb.readBits(2);\n          gb.readBits(1);\n          gb.readBits(5);\n\n          gb.readBits(16);\n          gb.readBits(16);\n\n          gb.readBits(4);\n\n          gb.readBits(16);\n          gb.readBits(16);\n          gb.readBits(12);\n        }\n        if (subLayerLevelPresentFlag[i] !== 0) {\n          gb.readBits(8);\n        }\n      }\n\n      return {\n        general_profile_space: general_profile_space,\n        general_tier_flag: general_tier_flag,\n        general_profile_idc: general_profile_idc,\n        general_level_idc: general_level_idc\n      };\n    }\n\n    /**\n     *\n     *  @param {any} gb\n     * @param {number}count\n     */\n\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var lastScale = 8;\n      var nextScale = 8;\n      var deltaScale = 0;\n      for (var i = 0; i < count; i++) {\n        if (nextScale !== 0) {\n          deltaScale = gb.readSEG();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    }\n\n    /**\n     *\n     * @param {number} profileIdc\n     * @return {string}\n     */\n\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n\n    /**\n     * @param {number} levelIdc\n     * @return {string}\n     */\n\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n\n    /**\n     * @param {number} chroma\n     * @return {string}\n     */\n\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n\n    /**\n     * @param {any} spsConfig\n     * @return {any}\n     */\n\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      } else if (spsConfig.width && spsConfig.height) {\n        meta.codecWidth = spsConfig.width;\n        meta.codecHeight = spsConfig.height;\n        meta.presentWidth = spsConfig.width;\n        meta.presentHeight = spsConfig.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      // meta.parRatio = {\n      //   width: spsConfig.par_ratio.width,\n      //   height: spsConfig.par_ratio.height\n      // }\n\n      // meta.frameRate = spsConfig.frame_rate\n\n      // let fpsDen = meta.frameRate.fps_den\n      // let fpsNum = meta.frameRate.fps_num\n      // meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum))\n      return meta;\n    }\n  }]);\n\n  return SPSParser;\n}();\n\nexport default SPSParser;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Golomb = function () {\n  /**\n   * @param {Uint8Array} uint8array\n   */\n  function Golomb(uint8array) {\n    _classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  _createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO \u5F02\u5E38\u5904\u7406\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n\n    /**\n     * @param size\n     * @return {number|*|number}\n     */\n\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n\n    /**\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n\n    /**\n     * @return {*|number}\n     */\n\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n\n    /**\n     * @return {number}\n     */\n\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n\n    /**\n     * @return {number}\n     */\n\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }, {\n    key: 'readSliceType',\n    value: function readSliceType() {\n      // skip NALu type Nal unit header 8bit\n      this.readByte();\n      // discard first_mb_in_slice\n      this.readUEG();\n      // return slice_type\n      return this.readUEG();\n    }\n  }]);\n\n  return Golomb;\n}();\n\nexport default Golomb;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport SpsParser from './sps';\nimport SEIParser from './sei';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    _classCallCheck(this, Nalunit);\n  }\n\n  _createClass(Nalunit, null, [{\n    key: 'getNalunits',\n\n    /**\n     * @param {any} buffer\n     * @return {[]|*[]}\n     */\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getHvccNals(buffer);\n      }\n    }\n\n    /**\n     * @param {any} buffer\n     * @return {[]}\n     */\n\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 40) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n\n    // |\u56DB\u5B57\u8282 nalSize| nalUnit |\n    /**\n     * @param {any} buffer\n     * @return {[]}\n     */\n\n  }, {\n    key: 'getHvccNals',\n    value: function getHvccNals(buffer) {\n      // console.log('getHvccNals')\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        // console.log('buffer')\n        // console.log(buffer)\n        // console.log(buffer.position)\n        // console.log(buffer.length)\n        // console.log(buffer.dataview)\n        // let length = buffer.dataview.getInt32();\n        var length = buffer.dataview.getInt32(buffer.dataview.position);\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = new Uint8Array(buffer.buffer.slice(buffer.position, buffer.position + length));\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          try {\n            Nalunit.analyseNal(unit);\n          } catch (e) {\n            continue;\n          }\n          if (unit.type <= 40) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n\n    /**\n     * @param {any} unit\n     */\n\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] >>> 1 & 0x3f;\n      unit.type = type;\n      switch (type) {\n        case 0:\n          // SLICE_TRAIL_N\n          unit.slice_trail_n = true;\n          break;\n        case 1:\n          // SLICE_TRAIL_R\n          unit.slice_trail_r = true;\n          unit.key = true;\n          break;\n        case 2:\n          // SLICE_TSA_N\n          unit.slice_tsa_n = true;\n          break;\n        case 3:\n          // SLICE_TSA_R\n          unit.slice_tsa_r = true;\n          unit.key = true;\n          break;\n        case 4:\n          // SLICE_STSA_N\n          unit.slice_stsa_n = true;\n          break;\n        case 5:\n          // SLICE_STSA_R\n          unit.slice_stsa_r = true;\n          unit.key = true;\n          break;\n        case 6:\n          // SLICE_RADL_N\n          unit.slice_radl_n = true;\n          break;\n        case 7:\n          // SLICE_RADL_R\n          unit.slice_radl_r = true;\n          unit.key = true;\n          break;\n        case 8:\n          // SLICE_RASL_N\n          unit.slice_rasl_n = true;\n          break;\n        case 9:\n          // SLICE_RASL_R\n          unit.slice_rasl_r = true;\n          unit.key = true;\n          break;\n        case 16:\n          // SLICE_BLA_W_LP\n          unit.slice_bla_w_lp = true;\n          break;\n        case 17:\n          // SLICE_BLA_W_RADL\n          unit.slice_bla_w_radl = true;\n          break;\n        case 18:\n          // SLICE_BLA_N_LP\n          unit.slice_bla_n_lp = true;\n          break;\n        case 19:\n          // SLICE_IDR_W_RADL\n          unit.slice_idl_w_radl = true;\n          unit.key = true;\n          break;\n        case 20:\n          // SLICE_IDR_N_LP\n          unit.slice_idr_n_lp = true;\n          unit.key = true;\n          break;\n        case 21:\n          // SLICE_CRA_NUT\n          unit.slice_cra_nut = true;\n          unit.key = true;\n          break;\n        case 32:\n          // VPS\n          unit.vps = true;\n          break;\n        case 33:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 34:\n          // PPS\n          unit.pps = true;\n          break;\n        case 35:\n          // AUD\n          break;\n        case 36:\n          // EOS\n          unit.aud = true;\n          break;\n        case 37:\n          // EOB\n          unit.eob = true;\n          break;\n        case 38:\n          // FD\n          unit.fd = true;\n          break;\n        case 39:\n          // PREFIX_SEI\n          // unit.prefix_sei = true;\n          try {\n            unit.sei = SEIParser.parse(unit.body.slice(1));\n          } catch (e) {}\n          break;\n        case 40:\n          // SUFFIX_SEI\n          unit.sei = SEIParser.parse(unit.body.slice(1));\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      var bufferLen = buffer.length;\n      while (headerLength !== 3 && headerLength !== 4 && pos < bufferLen - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x00000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === bufferLen - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x00000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x000001\n            headerLength = 3;\n          } else {\n            pos = bufferLen;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }]);\n\n  return Nalunit;\n}();\n\nexport default Nalunit;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport RBSP from './rbsp';\n\n/**\n * @param {Uint8Array} data\n * @return {string}\n */\nvar u8aToString = function u8aToString(data) {\n  var result = '';\n  for (var i = 0; i < data.byteLength; i++) {\n    result += String.fromCharCode(data[i]);\n  }\n  return result;\n};\n\nvar SEIParser = function () {\n  function SEIParser() {\n    _classCallCheck(this, SEIParser);\n  }\n\n  _createClass(SEIParser, null, [{\n    key: '_resolveNalu',\n    value: function _resolveNalu(data) {\n      if (data.length >= 1) {\n        return RBSP.EBSP2SODB(RBSP.EBSP2RBSP(data.slice(1)));\n      }\n      return null;\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @return {{uuid: string, content: null}|{code: number, uuid: string, content: string}|{code: number, content: Uint8Array}}\n     */\n\n  }, {\n    key: 'parse',\n    value: function parse(data) {\n      var sodb = SEIParser._resolveNalu(data);\n\n      var _SEIParser$switchPayl = SEIParser.switchPayloadType(sodb),\n          payloadType = _SEIParser$switchPayl.payloadType,\n          offset = _SEIParser$switchPayl.offset;\n\n      var content = sodb.slice(offset);\n\n      switch (payloadType) {\n        case 5:\n          return SEIParser.user_data_unregistered(content);\n        default:\n          return {\n            code: payloadType,\n            content: content\n          };\n      }\n    }\n\n    /**\n     *\n     * @param {Uint8Array} data\n     * @returns {{payloadType: number, offset: number}}\n     */\n\n  }, {\n    key: 'switchPayloadType',\n    value: function switchPayloadType(data) {\n      var dv = new DataView(data.buffer);\n      var payloadType = 0;\n      var offset = 0;\n      while (dv.getUint8(offset) === 255) {\n        offset++;\n        payloadType += 255;\n      }\n      payloadType += dv.getUint8(offset++);\n\n      return {\n        payloadType: payloadType,\n        offset: offset\n      };\n    }\n\n    /**\n     *\n     * @param {Uint8Array} data\n     * @return {{ payloadLength: number, offset: number }}\n     */\n\n  }, {\n    key: 'getPayloadLength',\n    value: function getPayloadLength(data) {\n      var dv = new DataView(data.buffer);\n\n      var payloadLength = 0;\n      var offset = 0;\n      while (dv.getUint8(offset) === 255) {\n        offset++;\n        payloadLength += 255;\n      }\n      payloadLength += dv.getUint8(offset++);\n\n      return {\n        payloadLength: payloadLength,\n        offset: offset\n      };\n    }\n\n    /**\n     * resolve 0x05 user data unregistered\n     * @param {Uint8Array} data\n     */\n    // eslint-disable-next-line camelcase\n\n  }, {\n    key: 'user_data_unregistered',\n    value: function user_data_unregistered(data) {\n      var _SEIParser$getPayload = SEIParser.getPayloadLength(data),\n          payloadLength = _SEIParser$getPayload.payloadLength,\n          offset = _SEIParser$getPayload.offset;\n\n      if (payloadLength < 16) {\n        return {\n          uuid: '',\n          content: null\n        };\n      }\n      var payload = data.slice(offset);\n\n      var uuid = u8aToString(payload.slice(0, 16));\n      var content = u8aToString(payload.slice(16, payloadLength));\n\n      return {\n        code: 5, // for user data unregistered\n        uuid: uuid,\n        content: content\n      };\n    }\n  }]);\n\n  return SEIParser;\n}();\n\nexport default SEIParser;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RBSP = function () {\n  function RBSP() {\n    _classCallCheck(this, RBSP);\n  }\n\n  _createClass(RBSP, null, [{\n    key: \"EBSP2RBSP\",\n\n    /**\n     * convert EBSP to RBSP\n     * @param {Uint8Array} data\n     * @returns {Uint8Array}\n     * @constructor\n     */\n    value: function EBSP2RBSP(data) {\n      return data.filter(function (el, idx) {\n        if (idx < 2) {\n          return true;\n        } else {\n          return !(data[idx - 2] === 0 && data[idx - 1] === 0 && el === 3);\n        }\n      });\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @constructor\n     */\n\n  }, {\n    key: \"EBSP2SODB\",\n    value: function EBSP2SODB(data) {\n      var lastByte = data[data.byteLength - 1];\n      if (lastByte && lastByte === 128) {\n        return data.slice(0, data.byteLength - 1);\n      }\n\n      return data;\n    }\n  }]);\n\n  return RBSP;\n}();\n\nexport default RBSP;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS, common, logger } from 'xgplayer-helper-utils';\nimport AAC from '../aac';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar caculate = common.caculate;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    var _this = this;\n\n    _classCallCheck(this, Compatibility);\n\n    this.TAG = 'Compatibility';\n    this.nextAudioDts = 0; // \u6A21\u62DF\u4E0B\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684dts\n    this.nextVideoDts = 0; // \u6A21\u62DF\u4E0B\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684dts\n\n    this.lastAudioSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684\u957F\u5EA6\n    this.lastVideoSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684\u957F\u5EA6\n\n    this.lastVideoDts = undefined; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684\u957F\u5EA6\n    this.lastAudioDts = undefined; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684\u957F\u5EA6\n\n    this.allAudioSamplesCount = 0; // \u97F3\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n    this.allVideoSamplesCount = 0; // \u89C6\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // \u8865\u5145\u97F3\u9891\u5E27\uFF08\uFF09\n    this.filledVideoSamples = []; // \u8865\u5145\u89C6\u9891\u5E27\uFF08\uFF09\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    Object.defineProperties(this, {\n      _videoLargeGap: {\n        set: function set(value) {\n          _this.___videoLargeGap = value;\n          if (value !== 0) {\n            _this.emit(REMUX_EVENTS.DETECT_LARGE_GAP, 'video', value);\n          }\n        },\n        get: function get() {\n          return _this.___videoLargeGap || 0;\n        }\n      },\n      _audioLargeGap: {\n        set: function set(value) {\n          _this.___audioLargeGap = value;\n          if (value !== 0) {\n            _this.emit(REMUX_EVENTS.DETECT_LARGE_GAP, 'audio', value);\n          }\n        },\n        get: function get() {\n          return _this.___audioLargeGap || 0;\n        }\n      }\n    });\n    this.audioUnsyncTime = 0;\n  }\n\n  _createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // \u4F30\u7B97\u4E0B\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684dts\n      this.nextVideoDts = null; // \u4F30\u7B97\u4E0B\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684dts\n\n      this.lastAudioSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684\u957F\u5EA6\n      this.lastVideoSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684\u957F\u5EA6\n\n      this.lastVideoDts = undefined; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684dts\n      this.lastAudioDts = undefined; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684dts\n      this.lastVideoDuration = undefined;\n\n      // this.allAudioSamplesCount = 0 // \u97F3\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n      // this.allVideoSamplesCount = 0 // \u89C6\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n\n      this._audioLargeGap = 0;\n      this._videoLargeGap = 0;\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // \u8865\u5145\u97F3\u9891\u5E27\uFF08\uFF09\n      this.filledVideoSamples = []; // \u8865\u5145\u89C6\u9891\u5E27\uFF08\uFF09\n\n      this.audioUnsyncTime = 0;\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixVideoRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n\n      var _Compatibility$detect = Compatibility.detectChangeStream(this.videoTrack.samples, isFirstVideoSamples),\n          videoChanged = _Compatibility$detect.changed,\n          videoChangedIdxes = _Compatibility$detect.changedIdxes;\n\n      if (videoChanged) {\n        var disContinue = false;\n        for (var i = 0; i < videoChangedIdxes.length; i++) {\n          if (this.fixChangeStreamVideo(videoChangedIdxes[i], isFirstVideoSamples)) {\n            disContinue = true;\n          }\n        }\n        if (!disContinue) {\n          this.doFixVideo(isFirstVideoSamples);\n        }\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detect2 = Compatibility.detectChangeStream(this.audioTrack.samples, isFirstAudioSamples),\n          audioChanged = _Compatibility$detect2.changed,\n          audioChangedIdxes = _Compatibility$detect2.changedIdxes;\n\n      if (audioChanged) {\n        var _disContinue = false;\n        for (var _i = 0; _i < audioChangedIdxes.length; _i++) {\n          if (this.fixChangeStreamAudio(audioChangedIdxes[_i], isFirstAudioSamples)) {\n            _disContinue = true;\n          }\n        }\n        if (!_disContinue) {\n          this.doFixAudio(isFirstAudioSamples);\n        } else {\n          return;\n        }\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      var len = videoSamples.length;\n\n      for (var i = 0; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n        sample.originPts = sample.pts;\n      }\n\n      if (!videoSamples || !len || !this._firstVideoSample) {\n        return;\n      }\n\n      var firstSample = videoSamples[0];\n\n      logger.log(this.TAG, 'doFixVideo:: lastVideoDts: ' + this.lastVideoDts + ' ,  _videoLargeGap: ' + this._videoLargeGap + ' ,streamChangeStart:' + streamChangeStart + ', lastVideoSample:[dts=' + (this.videoLastSample && this.videoLastSample.dts) + ' , pts=' + (this.videoLastSample && this.videoLastSample.pts) + '] ,  firstDTS:' + firstSample.dts + ' ,firstPTS:' + firstSample.pts + ' ,lastDTS:' + videoSamples[len - 1].dts + ' , lastPTS: ' + videoSamples[len - 1].pts);\n\n      // !first: \u975E\u9996\u6B21\u52A0\u8F7D\u7684\u5206\u7247\n      if (!first && this.videoLastSample === null && firstSample.options && firstSample.options.start) {\n        if (streamChangeStart !== undefined) {\n          streamChangeStart = firstSample.options.start;\n        }\n      }\n      if (!first && streamChangeStart === undefined && this.videoLastSample && Compatibility.detectVideoLargeGap(this.videoLastSample ? this.videoLastSample.dts : 0, firstSample.dts + this._videoLargeGap)) {\n        // large gap \u4E0D\u51C6\u786E\uFF0C\u51FA\u73B0\u4E86\u975E\u6362\u6D41\u573A\u666F\u7684\u65F6\u95F4\u6233\u8DF3\u53D8\n        this._videoLargeGap = this.videoLastSample.dts + meta.refSampleDuration - firstSample.dts;\n      }\n      // step0.\u4FEE\u590Dhls\u6D41\u51FA\u73B0\u5DE8\u5927gap\uFF0C\u9700\u8981\u5F3A\u5236\u91CD\u5B9A\u4F4D\u7684\u95EE\u9898\u3002\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n        if (this._videoLargeGap !== this.preVideoGap) {\n          this.preVideoGap = this._videoLargeGap;\n          this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'video', { prevDts: this.videoLastSample && this.videoLastSample.originDts, curDts: firstSample.originDts, duration: meta.refSampleDuration });\n        }\n      }\n\n      if (!first && streamChangeStart !== undefined) {\n        this._videoLargeGap = streamChangeStart - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. \u4FEE\u590D\u4E0Eaudio\u9996\u5E27\u5DEE\u8DDD\u592A\u5927\u7684\u95EE\u9898\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < fillCount; _i2++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // \u89C6\u9891\u5934\u90E8\u5E27\u7F3A\u5931\u9700\u8981\u590D\u5236\u7B2C\u4E00\u5E27\n            // \u91CD\u65B0\u8BA1\u7B97sample\u7684dts\u548Cpts\n            clonedFirstSample.dts = videoFirstDts - (_i2 + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (Math.abs(gap) > 2 * meta.refSampleDuration && !this._videoLargeGap) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      // videoSamples.forEach((sample, idx) => {\n      //   if (idx !== 0 && idx !== videoSamples.length - 1) {\n      //     const pre = videoSamples[idx - 1];\n      //     const next = videoSamples[idx + 1];\n      //     if (sample.dts - pre.dts < 5) {\n      //       sample.dts = (pre.dts + next.dts) / 2\n      //       sample.pts = (pre.pts + next.pts) / 2\n      //     }\n      //   }\n      // })\n\n      this.videoLastSample = curLastSample;\n      if (videoSamples[videoSamples.length - 1]) {\n        this.lastVideoDuration = videoSamples[videoSamples.length - 1].duration;\n        this.lastVideoDts = videoSamples[videoSamples.length - 1].dts;\n      }\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _this2 = this;\n\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      this.fixAudioRefSampleDuration(meta);\n\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n      var iRefSampleDuration = Math.floor(meta.refSampleDuration);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n\n      logger.log(this.TAG, 'doFixAudio:: audioDtsBase:' + this.audioDtsBase + ' ,  _audioLargeGap: ' + this._audioLargeGap + ', streamChangeStart:' + streamChangeStart + ' ,  nextAudioDts:' + this.nextAudioDts + ',  audio: firstDTS:' + _firstSample.dts + ' ,firstPTS:' + _firstSample.pts + ' ,lastDTS:' + audioSamples[samplesLen - 1].dts + ' , lastPTS: ' + audioSamples[samplesLen - 1].pts);\n\n      if (!first && this.nextAudioDts === null && _firstSample.options && _firstSample.options.start) {\n        if (streamChangeStart !== undefined) {\n          streamChangeStart = _firstSample.options.start;\n        }\n      }\n\n      if (!first && streamChangeStart === undefined && this.nextAudioDts && Compatibility.detectAudioLargeGap(this.nextAudioDts || 0, _firstSample.dts + this._audioLargeGap)) {\n        // large gap \u4E0D\u51C6\u786E\uFF0C\u51FA\u73B0\u4E86\u975E\u6362\u6D41\u573A\u666F\u7684\u65F6\u95F4\u6233\u8DF3\u53D8\n        var _audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        this._audioLargeGap = Math.abs(_audioLargeGap - this._videoLargeGap) < 200 ? this._videoLargeGap : _audioLargeGap;\n      }\n\n      // \u5BF9audioSamples\u6309\u7167dts\u505A\u6392\u5E8F\n      if (this._audioLargeGap !== 0) {\n        if (this._audioLargeGap > 0) {\n          Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n        }\n        if (this._audioLargeGap !== this.preAudioGap) {\n          this.preAudioGap = this._audioLargeGap;\n          this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'audio', { prevDts: this.lastAudioOriginDts, curDts: _firstSample.originDts, duration: iRefSampleDuration });\n        }\n      } else if (!first && (streamChangeStart !== undefined || Compatibility.detectAudioLargeGap(this.nextAudioDts, _firstSample.dts))) {\n        if (streamChangeStart !== undefined) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls\u4E2D\u9014\u5207codec\uFF0C\u5728\u5982\u679C\u76F4\u63A5seek\u5230\u540E\u9762\u7684\u70B9\u4F1A\u5BFC\u81F4largeGap\u8BA1\u7B97\u5931\u8D25\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n\n        if (_firstSample.options.start && !_firstSample.options.start.isContinue) {\n          Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n        }\n      }\n      // step0. \u9996\u5E27\u4E0Evideo\u9996\u5E27\u95F4\u8DDD\u5927\u7684\u95EE\u9898\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n\n        if (_gap === this._videoLargeGap) {\n          // already fixed by doFixVideo\\\n        } else if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i3 = 0; _i3 < silentSampleCount; _i3++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i3 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. \u5904\u7406samples\u6BB5\u4E4B\u95F4\u7684\u4E22\u5E27\u60C5\u51B5\n        // \u5F53\u53D1\u73B0duration\u5DEE\u8DDD\u5927\u4E8E1\u5E27\u65F6\u8FDB\u884C\u8865\u5E27\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (gap >= iRefSampleDuration && gap < 10000 && silentFrame) {\n          var silentFrameCount = Math.ceil(gap / iRefSampleDuration);\n\n          for (var _i4 = 0; _i4 < silentFrameCount; _i4++) {\n            var computed = firstDts - (_i4 + 1) * iRefSampleDuration;\n            var _silentSample = {\n              dts: computed > this.nextAudioDts ? computed : this.nextAudioDts,\n              pts: computed > this.nextAudioDts ? computed : this.nextAudioDts,\n              datasize: silentFrame.byteLength,\n              filtered: 0,\n              data: silentFrame\n            };\n\n            this.filledAudioSamples.push({\n              dts: _silentSample.dts,\n              size: _silentSample.data.byteLength\n            });\n            this.audioTrack.samples.unshift(_silentSample);\n            _firstSample = _silentSample;\n          }\n          this.emit(REMUX_EVENTS.DETECT_AUDIO_GAP, gap, silentFrameCount);\n        } else if (absGap < meta.refSampleDuration && absGap > 0) {\n          // \u5F53\u5DEE\u8DDD\u6BD4\u8F83\u5C0F\u7684\u65F6\u5019\u5C06\u97F3\u9891\u5E27\u91CD\u5B9A\u4F4D\n          // console.log('\u91CD\u5B9A\u4F4D\u97F3\u9891\u5E27dts', audioSamples[0].dts, this.nextAudioDts)\n          _firstSample.dts = this.nextAudioDts;\n          _firstSample.pts = this.nextAudioDts;\n        } else if (gap < 0 && absGap < iRefSampleDuration) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n          this.emit(REMUX_EVENTS.DETECT_AUDIO_OVERLAP, gap);\n        }\n      }\n\n      // \u5206\u7247\u5185\u91C7\u6837\u95F4\u8865\u5E27\n      var nextDts = audioSamples[0].dts + iRefSampleDuration;\n      for (var _i5 = 1; _i5 < audioSamples.length;) {\n        var _sample = audioSamples[_i5];\n        var delta = _sample.dts - nextDts;\n        if (delta <= -1 * iRefSampleDuration) {\n          logger.warn('drop 1 audio sample for ' + delta + ' ms overlap');\n          audioSamples.splice(_i5, 1);\n          continue;\n        }\n        if (delta >= 10 * iRefSampleDuration) {\n          var missingCount = Math.round(delta / iRefSampleDuration);\n          if (missingCount > 1000) {\n            break;\n          }\n          logger.warn(this.TAG, 'inject ' + missingCount + ' audio frame for ' + delta + ' ms gap');\n          for (var j = 0; j < missingCount; j++) {\n            var _silentSample2 = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: nextDts,\n              originDts: nextDts,\n              filtered: 0\n            };\n            audioSamples.splice(_i5, 0, _silentSample2);\n            nextDts += iRefSampleDuration;\n            _i5++;\n          }\n          _sample.dts = _sample.pts = _sample.originDts = nextDts;\n          nextDts += iRefSampleDuration;\n          _i5++;\n        } else {\n          _sample.dts = _sample.pts = _sample.originDts = nextDts;\n          nextDts += iRefSampleDuration;\n          _i5++;\n        }\n      }\n\n      var unSyncDuration = meta.refSampleDuration - iRefSampleDuration;\n      audioSamples.forEach(function (sample, idx) {\n        if (idx !== 0) {\n          var _lastSample = audioSamples[idx - 1];\n          sample.dts = sample.pts = _lastSample.dts + _lastSample.duration;\n        }\n        sample.duration = iRefSampleDuration;\n        _this2.audioUnsyncTime = _this2.audioUnsyncTime + unSyncDuration;\n        if (_this2.audioUnsyncTime >= 1) {\n          sample.duration += 1;\n          _this2.audioUnsyncTime -= 1;\n        }\n      });\n\n      var lastSample = audioSamples[audioSamples.length - 1];\n      this.lastAudioDts = lastSample.dts;\n      var lastDuration = lastSample.duration;\n      // const lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = this.lastAudioDts + (lastDuration || iRefSampleDuration);\n      this.lastAudioOriginDts = lastSample.originDts;\n\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      logger.log(this.TAG, 'fixChangeStreamVideo(), changeIdx=', changeIdx);\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var preDuration = changeIdx === 0 ? this.lastVideoDuration ? this.lastVideoDuration : meta.refSampleDuration : meta.refSampleDuration;\n      var prevDts = changeIdx === 0 ? this.lastVideoDts ? this.lastVideoDts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 10000;\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM, 'video', curDts);\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return false;\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'video', { prevDts: prevDts, curDts: curDts, duration: preDuration });\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var changeSample = samples[changeIdx];\n\n      var streamChangeStart = void 0;\n\n      this._videoLargeGap = 0;\n      this.videoLastSample = null;\n      this.lastVideoDts = null;\n      this.lastVideoDuration = null;\n      if (changeSample.options && changeSample.options.start !== undefined) {\n        streamChangeStart = changeSample.options.start;\n      } else {\n        streamChangeStart = prevDts - this.videoDtsBase;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n\n      return true;\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      logger.log(this.TAG, 'fixChangeStreamAudio(), changeIdx=', changeIdx);\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.lastAudioDts : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 10000;\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM, 'audio', curDts);\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return false;\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'audio', { prevDts: prevDts, curDts: curDts, duration: meta.refSampleDuration });\n      this._audioLargeGap = 0;\n      var cacheNextAudioDts = this.nextAudioDts;\n      this.nextAudioDts = null;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var changeSample = samples[changeIdx];\n\n      var streamChangeStart = void 0;\n      if (changeSample.options && changeSample.options.start !== undefined) {\n        streamChangeStart = changeSample.options.start;\n      } else {\n        streamChangeStart = cacheNextAudioDts;\n        changeSample.options.isContinue = true;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n\n      return true;\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // \u83B7\u53D6video\u548Caudio\u7684\u9996\u5E27\u6570\u636E\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // \u5BFB\u627Edts\u6700\u5C0F\u7684\u5E27\u4F5C\u4E3A\u9996\u4E2A\u97F3\u9891\u5E27\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * \u5728\u6CA1\u6709refSampleDuration\u7684\u95EE\u9898\u6D41\u4E2D\uFF0C\n     */\n\n  }, {\n    key: 'fixVideoRefSampleDuration',\n    value: function fixVideoRefSampleDuration(meta, samples) {\n      if (!meta) {\n        return;\n      }\n      var allSamplesCount = this.allVideoSamplesCount;\n      var firstDts = this._firstVideoSample.dts;\n      var filledSamplesCount = this.filledVideoSamples.length;\n      if (!Compatibility.isRefSampleDurationValid(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          var fixed = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // \u5C06refSampleDuration\u91CD\u7F6E\u4E3A\u8BA1\u7B97\u540E\u7684\u5E73\u5747\u503C\n\n          if (Compatibility.isRefSampleDurationValid(fixed)) {\n            meta.refSampleDuration = fixed;\n          }\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            var _fixed = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // \u5C06refSampleDuration\u91CD\u7F6E\u4E3A\u8BA1\u7B97\u540E\u7684\u5E73\u5747\u503C\n            if (Compatibility.isRefSampleDurationValid(_fixed)) {\n              meta.refSampleDuration = _fixed;\n            }\n          }\n        }\n      }\n\n      if (!Compatibility.isRefSampleDurationValid(meta.refSampleDuration)) {\n        meta.refSampleDuration = 66;\n      }\n    }\n  }, {\n    key: 'fixAudioRefSampleDuration',\n    value: function fixAudioRefSampleDuration(meta) {\n      if (!meta) {\n        return;\n      }\n      meta.refSampleDuration = meta.timescale * 1024 / meta.sampleRate;\n    }\n\n    /**\n     * \u8BB0\u5F55\u622A\u6B62\u76EE\u524D\u4E00\u5171\u64AD\u653E\u4E86\u591A\u5C11\u5E27\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * \u53BB\u9664\u4E0D\u5408\u6CD5\u7684\u5E27\uFF08\u5012\u9000\u3001\u91CD\u590D\u5E27\uFF09\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var firstAudioSample = this.audioTrack.samples[0];\n      var firstVideoSample = this.videoTrack.samples[0];\n      // const { _firstVideoSample, _firstAudioSample } = this\n\n      if (firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === firstAudioSample) {\n            return true;\n          }\n          return sample.dts >= firstAudioSample.dts;\n        });\n      }\n\n      if (firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === firstVideoSample) {\n            return true;\n          }\n          return sample.dts >= firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }, {\n    key: 'audioDtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer && remuxer._audioDtsBase !== null) {\n        return remuxer._audioDtsBase;\n      }\n\n      return this.dtsBase;\n    }\n  }, {\n    key: 'videoDtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer && remuxer._videoDtsBase !== null) {\n        return remuxer._videoDtsBase;\n      }\n\n      return this.dtsBase;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return [].concat(_toConsumableArray(samples)).sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n  }, {\n    key: 'isRefSampleDurationValid',\n    value: function isRefSampleDurationValid(refSampleDuration) {\n      return refSampleDuration && refSampleDuration > 0 && !Number.isNaN(refSampleDuration);\n    }\n    /**\n     * \u5BFB\u627Edts\u6700\u5C0F\u7684sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = [].concat(_toConsumableArray(samples)).sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectVideoLargeGap',\n    value: function detectVideoLargeGap(nextDts, firstSampleDts) {\n      if (nextDts === null) {\n        return;\n      }\n      var delta = 10000;\n      return nextDts - firstSampleDts >= delta || firstSampleDts - nextDts >= delta; // fix hls\u6D41\u51FA\u73B0\u5927\u91CF\u6D41dts\u95F4\u8DDD\u95EE\u9898\n    }\n  }, {\n    key: 'detectAudioLargeGap',\n    value: function detectAudioLargeGap(nextDts, firstSampleDts) {\n      if (nextDts === null) {\n        return;\n      }\n      return nextDts - firstSampleDts >= 1000 || firstSampleDts - nextDts >= 1000; // fix hls\u6D41\u51FA\u73B0\u5927\u91CF\u6D41dts\u95F4\u8DDD\u95EE\u9898\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap...... ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * \u4E2D\u9014\u6362\u6D41\n     *         |-------------------frag2---------------|\n     * | frag1 | -----sample 0~n -------sample n+1 ~ m |\n     *\n     * \u6362\u6D41\u53EF\u80FD\u5F00\u59CB\u4E8E\u65B0\u5206\u7247\u7684\u7B2C\u4E00\u5E27 \u6216\u8005\u5206\u7247\u4E2D\u95F4\n     *\n     */\n\n  }, {\n    key: 'detectChangeStream',\n    value: function detectChangeStream(samples, isFirst) {\n      var changed = false;\n      var changedIdxes = [];\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        if (sample.options && sample.options.meta && !(isFirst && i === 0)) {\n          changed = true;\n          changedIdxes.push(i);\n          // break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdxes: changedIdxes\n      };\n    }\n  }]);\n\n  return Compatibility;\n}();\n\nexport default Compatibility;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS, common, logger } from 'xgplayer-helper-utils';\nimport AAC from '../aac';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar caculate = common.caculate;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    var _this = this;\n\n    _classCallCheck(this, Compatibility);\n\n    this.TAG = 'Compatibility';\n    this.nextAudioDts = 0; // \u6A21\u62DF\u4E0B\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684dts\n    this.nextVideoDts = 0; // \u6A21\u62DF\u4E0B\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684dts\n\n    this.lastAudioSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684\u957F\u5EA6\n    this.lastVideoSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684\u957F\u5EA6\n\n    this.lastVideoDts = undefined; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684\u957F\u5EA6\n    this.lastAudioDts = undefined; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684\u957F\u5EA6\n\n    this.allAudioSamplesCount = 0; // \u97F3\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n    this.allVideoSamplesCount = 0; // \u89C6\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // \u8865\u5145\u97F3\u9891\u5E27\uFF08\uFF09\n    this.filledVideoSamples = []; // \u8865\u5145\u89C6\u9891\u5E27\uFF08\uFF09\n\n    this._lastSegmentId = 0;\n    this._currentSegmentId = 0;\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    Object.defineProperties(this, {\n      _videoLargeGap: {\n        set: function set(value) {\n          _this.___videoLargeGap = value;\n          if (value !== 0) {\n            _this.emit(REMUX_EVENTS.DETECT_LARGE_GAP, 'video', value);\n          }\n        },\n        get: function get() {\n          return _this.___videoLargeGap || 0;\n        }\n      },\n      _audioLargeGap: {\n        set: function set(value) {\n          _this.___audioLargeGap = value;\n          if (value !== 0) {\n            _this.emit(REMUX_EVENTS.DETECT_LARGE_GAP, 'audio', value);\n          }\n        },\n        get: function get() {\n          return _this.___audioLargeGap || 0;\n        }\n      }\n    });\n    this.audioUnsyncTime = 0;\n  }\n\n  _createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // \u4F30\u7B97\u4E0B\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684dts\n      this.nextVideoDts = null; // \u4F30\u7B97\u4E0B\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684dts\n\n      this.lastAudioSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684\u957F\u5EA6\n      this.lastVideoSamplesLen = 0; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684\u957F\u5EA6\n\n      this.lastVideoDts = undefined; // \u4E0A\u4E00\u6BB5\u97F3\u9891\u6570\u636E\u7684dts\n      this.lastAudioDts = undefined; // \u4E0A\u4E00\u6BB5\u89C6\u9891\u6570\u636E\u7684dts\n\n      // this.allAudioSamplesCount = 0 // \u97F3\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n      // this.allVideoSamplesCount = 0 // \u89C6\u9891\u603B\u6570\u636E\u91CF(\u539F\u59CB\u5E27)\n\n      this._audioLargeGap = 0;\n      this._videoLargeGap = 0;\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // \u8865\u5145\u97F3\u9891\u5E27\uFF08\uFF09\n      this.filledVideoSamples = []; // \u8865\u5145\u89C6\u9891\u5E27\uFF08\uFF09\n\n      this.audioUnsyncTime = 0;\n    }\n  }, {\n    key: '_isSegmentsContinuous',\n    value: function _isSegmentsContinuous() {\n      return this._lastSegmentId === 0 || this._currentSegmentId - this._lastSegmentId === 1;\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var ops = void 0;\n      var vSamp0 = void 0;\n      var aSamp0 = void 0;\n      var avDelta = 0;\n      if (this.videoTrack.samples.length) {\n        vSamp0 = this.videoTrack.samples[0];\n        ops = vSamp0.options;\n        if (logger.long) {\n          logger.log(this.TAG, this.videoTrack.samples.slice());\n        }\n      }\n\n      if (this.audioTrack.samples.length) {\n        aSamp0 = this.audioTrack.samples[0];\n        if (logger.long) {\n          logger.log(this.TAG, this.audioTrack.samples.slice());\n        }\n      }\n\n      if (vSamp0 && aSamp0) {\n        avDelta = aSamp0.dts - vSamp0.dts;\n      }\n\n      // eslint-disable-next-line no-mixed-operators\n      this._currentSegmentId = ops && ops.id || this._currentSegmentId + 1;\n\n      logger.log(this.TAG, 'lastSeg:' + this._lastSegmentId + ' , currentSeg:' + this._currentSegmentId + ', discontinue:' + (ops && ops.discontinue) + ' vSamp0:' + (vSamp0 && vSamp0.dts) + ' aSamp0:' + (aSamp0 && aSamp0.dts));\n\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixVideoRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n\n      var _Compatibility$detect = Compatibility.detectChangeStream(this.videoTrack.samples, isFirstVideoSamples),\n          videoChanged = _Compatibility$detect.changed,\n          videoChangedIdxes = _Compatibility$detect.changedIdxes;\n\n      if (videoChanged) {\n        var disContinue = false;\n        for (var i = 0; i < videoChangedIdxes.length; i++) {\n          if (this.fixChangeStreamVideo(videoChangedIdxes[i], isFirstVideoSamples)) {\n            disContinue = true;\n          }\n        }\n        if (!disContinue) {\n          this.doFixVideo(isFirstVideoSamples);\n        }\n      } else {\n        if (!this._isSegmentsContinuous() && ops && ops.start !== undefined) {\n          this.videoLastSample = null;\n          var start = ops.start;\n          // id \u4E0D\u8FDE\u7EED\u65F6\u8003\u8651\u4E0Aav\u4E4B\u95F4\u7684\u5DEE\u503C\n          if (avDelta < 0) {\n            start -= avDelta;\n          }\n          logger.log(this.TAG, 'fix video for _isSegmentsContinuous()\uFF0C delta:', avDelta);\n          this.doFixVideo(isFirstVideoSamples, start);\n          this.emit(REMUX_EVENTS.DETECT_FRAG_ID_DISCONTINUE, ops.start / 1000);\n        } else {\n          this.doFixVideo(isFirstVideoSamples);\n        }\n      }\n\n      this._appendSampleForLastSegment(ops && ops.isLast);\n\n      var _Compatibility$detect2 = Compatibility.detectChangeStream(this.audioTrack.samples, isFirstAudioSamples),\n          audioChanged = _Compatibility$detect2.changed,\n          audioChangedIdxes = _Compatibility$detect2.changedIdxes;\n\n      if (audioChanged) {\n        var _disContinue = false;\n        for (var _i = 0; _i < audioChangedIdxes.length; _i++) {\n          if (this.fixChangeStreamAudio(audioChangedIdxes[_i], isFirstAudioSamples)) {\n            _disContinue = true;\n          }\n        }\n        if (!_disContinue) {\n          this.doFixAudio(isFirstAudioSamples);\n        } else {\n          return;\n        }\n      } else {\n        if (!this._isSegmentsContinuous() && ops && ops.start !== undefined) {\n          logger.log(this.TAG, 'fix audio for _isSegmentsContinuous()');\n          var sam0 = this.audioTrack.samples[0];\n          this.nextAudioDts = ops.start || sam0 && sam0.dts;\n          this.doFixAudio(isFirstAudioSamples, ops.start);\n          this.emit(REMUX_EVENTS.DETECT_FRAG_ID_DISCONTINUE, ops.start / 1000);\n        } else {\n          this.doFixAudio(isFirstAudioSamples);\n        }\n      }\n\n      this.removeInvalidSamples();\n\n      this._lastSegmentId = this._currentSegmentId;\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      var len = videoSamples.length;\n\n      for (var i = 0; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n        sample.originPts = sample.pts;\n      }\n\n      if (!videoSamples || !len || !this._firstVideoSample) {\n        return;\n      }\n\n      var firstSample = videoSamples[0];\n\n      logger.log(this.TAG, 'doFixVideo:: lastVideoDts: ' + this.lastVideoDts + ' ,  _videoLargeGap: ' + this._videoLargeGap + ' ,streamChangeStart:' + streamChangeStart + ', lastVideoSample:[dts=' + (this.videoLastSample && this.videoLastSample.dts) + ' , pts=' + (this.videoLastSample && this.videoLastSample.pts) + '] ,  firstDTS:' + firstSample.dts + ' ,firstPTS:' + firstSample.pts + ' ,lastDTS:' + videoSamples[len - 1].dts + ' , lastPTS: ' + videoSamples[len - 1].pts);\n\n      if (!first && streamChangeStart === undefined && this.videoLastSample && Compatibility.detectVideoLargeGap(this.videoLastSample ? this.videoLastSample.dts : 0, firstSample.dts + this._videoLargeGap)) {\n        // large gap \u4E0D\u51C6\u786E\uFF0C\u51FA\u73B0\u4E86\u975E\u6362\u6D41\u573A\u666F\u7684\u65F6\u95F4\u6233\u8DF3\u53D8\n        this._videoLargeGap = this.videoLastSample.dts + meta.refSampleDuration - firstSample.dts;\n      }\n      // step0.\u4FEE\u590Dhls\u6D41\u51FA\u73B0\u5DE8\u5927gap\uFF0C\u9700\u8981\u5F3A\u5236\u91CD\u5B9A\u4F4D\u7684\u95EE\u9898\u3002\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n        if (this._videoLargeGap !== this.preVideoGap) {\n          this.preVideoGap = this._videoLargeGap;\n          this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'video', { prevDts: this.videoLastSample && this.videoLastSample.originDts, curDts: firstSample.originDts });\n        }\n      }\n\n      if (!first && streamChangeStart !== undefined && streamChangeStart !== 0) {\n        this._videoLargeGap = streamChangeStart - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. \u4FEE\u590D\u4E0Eaudio\u9996\u5E27\u5DEE\u8DDD\u592A\u5927\u7684\u95EE\u9898\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < fillCount; _i2++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // \u89C6\u9891\u5934\u90E8\u5E27\u7F3A\u5931\u9700\u8981\u590D\u5236\u7B2C\u4E00\u5E27\n            // \u91CD\u65B0\u8BA1\u7B97sample\u7684dts\u548Cpts\n            clonedFirstSample.dts = videoFirstDts - (_i2 + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (Math.abs(gap) > 2 * meta.refSampleDuration && !this._videoLargeGap) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      // \u5206\u7247\u4E2D\u95F4\u65F6\u95F4\u6233\u8DF3\u53D8\n      var segLen = videoSamples.length;\n      for (var _i3 = 1; _i3 < segLen; _i3++) {\n        var c = videoSamples[_i3];\n        var pre = videoSamples[_i3 - 1];\n        var cts = c.dts - c.pts;\n        if (Math.abs(cts) < 2000) {\n          // \u5355\u5E27 dts\u3001pts\u5DEE\u8DDD\u4E0D\u5927\n          if (Math.abs(c.dts - pre.dts) > 10000) {\n            c.dts = pre.dts + meta.refSampleDuration;\n            c.pts = pre.pts + meta.refSampleDuration;\n          }\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      // \u5206\u7247 < 4\u5E27,\u4E0D\u80FD\u8D77\u64AD\u7684\n      if (segLen < 4) {\n        var _sample = videoSamples[videoSamples.length - 1];\n        _sample = _sample || curLastSample;\n        var duration = _sample.options && _sample.options.duration;\n        var refDuration = meta.refSampleDuration;\n        if (duration && refDuration && duration / refDuration > 5) {\n          var pts = _sample.pts;\n          var dts = _sample.dts;\n          for (var _i4 = 0; _i4 < 3; _i4++) {\n            dts += refDuration;\n            pts += refDuration;\n            var sam = Object.assign({}, _sample, { dts: dts, pts: pts });\n            if (_i4 === 2) {\n              // \u6700\u540E\u4E00\u5E27\u62C9\u957Fduration\n              sam.duration = duration;\n            }\n            videoSamples.push(sam);\n          }\n        }\n        curLastSample = null;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      // videoSamples.forEach((sample, idx) => {\n      //   if (idx !== 0 && idx !== videoSamples.length - 1) {\n      //     const pre = videoSamples[idx - 1];\n      //     const next = videoSamples[idx + 1];\n      //     if (sample.dts - pre.dts < 5) {\n      //       sample.dts = (pre.dts + next.dts) / 2\n      //       sample.pts = (pre.pts + next.pts) / 2\n      //     }\n      //   }\n      // })\n\n      this.videoLastSample = curLastSample;\n      if (videoSamples[videoSamples.length - 1]) {\n        this.lastVideoDts = videoSamples[videoSamples.length - 1].dts;\n      }\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: '_appendSampleForLastSegment',\n    value: function _appendSampleForLastSegment(isLast) {\n      if (isLast && this.videoLastSample) {\n        this.videoTrack.samples.push(this.videoLastSample);\n      }\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _this2 = this;\n\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      this.fixAudioRefSampleDuration(meta);\n\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.originCodec, meta.channelCount);\n      var iRefSampleDuration = Math.floor(meta.refSampleDuration);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n\n      logger.log(this.TAG, 'doFixAudio:: audioDtsBase:' + this.audioDtsBase + ' ,  _audioLargeGap: ' + this._audioLargeGap + ', streamChangeStart:' + streamChangeStart + ' ,  nextAudioDts:' + this.nextAudioDts + ',  audio: firstDTS:' + _firstSample.dts + ' ,firstPTS:' + _firstSample.pts + ' ,lastDTS:' + audioSamples[samplesLen - 1].dts + ' , lastPTS: ' + audioSamples[samplesLen - 1].pts);\n\n      if (!first && this.nextAudioDts === null && _firstSample.options && _firstSample.options.start) {\n        if (streamChangeStart !== undefined) {\n          streamChangeStart = _firstSample.options.start;\n        }\n      }\n\n      if (!first && streamChangeStart === undefined && this.nextAudioDts && Compatibility.detectAudioLargeGap(this.nextAudioDts || 0, _firstSample.dts + this._audioLargeGap)) {\n        // large gap \u4E0D\u51C6\u786E\uFF0C\u51FA\u73B0\u4E86\u975E\u6362\u6D41\u573A\u666F\u7684\u65F6\u95F4\u6233\u8DF3\u53D8\n        var _audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        this._audioLargeGap = Math.abs(_audioLargeGap - this._videoLargeGap) < 200 ? this._videoLargeGap : _audioLargeGap;\n      }\n\n      // \u5BF9audioSamples\u6309\u7167dts\u505A\u6392\u5E8F\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n        if (this._audioLargeGap !== this.preAudioGap) {\n          this.preAudioGap = this._audioLargeGap;\n          this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'audio', { prevDts: this.lastAudioOriginDts, curDts: _firstSample.originDts });\n        }\n      } else if (!first && (streamChangeStart !== undefined || Compatibility.detectAudioLargeGap(this.nextAudioDts, _firstSample.dts))) {\n        if (streamChangeStart !== undefined && streamChangeStart !== 0) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls\u4E2D\u9014\u5207codec\uFF0C\u5728\u5982\u679C\u76F4\u63A5seek\u5230\u540E\u9762\u7684\u70B9\u4F1A\u5BFC\u81F4largeGap\u8BA1\u7B97\u5931\u8D25\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n\n        if (_firstSample.options.start && !_firstSample.options.start.isContinue) {\n          Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n        }\n      }\n      // step0. \u9996\u5E27\u4E0Evideo\u9996\u5E27\u95F4\u8DDD\u5927\u7684\u95EE\u9898\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n\n        if (_gap === this._videoLargeGap) {\n          // already fixed by doFixVideo\\\n        } else if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n          logger.warn(this.TAG, 'fill ' + silentSampleCount + ' frames for av align');\n          for (var _i5 = 0; _i5 < silentSampleCount; _i5++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i5 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. \u5904\u7406samples\u6BB5\u4E4B\u95F4\u7684\u4E22\u5E27\u60C5\u51B5\n        // \u5F53\u53D1\u73B0duration\u5DEE\u8DDD\u5927\u4E8E1\u5E27\u65F6\u8FDB\u884C\u8865\u5E27\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (gap >= iRefSampleDuration && gap < 10000 && silentFrame) {\n          var silentFrameCount = Math.ceil(gap / iRefSampleDuration);\n\n          for (var _i6 = 0; _i6 < silentFrameCount; _i6++) {\n            var computed = firstDts - (_i6 + 1) * iRefSampleDuration;\n            var _silentSample = {\n              dts: computed > this.nextAudioDts ? computed : this.nextAudioDts,\n              pts: computed > this.nextAudioDts ? computed : this.nextAudioDts,\n              datasize: silentFrame.byteLength,\n              filtered: 0,\n              data: silentFrame\n            };\n\n            this.filledAudioSamples.push({\n              dts: _silentSample.dts,\n              size: _silentSample.data.byteLength\n            });\n            this.audioTrack.samples.unshift(_silentSample);\n            _firstSample = _silentSample;\n          }\n          this.emit(REMUX_EVENTS.DETECT_AUDIO_GAP, gap, silentFrameCount);\n        } else if (absGap < meta.refSampleDuration && absGap > 0) {\n          // \u5F53\u5DEE\u8DDD\u6BD4\u8F83\u5C0F\u7684\u65F6\u5019\u5C06\u97F3\u9891\u5E27\u91CD\u5B9A\u4F4D\n          // console.log('\u91CD\u5B9A\u4F4D\u97F3\u9891\u5E27dts', audioSamples[0].dts, this.nextAudioDts)\n          _firstSample.dts = this.nextAudioDts;\n          _firstSample.pts = this.nextAudioDts;\n        } else if (gap < 0 && absGap < iRefSampleDuration) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n          this.emit(REMUX_EVENTS.DETECT_AUDIO_OVERLAP, gap);\n        }\n      }\n\n      // \u5206\u7247\u5185\u91C7\u6837\u95F4\u8865\u5E27\n      var nextDts = audioSamples[0].dts + iRefSampleDuration;\n      for (var _i7 = 1; _i7 < audioSamples.length;) {\n        var _sample2 = audioSamples[_i7];\n        var delta = _sample2.dts - nextDts;\n        if (delta <= -1 * iRefSampleDuration) {\n          logger.warn('drop 1 audio sample for ' + delta + ' ms overlap');\n          audioSamples.splice(_i7, 1);\n          continue;\n        }\n        if (delta >= 10 * iRefSampleDuration) {\n          var missingCount = Math.round(delta / iRefSampleDuration);\n          if (missingCount > 1000) {\n            break;\n          }\n          logger.warn(this.TAG, 'inject ' + missingCount + ' audio frame for ' + delta + ' ms gap, index=' + _i7);\n          for (var j = 0; j < missingCount; j++) {\n            var _silentSample2 = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: nextDts,\n              originDts: nextDts,\n              filtered: 0\n            };\n            audioSamples.splice(_i7, 0, _silentSample2);\n            nextDts += iRefSampleDuration;\n            _i7++;\n          }\n          _sample2.dts = _sample2.pts = _sample2.originDts = nextDts;\n          nextDts += iRefSampleDuration;\n          _i7++;\n        } else {\n          _sample2.dts = _sample2.pts = _sample2.originDts = nextDts;\n          nextDts += iRefSampleDuration;\n          _i7++;\n        }\n      }\n\n      var unSyncDuration = meta.refSampleDuration - iRefSampleDuration;\n      audioSamples.forEach(function (sample, idx) {\n        if (idx !== 0) {\n          var _lastSample = audioSamples[idx - 1];\n          sample.dts = sample.pts = _lastSample.dts + _lastSample.duration;\n        }\n        sample.duration = iRefSampleDuration;\n        _this2.audioUnsyncTime = _this2.audioUnsyncTime + unSyncDuration;\n        if (_this2.audioUnsyncTime >= 1) {\n          sample.duration += 1;\n          _this2.audioUnsyncTime -= 1;\n        }\n      });\n\n      var lastSample = audioSamples[audioSamples.length - 1];\n      this.lastAudioDts = lastSample.dts;\n      var lastDuration = lastSample.duration;\n      // const lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = this.lastAudioDts + (lastDuration || iRefSampleDuration);\n      this.lastAudioOriginDts = lastSample.originDts;\n\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      logger.log(this.TAG, 'fixChangeStreamVideo(), changeIdx=', changeIdx);\n      var samples = this.videoTrack.samples;\n\n      var prevDts = changeIdx === 0 ? this.lastVideoDts ? this.lastVideoDts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 10000;\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM, 'video', curDts);\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return false;\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'video', { prevDts: prevDts, curDts: curDts });\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var changeSample = samples[changeIdx];\n\n      var streamChangeStart = void 0;\n\n      this._videoLargeGap = 0;\n      this.videoLastSample = null;\n      this.lastVideoDts = null;\n      if (changeSample.options && changeSample.options.start !== undefined) {\n        streamChangeStart = changeSample.options.start;\n      } else {\n        streamChangeStart = prevDts - this.videoDtsBase;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n\n      return true;\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      logger.log(this.TAG, 'fixChangeStreamAudio(), changeIdx=', changeIdx);\n      var samples = this.audioTrack.samples;\n\n\n      var prevDts = changeIdx === 0 ? this.lastAudioDts : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 10000;\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM, 'audio', curDts);\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return false;\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE, 'audio', { prevDts: prevDts, curDts: curDts });\n      this._audioLargeGap = 0;\n      var cacheNextAudioDts = this.nextAudioDts;\n      this.nextAudioDts = null;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var changeSample = samples[changeIdx];\n\n      var streamChangeStart = void 0;\n      if (changeSample.options && changeSample.options.start !== undefined) {\n        streamChangeStart = changeSample.options.start;\n      } else {\n        streamChangeStart = cacheNextAudioDts;\n        changeSample.options.isContinue = true;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n\n      return true;\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // \u83B7\u53D6video\u548Caudio\u7684\u9996\u5E27\u6570\u636E\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // \u5BFB\u627Edts\u6700\u5C0F\u7684\u5E27\u4F5C\u4E3A\u9996\u4E2A\u97F3\u9891\u5E27\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * \u5728\u6CA1\u6709refSampleDuration\u7684\u95EE\u9898\u6D41\u4E2D\uFF0C\n     */\n\n  }, {\n    key: 'fixVideoRefSampleDuration',\n    value: function fixVideoRefSampleDuration(meta, samples) {\n      if (!meta) {\n        return;\n      }\n      var allSamplesCount = this.allVideoSamplesCount;\n      var firstDts = this._firstVideoSample.dts;\n      var filledSamplesCount = this.filledVideoSamples.length;\n      if (!Compatibility.isRefSampleDurationValid(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          var fixed = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // \u5C06refSampleDuration\u91CD\u7F6E\u4E3A\u8BA1\u7B97\u540E\u7684\u5E73\u5747\u503C\n\n          if (Compatibility.isRefSampleDurationValid(fixed)) {\n            meta.refSampleDuration = fixed;\n          }\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            var _fixed = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // \u5C06refSampleDuration\u91CD\u7F6E\u4E3A\u8BA1\u7B97\u540E\u7684\u5E73\u5747\u503C\n            if (Compatibility.isRefSampleDurationValid(_fixed)) {\n              meta.refSampleDuration = _fixed;\n            }\n          }\n        }\n      }\n\n      if (!Compatibility.isRefSampleDurationValid(meta.refSampleDuration)) {\n        meta.refSampleDuration = 66;\n      }\n    }\n  }, {\n    key: 'fixAudioRefSampleDuration',\n    value: function fixAudioRefSampleDuration(meta) {\n      if (!meta) {\n        return;\n      }\n      meta.refSampleDuration = meta.timescale * 1024 / meta.sampleRate;\n    }\n\n    /**\n     * \u8BB0\u5F55\u622A\u6B62\u76EE\u524D\u4E00\u5171\u64AD\u653E\u4E86\u591A\u5C11\u5E27\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * \u53BB\u9664\u4E0D\u5408\u6CD5\u7684\u5E27\uFF08\u5012\u9000\u3001\u91CD\u590D\u5E27\uFF09\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var firstAudioSample = this.audioTrack.samples[0];\n      var firstVideoSample = this.videoTrack.samples[0];\n      // const { _firstVideoSample, _firstAudioSample } = this\n\n      if (firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === firstAudioSample) {\n            return true;\n          }\n          return sample.dts >= firstAudioSample.dts;\n        });\n      }\n\n      if (firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === firstVideoSample) {\n            return true;\n          }\n          return sample.dts >= firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }, {\n    key: 'audioDtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer && remuxer._audioDtsBase !== null) {\n        return remuxer._audioDtsBase;\n      }\n\n      return this.dtsBase;\n    }\n  }, {\n    key: 'videoDtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer && remuxer._videoDtsBase !== null) {\n        return remuxer._videoDtsBase;\n      }\n\n      return this.dtsBase;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return [].concat(_toConsumableArray(samples)).sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n  }, {\n    key: 'isRefSampleDurationValid',\n    value: function isRefSampleDurationValid(refSampleDuration) {\n      return refSampleDuration && refSampleDuration > 0 && !Number.isNaN(refSampleDuration);\n    }\n    /**\n     * \u5BFB\u627Edts\u6700\u5C0F\u7684sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = [].concat(_toConsumableArray(samples)).sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectVideoLargeGap',\n    value: function detectVideoLargeGap(nextDts, firstSampleDts) {\n      if (nextDts === null) {\n        return;\n      }\n      var delta = 1000;\n      return nextDts - firstSampleDts >= delta || firstSampleDts - nextDts >= delta; // fix hls\u6D41\u51FA\u73B0\u5927\u91CF\u6D41dts\u95F4\u8DDD\u95EE\u9898\n    }\n  }, {\n    key: 'detectAudioLargeGap',\n    value: function detectAudioLargeGap(nextDts, firstSampleDts) {\n      if (nextDts === null) {\n        return;\n      }\n      return nextDts - firstSampleDts >= 1000 || firstSampleDts - nextDts >= 1000; // fix hls\u6D41\u51FA\u73B0\u5927\u91CF\u6D41dts\u95F4\u8DDD\u95EE\u9898\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap...... ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n      var first = samples[0];\n      if (first && first.dts === 0) {\n        first.dts = first.pts = 1;\n      }\n    }\n\n    /**\n     * \u4E2D\u9014\u6362\u6D41\n     *         |-------------------frag2---------------|\n     * | frag1 | -----sample 0~n -------sample n+1 ~ m |\n     *\n     * \u6362\u6D41\u53EF\u80FD\u5F00\u59CB\u4E8E\u65B0\u5206\u7247\u7684\u7B2C\u4E00\u5E27 \u6216\u8005\u5206\u7247\u4E2D\u95F4\n     *\n     */\n\n  }, {\n    key: 'detectChangeStream',\n    value: function detectChangeStream(samples, isFirst) {\n      var changed = false;\n      var changedIdxes = [];\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        if (sample.options && sample.options.meta && !(isFirst && i === 0)) {\n          changed = true;\n          changedIdxes.push(i);\n          // break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdxes: changedIdxes\n      };\n    }\n  }]);\n\n  return Compatibility;\n}();\n\nexport default Compatibility;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UTF8 = function () {\n  function UTF8() {\n    _classCallCheck(this, UTF8);\n  }\n\n  _createClass(UTF8, null, [{\n    key: 'decode',\n\n    /**\n     *\n     * @param {Uint8Array} uint8array\n     * @return {string}\n     */\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return UTF8;\n}();\n\nexport default UTF8;", "import FlvDemuxer from './flv';\nimport TsDemuxer from './hls/ts';\nimport M3U8Parser from './hls/m3u8';\nimport Mp4Remuxer from './mp4-remux';\nimport Mp4Box from './mp4-remux/mp4-remuxer';\n\nexport { FlvDemuxer, TsDemuxer, M3U8Parser, Mp4Remuxer, Mp4Box };", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Demuxer from './demuxer';\nimport { AudioTrackMeta, VideoTrackMeta, VideoTrack, AudioTrack } from 'xgplayer-helper-models';\nimport { EVENTS } from 'xgplayer-helper-utils';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar INTERNAL_EVENTS = Demuxer.EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    _classCallCheck(this, FlvDemuxer);\n\n    this.TAG = 'FLV_DEMUXER';\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n    this._videoMetaChange = false;\n    this._audioMetaChange = false;\n    this._hasVideoSequence = false;\n    this._hasAudioSequence = false;\n    this.demuxer = new Demuxer();\n  }\n\n  _createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.FILE_HEADER_PARSED, this.handleFileHeaderParsed.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.SCRIPT_TAG_PARSED, this.handleScriptTagParsed.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.AUDIO_META_PARSED, this.handleAudioMetaParsed.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.VIDEO_META_PARSED, this.handleVideoMetaParsed.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.VIDEO_SAMPLE_PARSED, this.handleVideoSampleParsed.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.AUDIO_SAMPLE_PARSED, this.handleAudioSampleParsed.bind(this));\n      this.demuxer.on(INTERNAL_EVENTS.VIDEO_SEI_PARSED, this.handleSeiParsed.bind(this));\n    }\n  }, {\n    key: 'handleAudioMetaParsed',\n    value: function handleAudioMetaParsed(meta) {\n      if (!this.tracks || !this.tracks.audioTrack) {\n        return;\n      }\n      this._context.mediaInfo.hasAudio = true;\n      this.tracks.audioTrack.meta = meta;\n      if (!this._hasAudioSequence) {\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n      } else {\n        this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n      }\n    }\n  }, {\n    key: 'handleVideoMetaParsed',\n    value: function handleVideoMetaParsed(meta) {\n      if (!this.tracks || !this.tracks.videoTrack) {\n        return;\n      }\n      this._context.mediaInfo.hasVideo = true;\n      this.tracks.videoTrack.meta = meta;\n      if (!this._hasVideoSequence) {\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n      } else {\n        this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n      }\n    }\n  }, {\n    key: 'handleSeiParsed',\n    value: function handleSeiParsed(seiObj) {\n      this.emit(DEMUX_EVENTS.SEI_PARSED, seiObj);\n    }\n  }, {\n    key: 'handleVideoSampleParsed',\n    value: function handleVideoSampleParsed(sample) {\n      if (!this.tracks || !this.tracks.videoTrack) {\n        return;\n      }\n      if (sample.isKeyframe) {\n        this.emit(DEMUX_EVENTS.ISKEYFRAME, sample.dts + sample.cts);\n      }\n      this.tracks.videoTrack.samples.push(sample);\n    }\n  }, {\n    key: 'handleAudioSampleParsed',\n    value: function handleAudioSampleParsed(sample) {\n      if (!this.tracks || !this.tracks.videoTrack) {\n        return;\n      }\n      this.tracks.audioTrack.samples.push(sample);\n    }\n  }, {\n    key: 'handleScriptTagParsed',\n    value: function handleScriptTagParsed(onMetaData) {\n      var videoTrack = this.videoTrack,\n          audioTrack = this.audioTrack;\n      // fill mediaInfo\n\n      this._context.mediaInfo.duration = onMetaData.duration;\n      if (typeof onMetaData.hasAudio === 'boolean') {\n        this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n      }\n      if (typeof onMetaData.hasVideo === 'boolean') {\n        this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      }\n      this.emit(DEMUX_EVENTS.MEDIA_INFO);\n      this._hasScript = true;\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'handleFileHeaderParsed',\n    value: function handleFileHeaderParsed(_ref) {\n      var hasVideo = _ref.hasVideo,\n          hasAudio = _ref.hasAudio;\n\n      this._context.mediaInfo.hasVideo = hasVideo;\n      this._context.mediaInfo.hasAudio = hasAudio;\n\n      this.initVideoTrack();\n      this.initAudioTrack();\n    }\n  }, {\n    key: 'demux',\n    value: function demux() {\n      if (this.loaderBuffer) {\n        try {\n          this.demuxer.demux(this.loaderBuffer);\n        } catch (e) {\n          // this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, e)\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'initVideoTrack',\n\n\n    /**\n     * init default video track configs\n     */\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.demuxer) {\n        this.demuxer.destroy();\n      }\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('\u627E\u4E0D\u5230 loaderBuffer \u5B9E\u4F8B'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport { VideoTrackMeta, AudioTrackMeta, XGDataView, FlvTag, VideoSample } from 'xgplayer-helper-models';\nimport { avc, hevc } from 'xgplayer-helper-codec';\nimport AMFParser from './amf-parser';\nimport EventEmitter from 'eventemitter3';\nvar SpsParser = avc.SpsParser,\n    NalUnit = avc.NalUnit;\nvar SpsParserHEVC = hevc.SpsParserHEVC,\n    NalUnitHEVC = hevc.NalUnitHEVC;\n\nvar FlvDemuxer = function (_EventEmitter) {\n  _inherits(FlvDemuxer, _EventEmitter);\n\n  function FlvDemuxer() {\n    _classCallCheck(this, FlvDemuxer);\n\n    /** @type {boolean} */\n    var _this = _possibleConstructorReturn(this, (FlvDemuxer.__proto__ || Object.getPrototypeOf(FlvDemuxer)).call(this));\n\n    _this.headerParsed = false;\n    /** @type {number} */\n    _this.trackNum = 0;\n    /** @type {boolean} */\n    _this.hasScript = false;\n    /** @type {boolean} */\n    _this._videoMetaChange = false;\n    /** @type {boolean} */\n    _this._audioMetaChange = false;\n    /** @type {number} */\n    _this.gopId = 0;\n    /** @type {*}  */\n    _this.onMetaData = null;\n    return _this;\n  }\n\n  /**\n   *\n   * @return {{FILE_HEADER_PARSED: string, AUDIO_META_PARSED: string, SCRIPT_TAG_PARSED: string, AUDIO_SAMPLE_PARSED: string, VIDEO_META_PARSED: string, VIDEO_SAMPLE_PARSED: string, VIDEO_SEI_PARSED: string}}\n   * @constructor\n   */\n\n\n  _createClass(FlvDemuxer, [{\n    key: 'demux',\n    value: function demux(buffer) {\n      if (!this.headerParsed) {\n        if (buffer.length < 13) {\n          return;\n        }\n        var header = buffer.shift(13);\n        this.parseFlvHeader(header);\n        this.demux(buffer); // recursive invoke\n      } else {\n        if (buffer.length < 11) {\n          return;\n        }\n        var flvTag = void 0;\n\n        var loopMax = 10000; // avoid Infinite loop\n        do {\n          flvTag = this._parseFlvTag(buffer);\n        } while (flvTag && loopMax-- > 0);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        throw new Error('invalid flv file,' + header.join(','));\n      } else {\n        this.headerParsed = true;\n\n        var hasAudio = header[4] >>> 2 === 1;\n        var hasVideo = (header[4] & 1) === 1;\n        this.emit(FlvDemuxer.EVENTS.FILE_HEADER_PARSED, {\n          hasVideo: hasVideo,\n          hasAudio: hasAudio\n        });\n      }\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8\u30019\u300118\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag(buffer) {\n      var tagSize = buffer.toInt(1, 3);\n      if (buffer.length < 11 + tagSize + 4) {\n        // no enough data for tag parsing\n        return null;\n      }\n      var flvTag = this._parseFlvTagHeader(buffer);\n      if (flvTag) {\n        this._processTagData(flvTag, buffer);\n        if (!this._datasizeValidator(flvTag.datasize, buffer)) {\n          throw new Error('TAG length error at ' + flvTag.datasize);\n        }\n      }\n      return flvTag;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader(buffer) {\n      var offset = 0;\n      var flvTag = new FlvTag();\n\n      var tagType = buffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      flvTag.filtered = (tagType & 32) >>> 5;\n      flvTag.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      flvTag.datasize = buffer.toInt(offset, 3);\n      offset += 3;\n\n      if (flvTag.tagType !== 8 && flvTag.tagType !== 9 && flvTag.tagType !== 11 && flvTag.tagType !== 18) {\n        if (buffer && buffer.length > 0) {\n          buffer.shift(1);\n        }\n        throw new Error('tagType ' + flvTag.tagType);\n      }\n\n      if (buffer.length < flvTag.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      buffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = buffer.toInt(0, 3);\n      buffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = buffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      flvTag.dts = timestamp;\n\n      // streamId\n      buffer.shift(3);\n\n      // 4 + 3 + 3 + 1 = 11 \u5B57\u8282 TagHeader\n      return flvTag;\n    }\n  }, {\n    key: '_processTagData',\n    value: function _processTagData(flvTag, buffer) {\n      switch (flvTag.tagType) {\n        case 18:\n          this._parseScriptData(flvTag, buffer);\n          break;\n        case 8:\n          this._parseAudioTag(flvTag, buffer);\n          break;\n        case 9:\n          this._parseVideoData(flvTag, buffer);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          buffer.shift(3);\n          break;\n        default:\n          buffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param flvTag\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(flvTag, buffer) {\n      flvTag.data = buffer.shift(flvTag.datasize);\n      var info = new AMFParser().resolve(flvTag.data, flvTag.data.length);\n\n      this.onMetaData = info ? info.onMetaData : undefined;\n      this.emit(FlvDemuxer.EVENTS.SCRIPT_TAG_PARSED, this.onMetaData);\n    }\n\n    // ISO\u4E2D\u5B9A\u4E49\u7684AudioSpecificConfig\n    // *  audioObjectType    5bit\n    // *  samplingFrquecyIndex   4bit\n    // *  if(samplingFrquencyIndex === 0xf)\n    // *     samplingFrequency   24bit\n    // *  channelConfiguration   4bit |01111000|\n\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.originObjectType = ret.objectType;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // \u706B\u72D0\u4E0B HE-AACv2\u7F16\u7801\u65B9\u5F0F \u91C7\u6837\u7387\u662F22050\u65F6\u5019\u4E5F\u8981\u4F7F\u7528 LC-AAC\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 8) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1 || userAgent.indexOf('safari') !== -1 || userAgent.indexOf('iphone') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n\n    //   TagType == 8\u65F6\n    //  *                     header.filter == 1  header.filter == 1\n    //  *    | AudioTagHeader | EncryptionHeader? | FilterParams? | AUDIODATA |\n    //  *\n    //  * AudioTagHeader\u7ED3\u6784 (1\u62162\u5B57\u8282):\n    //  * SoundFormat : bit1-4 \u8868\u793A\u97F3\u9891\u683C\u5F0F\u3002 0:\u884C\u5185pcm\u6570\u636E\uFF0C\u5E73\u53F0\u5B57\u8282\u5E8F 3:\u884C\u5185pcm,\u5C0F\u7AEF\u5E8F 10:aac\u683C\u5F0F\n    //  * SoundRate : bit5-6  \u91C7\u6837\u7387 0=5.5kHz 1=11kHz 2=22kHz  3=44kHz\n    //  * SoundSize : \u91C7\u6837\u5927\u5C0F 0=8bit 1\u91C7\u6837 1=16bit 1\u91C7\u6837\n    //  * SoundType : \u58F0\u9053\u7C7B\u578B 0=\u5355\u58F0\u9053 1=\u7ACB\u4F53\u58F0\n    //  * AACPacketType : 1\u5B57\u8282 \u5982\u679CsoundFormat==10 \u53CAaac\u7F16\u7801\u683C\u5F0F,\u5219\u5B58\u5728\u8FD9\u4E2A\u5B57\u8282\n    //  *                      0=aac \u5E8F\u5217header , 1=aac\u5143\u6570\u636E\n\n  }, {\n    key: '_parseAudioTag',\n    value: function _parseAudioTag(tag, buffer) {\n      var meta = new AudioTrackMeta();\n      var info = buffer.shift(1)[0];\n\n      tag.data = buffer.shift(tag.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      if (format !== 10) {\n        throw new Error('invalid audio format: ' + format);\n      }\n\n      if (format === 10) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      // AACPacketType\n      if (tag.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(tag.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this.onMetaData.duration * meta.timescale;\n        meta.config = aacHeader.config;\n        meta.objectType = aacHeader.objectType;\n        meta.originObjectType = aacHeader.originObjectType;\n        this.emit(FlvDemuxer.EVENTS.AUDIO_META_PARSED, meta);\n      } else {\n        tag.data = tag.data.slice(1, tag.data.length);\n        this.emit(FlvDemuxer.EVENTS.AUDIO_SAMPLE_PARSED, tag);\n      }\n    }\n\n    // parse hevc/avc video data\n    // *  TagType == 9\u65F6\n    // *                      filter == 1         filter == 1\n    // *    | VideoTagHeader | EncryptionHeader? | FilterParams? | VideoDATA |\n    // *\n    // * VideoTagHeader\u7ED3\u6784(AVC\u683C\u5F0F 5\u5B57\u8282):\n    // * FrameType : bit 1-4  1=keyFrame  2=inter frame\n    // * CodecId : bit 5-8  \u7F16\u7801\u5668\u4FE1\u606F  7=AVC\n    // * AvcPacketType :  1\u5B57\u8282  codecId==7\u65F6\u5B58\u5728   0=avc\u5E8F\u5217header 1=avc nalU 2=avc end of sequence\n    // * CompositionTime  : 3\u5B57\u8282 codecId==7\u65F6\u5B58\u5728  \u53D6\u503C 0 \u6216\u8005 \u5177\u4F53\u503C \u5355\u4F4Dms\n\n  }, {\n    key: '_parseVideoData',\n    value: function _parseVideoData(flvTag, buffer) {\n      // header\n      var header = buffer.shift(1)[0];\n      var vSample = new VideoSample(flvTag);\n      var frameType = (header & 0xf0) >>> 4;\n      vSample.isKeyframe = frameType === 1;\n      var codecID = header & 0x0f;\n\n      // hevc\u548Cavc\u7684header\u89E3\u6790\u65B9\u5F0F\u4E00\u6837\n      flvTag.avcPacketType = buffer.shift(1)[0];\n      vSample.cts = buffer.toInt(0, 3);\n      vSample.cts = vSample.cts << 8 >> 8;\n      buffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 7 || codecID === 12) {\n        var _hevc = codecID === 12;\n        var data = buffer.shift(flvTag.datasize - 5); // \u51CF5\u5B57\u8282header\u4FE1\u606F\n        if (data[4] === 0 && data[5] === 0 && data[6] === 0 && data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + data[i];\n          }\n          avcclength -= 4;\n          data = data.slice(4, data.length);\n          data[3] = avcclength % 256;\n          avcclength = (avcclength - data[3]) / 256;\n          data[2] = avcclength % 256;\n          avcclength = (avcclength - data[2]) / 256;\n          data[1] = avcclength % 256;\n          data[0] = (avcclength - data[1]) / 256;\n        }\n\n        vSample.data = data;\n\n        var videoMeta = void 0;\n        if (flvTag.avcPacketType === 0) {\n          if (_hevc) {\n            videoMeta = this._hevcSequenceHeaderParser(data);\n          } else {\n            videoMeta = this._avcSequenceHeaderParser(data);\n          }\n          videoMeta.codecID = codecID;\n          this.emit(FlvDemuxer.EVENTS.VIDEO_META_PARSED, videoMeta);\n        } else {\n          var dv = new XGDataView(data.buffer);\n          var nals = _hevc ? NalUnitHEVC.getHvccNals(dv) : NalUnit.getAvccNals(dv);\n          var keyTypes = _hevc ? [19, 20, 21] : [5];\n          for (var _i = 0; _i < nals.length; _i++) {\n            var unit = nals[_i];\n            _hevc ? NalUnitHEVC.analyseNal(unit) : NalUnit.analyseNal(unit);\n\n            if (unit.sei) {\n              this.emit(FlvDemuxer.EVENTS.VIDEO_SEI_PARSED, Object.assign(unit.sei, {\n                dts: flvTag.dts\n              }));\n            }\n            if (keyTypes.indexOf(unit.type) > -1) {\n              vSample.firstInGop = true;\n              this.gopId++;\n            }\n          }\n\n          vSample.gopId = this.gopId;\n          vSample.nals = nals;\n\n          this.emit(FlvDemuxer.EVENTS.VIDEO_SAMPLE_PARSED, vSample);\n        }\n      } else {\n        throw new Error('video codeid is ' + codecID);\n      }\n    }\n\n    /**\n     * parse avc metadata\n     *  configurationVerison = 1  uint(8)\n     *  avcProfileIndication      uint(8)\n     *  profile_compatibility     uint(8)\n     *  avcLevelIndication        uint(8)\n     *  reserved   `111111`       bit(6)\n     *  lengthSizeMinusOne        uint(2)\n     *  reserved   `111`          bit(3)\n     *  numOfSPS                  uint(5)\n     *  for(numOfSPS)\n     *    spsLength               uint(16)\n     *    spsNALUnit              spsLength\u4E2A\u5B57\u8282\n     *  numOfPPS                  uint(8)\n     *  for(numOfPPS)\n     *     ppsLength              uint(16)\n     *     ppsNALUnit             ppsLength\u4E2A\u5B57\u8282\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var offset = 0;\n\n      var meta = new VideoTrackMeta();\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i2 = 0; _i2 < numOfPps; _i2++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      meta.duration = this.onMetaData.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      meta.streamType = 0x1b;\n\n      return meta;\n    }\n\n    /**\n     * parse hevc metadata\n     *  configurationVerison = 1  uint(8)\n     *  generalProfileSpace       uint(2)\n     *  generalTierFlag           uint(1)\n     *  generalProfileIdc         uint(5)\n     *  generalProfileCompatibilityFlags uint(32)\n     *  generalConstraintIndicatorFlags  uint(48)\n     *  generalLevelIdc           uint(8)\n     *  complete_representation   bit(1)\n     *  reserved   `111`          bit(3)\n     *  segmentationIdc           uint(12)\n     *  reserved `111111`         bit(6)\n     *  parallelismType           uint(2)\n     *  reserved `111111`         bit(6)\n     *  chromaFormat              uint(2)\n     *  reserved `11111`          bit(5)\n     *  bitDepthLumaMinus8        uint(3)\n     *  reserved `11111`          bit(5)\n     *  bitDepthChromaMinus8      uint(3)\n     *  avgFrameRate              bit(16)\n     *  constantFrameRate         bit(2)\n     *  numTemporalLayers         bit(3)\n     *  temporalIdNested          bit(1)\n     *  lengthSizeMinusOne        uint(2)\n     *  numOfArrays               uint(8)\n     *  for(numOfArrays)\n     *    arrayCompleteness       bit(1)\n     *    reserved                uint(1)\n     *    nalUnitType             uint(16)\n     *    numNals                 uint(16)\n     *    for(numNals)\n     *       nalUintLength        uint(16)\n     *       nalUint              bit(8 * nalUintLength)\n     */\n\n  }, {\n    key: '_hevcSequenceHeaderParser',\n    value: function _hevcSequenceHeaderParser(data) {\n      var meta = new VideoTrackMeta();\n\n      var offset = 0;\n\n      meta.configurationVersion = data[0];\n      meta.hevcProfileSpace = (data[1] & 0xc0) >>> 6;\n      meta.hevcTierFlag = (data[1] & 0x20) >>> 5;\n      meta.hevcProfileIdc = data[1] & 0x1f;\n      meta.hevcProfileCompatibilityFlags = [data[2], data[3], data[4], data[5]];\n      meta.hevcConstraintIndicatorFlags = [data[6], data[7], data[8], data[9], data[10], data[11]];\n      meta.hevcLevelIdc = data[12];\n      meta.minSpatialSegmentationIdc = data[13] & 0x0f + data[14] << 4;\n      meta.parallelismType = data[15] & 0x03;\n      meta.chromaFormat = data[16] & 0x03;\n      meta.bitDepthLumaMinus8 = data[17] & 0x07;\n      meta.bitDepthChromaMinus8 = data[18] & 0x07;\n      meta.avgFrameRate = data[19] * 256 + data[20];\n      meta.constantFrameRate = (data[21] & 0xc0) >>> 6;\n      meta.numTemporalLayers = (data[21] & 0x38) >>> 3;\n      meta.temporalIdNested = (data[21] & 0x04) >>> 2;\n      meta.lengthSizeMinusOne = data[21] & 0x03;\n      var numOfArrays = data[22];\n\n      offset = 23;\n      var config = {};\n      var nalUnitType = 0;\n      var numNalus = 0;\n      var nalUnitSize = 0;\n      var hasVPS = false;\n      var hasSPS = false;\n      var hasPPS = false;\n      var vps = void 0,\n          sps = void 0,\n          pps = void 0;\n      for (var i = 0; i < numOfArrays; i++) {\n        nalUnitType = data[offset] & 0x3f;\n        numNalus = data[offset + 1] * 256 + data[offset + 2];\n        offset += 3;\n        for (var j = 0; j < numNalus; j++) {\n          nalUnitSize = data[offset] * 256 + data[offset + 1];\n          switch (nalUnitType) {\n            case 32:\n              if (!hasVPS) {\n                hasVPS = true;\n                vps = data.slice(offset + 2, offset + 2 + nalUnitSize);\n                meta.vps = SpsParserHEVC._ebsp2rbsp(vps);\n                meta.rawVps = vps;\n              }\n              break;\n            case 33:\n              if (!hasSPS) {\n                hasSPS = true;\n                sps = data.slice(offset + 2, offset + 2 + nalUnitSize);\n                meta.sps = SpsParserHEVC._ebsp2rbsp(sps);\n                meta.rawSps = sps;\n                meta.codec = 'hev1.1.6.L93.B0';\n                config = SpsParserHEVC.parseSPS(sps);\n              }\n              break;\n            case 34:\n              if (!hasPPS) {\n                hasPPS = true;\n                pps = data.slice(offset + 2, offset + 2 + nalUnitSize);\n                meta.pps = SpsParserHEVC._ebsp2rbsp(pps);\n                meta.rawPps = pps;\n              }\n              break;\n            case 39:\n              // PREFIX_SEI\n              break;\n            case 40:\n              // SUFFIX_SEI\n              break;\n            default:\n              break;\n          }\n          offset += 2 + nalUnitSize;\n        }\n      }\n\n      Object.assign(meta, SpsParserHEVC.toVideoMeta(config));\n\n      meta.streamType = 0x24;\n\n      return meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize, buffer) {\n      var datasizeConfirm = buffer.toInt(0, 4);\n      buffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      _get(FlvDemuxer.prototype.__proto__ || Object.getPrototypeOf(FlvDemuxer.prototype), 'removeAllListeners', this).call(this);\n    }\n  }], [{\n    key: 'isFlvFile',\n\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }, {\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        FILE_HEADER_PARSED: 'FILE_HEADER_PARSED',\n        SCRIPT_TAG_PARSED: 'SCRIPT_TAG_PARSED',\n        AUDIO_META_PARSED: 'AUDIO_META_PARSED',\n        VIDEO_META_PARSED: 'VIDEO_META_PARSED',\n        VIDEO_SAMPLE_PARSED: 'VIDEO_SAMPLE_PARSED',\n        AUDIO_SAMPLE_PARSED: 'AUDIO_SAMPLE_PARSED',\n        VIDEO_SEI_PARSED: 'VIDEO_SEI_PARSED'\n      };\n    }\n  }]);\n\n  return FlvDemuxer;\n}(EventEmitter);\n\nexport default FlvDemuxer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { Sniffer } from 'xgplayer-helper-utils';\nimport { UTF8 } from 'xgplayer-helper-codec';\n\nvar isLe = Sniffer.isLe;\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta\u4FE1\u606F\u89E3\u6790\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    _classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  _createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * \u89E3\u6790meta\u4E2D\u7684\u53D8\u91CF\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n\n  return AMFParser;\n}();\n\nexport default AMFParser;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS } from 'xgplayer-helper-utils';\nimport { AudioTrack, VideoTrack } from 'xgplayer-helper-models';\nimport Demuxer from './ts-demuxer';\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\n/**\n * @typedef {import('xgplayer-helper-models').TsFrag} TsFrag\n */\n\nvar TsDemuxer = function () {\n  function TsDemuxer(configs) {\n    _classCallCheck(this, TsDemuxer);\n\n    this.configs = Object.assign({}, configs);\n    this.demuxer = null;\n  }\n\n  _createClass(TsDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n    }\n  }, {\n    key: 'initDemuxer',\n    value: function initDemuxer() {\n      this.demuxer.on(Demuxer.EVENTS.METADATA_PARSED, this.onMetaDataParsed.bind(this));\n      this.demuxer.on(Demuxer.EVENTS.VIDEO_SAMPLE_PARSED, this.onVideoSampleParsed.bind(this));\n      this.demuxer.on(Demuxer.EVENTS.AUDIO_SAMPLE_PARSED, this.onAudioSampleParsed.bind(this));\n      this.demuxer.on(Demuxer.EVENTS.SEI_PARSED, this.emit.bind(this, DEMUX_EVENTS.SEI_PARSED));\n    }\n\n    /**\n     * @param {TsFrag} frag\n     * @param {boolean} isVod\n     */\n\n  }, {\n    key: 'demux',\n    value: function demux(frag, isVod) {\n      if (!this._tracks) {\n        return;\n      }\n      if (!this._tracks.audioTrack) {\n        this._tracks.audioTrack = new AudioTrack();\n      }\n\n      if (!this._tracks.videoTrack) {\n        this._tracks.videoTrack = new VideoTrack();\n      }\n\n      if (!this.demuxer) {\n        this.demuxer = new Demuxer(this._tracks);\n        this.initDemuxer();\n      }\n      try {\n        this.demuxer.demux(frag, this.inputBuffer, isVod);\n      } catch (e) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, e, false);\n      }\n      var hasVideo = this._tracks.videoTrack && this._tracks.videoTrack.samples.length ? 1 : 0;\n      var hasAudio = this._tracks.audioTrack && this._tracks.audioTrack.samples.length ? 1 : 0;\n      this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, hasVideo, hasAudio);\n    }\n  }, {\n    key: 'onMetaDataParsed',\n    value: function onMetaDataParsed(type, meta) {\n      var _tracks = this._tracks,\n          videoTrack = _tracks.videoTrack,\n          audioTrack = _tracks.audioTrack;\n\n      var track = videoTrack;\n\n      switch (type) {\n        case 'video':\n          track = videoTrack;\n          break;\n        case 'audio':\n          track = audioTrack;\n          break;\n        default:\n          track = videoTrack;\n      }\n      track.meta = meta;\n      this.emit(DEMUX_EVENTS.METADATA_PARSED, type, meta);\n    }\n  }, {\n    key: 'onVideoSampleParsed',\n    value: function onVideoSampleParsed(sample) {\n      if (sample.isKeyframe) {\n        this.emit(DEMUX_EVENTS.ISKEYFRAME, sample.pts);\n      }\n      this._tracks.videoTrack.samples.push(sample);\n    }\n  }, {\n    key: 'onAudioSampleParsed',\n    value: function onAudioSampleParsed(sample) {\n      this._tracks.audioTrack.samples.push(sample);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n      this.configs = {};\n      this.demuxer && this.demuxer.destroy();\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get() {\n      return this._context.getInstance(this.configs.inputbuffer);\n    }\n  }, {\n    key: '_tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }]);\n\n  return TsDemuxer;\n}();\n\nexport default TsDemuxer;", "var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport EventEmitter from 'eventemitter3';\nimport { logger } from 'xgplayer-helper-utils';\nimport { XGDataView, AudioTrackMeta, VideoTrackMeta, AudioSample, VideoSample } from 'xgplayer-helper-models';\nimport { ADTS, avc, hevc } from 'xgplayer-helper-codec';\n\n/**\n * @typedef {import('xgplayer-helper-models').TsFrag } TsFrag\n */\n/**\n * @typedef {import('xgplayer-helper-models').Buffer } Buffer\n */\nvar NalUnit = avc.NalUnit;\nvar NalUnitHEVC = hevc.NalUnitHEVC;\n\nvar StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0x24: ['video', 'HVC.H265'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nvar TsDemuxer = function (_EventEmitter) {\n  _inherits(TsDemuxer, _EventEmitter);\n\n  _createClass(TsDemuxer, null, [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n        METADATA_PARSED: 'METADATA_PARSED',\n        VIDEO_SAMPLE_PARSED: 'VIDEO_SAMPLE_PARSED',\n        AUDIO_SAMPLE_PARSED: 'AUDIO_SAMPLES_PARSED',\n        SEI_PARSED: 'SEI_PARSED'\n      };\n    }\n\n    /**\n     * @param {any} videoTrack\n     * @param {any} audioTrack\n     */\n\n  }]);\n\n  function TsDemuxer(_ref) {\n    var videoTrack = _ref.videoTrack,\n        audioTrack = _ref.audioTrack;\n\n    _classCallCheck(this, TsDemuxer);\n\n    var _this = _possibleConstructorReturn(this, (TsDemuxer.__proto__ || Object.getPrototypeOf(TsDemuxer)).call(this));\n\n    _this.TAG = 'TsDemuxer';\n    _this.demuxing = false;\n    _this.videoTrack = videoTrack;\n    _this.audioTrack = audioTrack;\n    _this.pat = [];\n    _this.pmt = [];\n    _this._hasVideoMeta = false;\n    _this._hasAudioMeta = false;\n    _this.gopId = 0;\n    return _this;\n  }\n\n  /**\n   *\n   * @param {TsFrag} frag ts fragment parsed from m3u8\n   * @param {Buffer} buffer u8a-buffer\n   * @param {boolean} isVod is a vod m3u8\n   */\n\n\n  _createClass(TsDemuxer, [{\n    key: 'demux',\n    value: function demux(frag, buffer, isVod) {\n      if (frag) {\n        logger.log(this.TAG, 'do demux: id=' + frag.id + ',demuxing=' + this.demuxing);\n      }\n      if (this.demuxing) {\n        return;\n      }\n\n      var frags = { pat: [], pmt: [] };\n      var peses = {};\n      while (buffer.length >= 188) {\n        if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          throw new Error('Untrust sync code: ' + buffer.array[0][buffer.offset] + ', try to recover;');\n        }\n        while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          buffer.shift(1);\n        }\n        if (buffer.length < 188) {\n          continue;\n        }\n        var buf = buffer.shift(188);\n        // console.log(buf);\n        var tsStream = new XGDataView(buf.buffer);\n        var ts = {};\n        TsDemuxer.read(tsStream, ts, frags);\n        var pes = peses[ts.header.pid];\n        if (ts.pes) {\n          ts.pes.codec = ts.header.codec;\n          ts.pes.streamType = ts.header.streamType;\n          if (!peses[ts.header.pid]) {\n            peses[ts.header.pid] = [];\n          }\n          peses[ts.header.pid].push(ts.pes);\n          ts.pes.ES.buffer = [ts.pes.ES.buffer];\n        } else if (pes) {\n          pes[pes.length - 1].ES.buffer.push(ts.payload.stream);\n        }\n      }\n\n      var AudioOptions = Object.assign({}, frag);\n      var VideoOptions = Object.assign({}, frag);\n\n      var noAudio = isVod && this._hasVideoMeta && !this._hasAudioMeta;\n      var noVideo = isVod && this._hasAudioMeta && !this._hasVideoMeta;\n\n      // Get Frames data\n      for (var i = 0; i < Object.keys(peses).length; i++) {\n        var epeses = peses[Object.keys(peses)[i]];\n        for (var j = 0; j < epeses.length; j++) {\n          var cPes = epeses[j];\n          cPes.id = Object.keys(peses)[i];\n\n          // 1. !noAudio \u9996\u7247\u65E0\u97F3\u9891,\u540E\u7EED\u5206\u7247\u5F53\u65E0\u97F3\u9891\u5904\u7406\n          // 2. cPes.streamType === 0x0f || cPes.streamType === 0x11 \u53EA\u5904\u7406aac,\u5176\u4ED6\u97F3\u9891\u683C\u5F0F\u5F53\u65E0\u97F3\u9891\n          var isAAC = cPes.streamType === 0x0f || cPes.streamType === 0x11;\n          if (cPes.type === 'audio' && !noAudio && isAAC) {\n            cPes.ES.buffer = TsDemuxer.mergeAudioES(cPes.ES.buffer);\n            this.pushAudioSample(cPes, AudioOptions);\n            AudioOptions = {};\n          } else if (cPes.type === 'video' && !noVideo) {\n            cPes.ES.buffer = TsDemuxer.mergeVideoES(cPes.ES.buffer);\n            if (cPes.codec === 'HVC.H265') {\n              this.pushVideoSampleHEVC(epeses[j], VideoOptions);\n            } else {\n              this.pushVideoSample(epeses[j], VideoOptions);\n            }\n            VideoOptions = { spsFound: !!VideoOptions.spsFound };\n          }\n        }\n      }\n    }\n  }, {\n    key: 'pushAudioSample',\n    value: function pushAudioSample(pes, options) {\n      var meta = new AudioTrackMeta({\n        audioSampleRate: pes.ES.frequence,\n        sampleRate: pes.ES.frequence,\n        channelCount: pes.ES.channel,\n        codec: 'mp4a.40.' + pes.ES.audioObjectType,\n        originCodec: 'mp4a.40.' + pes.ES.originAudioObjectType,\n        originObjectType: pes.ES.originAudioObjectType,\n        config: pes.ES.audioConfig,\n        id: 2,\n        sampleRateIndex: pes.ES.frequencyIndex\n      });\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n      var metaEqual = TsDemuxer.compareMeta(this.audioTrack.meta, meta, true);\n\n      if (!this._hasAudioMeta || !metaEqual) {\n        this._hasAudioMeta = true;\n        if (options) {\n          options.meta = Object.assign({}, meta);\n        } else {\n          options = {\n            meta: Object.assign({}, meta)\n          };\n        }\n        this.emit(TsDemuxer.EVENTS.METADATA_PARSED, 'audio', meta);\n      }\n\n      var frameIndex = 0;\n      pes.ES.buffer.skip(pes.pesHeaderLength + 9);\n      var streamChanged = false;\n      while (pes.ES.buffer.position < pes.ES.buffer.length) {\n        if (ADTS.isHeader(new Uint8Array(pes.ES.buffer.buffer), pes.ES.buffer.position) && pes.ES.buffer.position + 5 < pes.ES.buffer.length) {\n          var frame = ADTS.appendFrame(this.audioTrack.meta.sampleRate, new Uint8Array(pes.ES.buffer.buffer), pes.ES.buffer.position, pes.pts, frameIndex);\n          if (frame && frame.sample) {\n            // logger.log(`${Math.round(frame.sample.pts)} : AAC`);\n            pes.ES.buffer.skip(frame.length);\n            var sample = new AudioSample({\n              dts: frame.sample.dts,\n              pts: frame.sample.pts,\n              data: frame.sample.unit,\n              options: streamChanged ? {} : options\n            });\n            if (options.meta) {\n              streamChanged = true;\n            }\n            sample.dts = sample.pts = Math.ceil(sample.pts / 90);\n            this.emit(TsDemuxer.EVENTS.AUDIO_SAMPLE_PARSED, sample);\n            frameIndex++;\n          } else {\n            // logger.log('Unable to parse AAC frame');\n            break;\n          }\n        } else {\n          // nothing found, keep looking\n          pes.ES.buffer.skip(1);\n        }\n      }\n    }\n  }, {\n    key: 'pushVideoSample',\n    value: function pushVideoSample(pes, options) {\n      var _this2 = this;\n\n      var nals = NalUnit.getNalunits(pes.ES.buffer);\n      var meta = new VideoTrackMeta();\n      var spsFound = options.spsFound; // \u4FDD\u5B58\u5F53\u524D\u5206\u7247\u5185\u662F\u5426\u89E3\u6790\u8FC7sps\n      var sampleLength = 0;\n      var sps = false;\n      var pps = false;\n      var seiList = [];\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n        if (nal.type < 9 && !nal.sei) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n        if (nal.sps) {\n          sps = nal;\n          meta.sps = nal.body;\n          meta.chromaFormat = sps.sps.chroma_format;\n          meta.codec = 'avc1.';\n          for (var j = 1; j < 4; j++) {\n            var h = sps.body[j].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n            meta.codec += h;\n          }\n          meta.codecHeight = sps.sps.codec_size.height;\n          meta.codecWidth = sps.sps.codec_size.width;\n          meta.frameRate = sps.sps.frame_rate;\n          meta.id = 1;\n          meta.level = sps.sps.level_string;\n          meta.presentHeight = sps.sps.present_size.height;\n          meta.presentWidth = sps.sps.present_size.width;\n          meta.profile = sps.sps.profile_string;\n          meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n          meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n        } else if (nal.pps) {\n          meta.pps = nal.body;\n          pps = nal;\n        } else if (nal.sei) {\n          seiList.push(nal.sei);\n        }\n      }\n\n      if (sps && pps) {\n        meta.avcc = NalUnit.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compareMeta(this.videoTrack.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          if (!spsFound) {\n            this.emit(TsDemuxer.EVENTS.METADATA_PARSED, 'video', meta);\n          }\n          options.spsFound = true;\n          this._hasVideoMeta = true;\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      for (var _i = 0; _i < nals.length; _i++) {\n        var _nal = nals[_i];\n        if (_nal.type && _nal.type >= 9) {\n          continue;\n        }\n        var length = _nal.body.byteLength;\n        if (_nal.idr) {\n          isKeyframe = true;\n        }\n        if (!_nal.sei) {\n          data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n          offset += 4;\n          data.set(_nal.body, offset);\n          offset += length;\n        }\n      }\n      var dts = parseInt(pes.dts / 90);\n      var pts = parseInt(pes.pts / 90);\n\n      if (seiList.length) {\n        seiList.forEach(function (sei) {\n          sei.dts = dts;\n          _this2.emit(TsDemuxer.EVENTS.SEI_PARSED, sei);\n        });\n      }\n      var sample = new VideoSample({\n        dts: dts,\n        pts: pts,\n        cts: pts - dts,\n        originDts: pes.dts,\n        purePts: pes.purePts,\n        isKeyframe: isKeyframe,\n        data: data,\n        nals: nals,\n        options: options,\n        firstInGop: isKeyframe,\n        gopId: isKeyframe ? ++this.gopId : this.gopId\n      });\n      this.emit(TsDemuxer.EVENTS.VIDEO_SAMPLE_PARSED, sample);\n    }\n  }, {\n    key: 'pushVideoSampleHEVC',\n    value: function pushVideoSampleHEVC(pes, options) {\n      var _this3 = this;\n\n      var nals = NalUnitHEVC.getNalunits(pes.ES.buffer);\n      nals = nals.filter(function (x) {\n        return x.body && x.body.length;\n      });\n      var meta = new VideoTrackMeta();\n      meta.streamType = 0x24;\n\n      var sampleLength = 0;\n      var vps = false;\n      var sps = false;\n      var pps = false;\n      var seiList = [];\n      var hasVPS = false;\n      var hasSPS = false;\n      var hasPPS = false;\n      var firstInGop = false;\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n\n        if (nal.vps) {\n          if (hasVPS) {\n            continue;\n          } else {\n            hasVPS = true;\n          }\n        } else if (nal.sps) {\n          if (hasSPS) {\n            continue;\n          } else {\n            hasSPS = true;\n          }\n        } else if (nal.pps) {\n          if (hasPPS) {\n            continue;\n          } else {\n            hasPPS = true;\n          }\n        } else if (nal.key) {\n          if (nal.type === 20 || nal.type === 19) {\n            firstInGop = true;\n          }\n        } else if (nal.type === 0) {\n          // if (!hasKeyframe) {\n          //   continue;\n          // }\n        } else if (nal.type === 35) {\n          continue;\n        }\n        if (nal.sps) {\n          sps = nal;\n          meta.sps = nal.body;\n\n          meta.presentWidth = sps.sps.width;\n          meta.presentHeight = sps.sps.height;\n          meta.general_profile_space = sps.sps.general_profile_space;\n          meta.general_tier_flag = sps.sps.general_tier_flag;\n          meta.general_profile_idc = sps.sps.general_profile_idc;\n          meta.general_level_idc = sps.sps.general_level_idc;\n          // meta.duration = this._duration;\n          meta.codec = 'hev1.1.6.L93.B0';\n          meta.chromaFormatIdc = sps.sps.chromaFormatIdc;\n          meta.bitDepthLumaMinus8 = sps.sps.bitDepthLumaMinus8;\n          meta.bitDepthChromaMinus8 = sps.sps.bitDepthChromaMinus8;\n        } else if (nal.pps) {\n          meta.pps = nal.body;\n          pps = nal;\n        } else if (nal.vps) {\n          meta.vps = nal.body;\n          vps = nal;\n        } else if (nal.sei) {\n          seiList.push(nal.sei);\n        }\n        if (nal.type <= 40) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n      }\n\n      if (sps && pps && vps) {\n        // meta.avcc = NalUnitHEVC.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compareMeta(this.videoTrack.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          meta.streamType = 0x24;\n          this.videoTrack.meta = meta;\n          this._hasVideoMeta = true;\n          this.emit(TsDemuxer.EVENTS.METADATA_PARSED, 'video', meta);\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      hasVPS = false;\n      hasSPS = false;\n      hasPPS = false;\n      for (var _i2 = 0; _i2 < nals.length; _i2++) {\n        var _nal2 = nals[_i2];\n        if (_nal2.type && _nal2.type > 40) {\n          continue;\n        }\n\n        if (_nal2.vps) {\n          if (hasVPS) {\n            continue;\n          } else {\n            hasVPS = true;\n          }\n        } else if (_nal2.sps) {\n          if (hasSPS) {\n            continue;\n          } else {\n            hasSPS = true;\n          }\n        } else if (_nal2.pps) {\n          if (hasPPS) {\n            continue;\n          } else {\n            hasPPS = true;\n          }\n        } else if (_nal2.key) {} else if (_nal2.type === 0) {\n          // if (!hasKeyframe) {\n          //   continue;\n          // }\n        } else if (_nal2.type === 35) {\n          continue;\n        }\n        var length = _nal2.body.byteLength;\n        if (_nal2.key) {\n          isKeyframe = true;\n        }\n        // if (!nal.vps && !nal.pps && !nal.sps) {\n        data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n        offset += 4;\n        data.set(_nal2.body, offset);\n        offset += length;\n        // }\n      }\n      var dts = parseInt(pes.dts / 90);\n      var pts = parseInt(pes.pts / 90);\n\n      if (seiList) {\n        seiList.forEach(function (sei) {\n          sei.dts = dts;\n          _this3.emit(TsDemuxer.EVENTS.SEI_PARSED, sei);\n        });\n      }\n\n      var sample = new VideoSample({\n        dts: dts,\n        pts: pts,\n        cts: pts - dts,\n        originDts: pes.dts,\n        purePts: pes.purePts,\n        isKeyframe: isKeyframe,\n        data: data,\n        nals: nals,\n        options: options,\n        firstInGop: firstInGop,\n        gopId: firstInGop ? ++this.gopId : this.gopId\n      });\n      this.emit(TsDemuxer.EVENTS.VIDEO_SAMPLE_PARSED, sample);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.removeAllListeners();\n      this.configs = {};\n      this.demuxing = false;\n      this.pat = [];\n      this.pmt = [];\n      this._hasVideoMeta = false;\n      this._hasAudioMeta = false;\n    }\n  }], [{\n    key: 'compareArray',\n    value: function compareArray(a, b, type) {\n      var al = 0;\n      var bl = 0;\n      if (type === 'Uint8Array') {\n        al = a.byteLength;\n        bl = b.byteLength;\n      } else if (type === 'Array') {\n        al = a.length;\n        bl = b.length;\n      }\n      if (al !== bl) {\n        return false;\n      }\n\n      for (var i = 0; i < al; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compareMeta',\n    value: function compareMeta(a, b, ignoreDuration) {\n      if (!a || !b) {\n        return false;\n      }\n\n      for (var i = 0, k = Object.keys(a).length; i < k; i++) {\n        var itema = a[Object.keys(a)[i]];\n        var itemb = b[Object.keys(a)[i]];\n        if (!itema && !itemb) {\n          return true;\n        }\n\n        if ((itema === undefined || itema === null) && itemb || itema && itemb === undefined) {\n          return false;\n        }\n\n        if ((typeof itema === 'undefined' ? 'undefined' : _typeof(itema)) !== 'object') {\n          if (ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed' && itema !== itemb) {\n            return false;\n          }\n        } else if (itema.byteLength !== undefined) {\n          if (itemb.byteLength === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compareArray(itema, itemb, 'Uint8Array')) {\n            return false;\n          }\n        } else if (itema.length !== undefined) {\n          if (itemb.length === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compareArray(itema, itemb, 'Array')) {\n            return false;\n          }\n        } else {\n          if (!TsDemuxer.compareMeta(itema, itemb)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'mergeVideoES',\n    value: function mergeVideoES(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length - buffers[i].position;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i3 = 0; _i3 < buffers.length; _i3++) {\n        var buffer = buffers[_i3];\n        data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n        offset += buffer.length - buffer.position;\n      }\n      return new XGDataView(data.buffer);\n    }\n  }, {\n    key: 'mergeAudioES',\n    value: function mergeAudioES(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i4 = 0; _i4 < buffers.length; _i4++) {\n        var buffer = buffers[_i4];\n        data.set(new Uint8Array(buffer.buffer), offset);\n        offset += buffer.length;\n      }\n\n      return new XGDataView(data.buffer);\n    }\n  }, {\n    key: 'read',\n    value: function read(stream, ts, frags) {\n      TsDemuxer.readHeader(stream, ts);\n      TsDemuxer.readPayload(stream, ts, frags);\n      // console.log('start', window.performance.now());\n      // console.log('end', window.performance.now());\n      if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n        ts.pes = TsDemuxer.PES(ts);\n      }\n    }\n  }, {\n    key: 'readPayload',\n    value: function readPayload(stream, ts, frags) {\n      var header = ts.header;\n      var pid = header.pid;\n      switch (pid) {\n        case 0:\n          TsDemuxer.PAT(stream, ts, frags);\n          break;\n        case 1:\n          TsDemuxer.CAT(stream, ts, frags);\n          break;\n        case 2:\n          TsDemuxer.TSDT(stream, ts, frags);\n          break;\n        case 0x1fff:\n          break;\n        default:\n          var isPMT = false;\n          for (var i = 0, len = frags.pat.length; i < len; i++) {\n            if (frags.pat[i].pid === pid) {\n              isPMT = true;\n              break;\n            }\n          }\n          // TODO: some\u7684\u5199\u6CD5\u4E0D\u592A\u597D\uFF0C\u5F97\u6539\n          if (isPMT) {\n            TsDemuxer.PMT(stream, ts, frags);\n          } else {\n            var sts = [];\n            for (var _i5 = 0, _len = frags.pmt.length; _i5 < _len; _i5++) {\n              if (frags.pmt[_i5].pid === pid) {\n                sts.push(frags.pmt[_i5]);\n                break;\n              }\n            }\n            if (sts.length > 0) {\n              var streamType = sts[0].streamType;\n              TsDemuxer.Media(stream, ts, streamType);\n            } else {\n              ts.unknownPIDs = true;\n            }\n          }\n      }\n    }\n  }, {\n    key: 'readHeader',\n    value: function readHeader(stream, ts) {\n      var header = {};\n      header.sync = stream.readUint8();\n      var next = stream.readUint16();\n      header.error = next >>> 15;\n      header.payload = next >>> 14 & 1;\n      header.priority = next >>> 13 & 1;\n      header.pid = next & 0x1fff;\n\n      next = stream.readUint8();\n\n      header.scrambling = next >> 6 & 0x3; // \u662F\u5426\u52A0\u5BC6\uFF0C00\u8868\u793A\u4E0D\u52A0\u5BC6\n\n      /**\n       * 00 ISO/IEC\u672A\u6765\u4F7F\u7528\u4FDD\u7559\n       * 01 \u6CA1\u6709\u8C03\u6574\u5B57\u6BB5\uFF0C\u4EC5\u542B\u6709184B\u6709\u6548\u51C0\u8377\n       * 02 \u6CA1\u6709\u6709\u6548\u51C0\u8377\uFF0C\u4EC5\u542B\u6709183B\u8C03\u6574\u5B57\u6BB5\n       * 03 0~182B\u8C03\u6574\u5B57\u6BB5\u540E\u4E3A\u6709\u6548\u51C0\u8377\n       */\n      header.adaptation = next >> 4 & 0x3;\n      header.continuity = next & 15;\n      header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n      ts.header = header;\n    }\n  }, {\n    key: 'PAT',\n    value: function PAT(stream, ts, frags) {\n      var ret = {};\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tabelID = next;\n      next = stream.readUint16();\n      ret.error = next >>> 7;\n      ret.zero = next >>> 6 & 1;\n      ret.sectionLength = next & 0xfff;\n      ret.streamID = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (ret.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        var programNumber = stream.readUint16();\n        var pid = stream.readUint16() & 0x1fff;\n        list.push({\n          program: programNumber,\n          pid: pid,\n          type: programNumber === 0 ? 'network' : 'mapPID'\n        });\n      }\n      if (list.length > 0) {\n        frags.pat = frags.pat.concat(list);\n      }\n      ret.list = list;\n      ret.program = stream.readUint16();\n      ret.pid = stream.readUint16() & 0x1fff;\n      ts.payload = ret;\n      // TODO CRC\n    }\n\n    /**\n     * ISO-13818-1 Table-2-25\n     * payload \u9488\u5BF9 PMT:\n     *  1 \u5B57\u8282\uFF1A table id [table \u7B2C\u4E00\u5B57\u8282]\n     *  section_length : 12bit \u3010table \u7B2C2\u5B57\u8282\u540E\u56DB\u4F4D\uFF0C3\u5B57\u8282\u3011\n     *  program_number : 16bit \u3010table\u7B2C4\uFF0C5\u5B57\u8282\u3011\n     *  program_info_length : 12bit \u3010table \u7B2C11\u5B57\u8282\u540E 4bit + \u7B2C12 byte\u3011\n     *  N * 8 : descriptor\n     *    stream_type : 8bit\n     *    pid\n     *\n     * // 4 \u5B57\u8282\n     *  reserved : 3bit\n     *  elementary_PID : 13bit\n     *  reserved : 4bit\n     *  ES_info_length: 12bit\n     */\n\n  }, {\n    key: 'PMT',\n    value: function PMT(stream, ts, frags) {\n      var header = ts.header;\n      header.packet = 'PMT';\n\n      var offset = stream.position;\n\n      offset += stream.getUint8(offset);\n\n      offset += 1; // add 1 byte for table id\n\n      var sectionLength = (stream.getUint8(offset + 1) & 0x0f) << 8 | stream.getUint8(offset + 2);\n\n      var tableEnd = offset + 3 + sectionLength - 4;\n\n      var programInfoLength = (stream.getUint8(offset + 10) & 0x0f) << 8 | stream.getUint8(offset + 11);\n\n      offset += 12 + programInfoLength;\n\n      var list = [];\n\n      while (offset < tableEnd) {\n        var pid = (stream.getUint8(offset + 1) & 0x1f) << 8 | stream.getUint8(offset + 2);\n        list.push({\n          streamType: stream.getUint8(offset),\n          pid: pid\n        });\n        offset += ((stream.getUint8(offset + 3) & 0x0f) << 8 | stream.getUint8(offset + 4)) + 5;\n      }\n      frags.pmt = list;\n      stream.skip(tableEnd + 4);\n    }\n  }, {\n    key: 'Media',\n    value: function Media(stream, ts, streamType) {\n      var header = ts.header;\n      var payload = {};\n\n      var _StreamType$streamTyp = _slicedToArray(StreamType[streamType], 2),\n          type = _StreamType$streamTyp[0],\n          codec = _StreamType$streamTyp[1];\n\n      header.streamType = streamType;\n      header.type = type;\n      header.codec = codec;\n\n      if (header.adaptation === 0x03) {\n        payload.adaptationLength = stream.readUint8();\n        if (payload.adaptationLength > 0) {\n          var next = stream.readUint8();\n          payload.discontinue = next >>> 7;\n          payload.access = next >>> 6 & 0x01;\n          payload.priority = next >>> 5 & 0x01;\n          payload.PCR = next >>> 4 & 0x01;\n          payload.OPCR = next >>> 3 & 0x01;\n          payload.splicePoint = next >>> 2 & 0x01;\n          payload.transportPrivate = next >>> 1 & 0x01;\n          payload.adaptationField = next & 0x01;\n          var _start = stream.position;\n          if (payload.PCR === 1) {\n            payload.programClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.programClockBase |= next >>> 15;\n            payload.programClockExtension = next & 0x1ff;\n          }\n          if (payload.OPCR === 1) {\n            payload.originProgramClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.originProgramClockBase += next >>> 15;\n            payload.originProgramClockExtension = next & 0x1ff;\n          }\n          if (payload.splicePoint === 1) {\n            payload.spliceCountdown = stream.readUint8();\n          }\n          if (payload.transportPrivate === 1) {\n            var length = stream.readUint8();\n            var transportPrivateData = [];\n            for (var i = 0; i < length; i++) {\n              transportPrivateData.push(stream.readUint8());\n            }\n          }\n          if (payload.adaptationField === 1) {\n            var _length = stream.readUint8();\n            var _next = stream.readUint8();\n            var start = stream.position;\n            var ltw = _next >>> 7;\n            var piecewise = _next >>> 6 & 0x1;\n            var seamless = _next >>> 5 & 0x1;\n            if (ltw === 1) {\n              _next = stream.readUint16();\n              payload.ltwValid = _next >>> 15;\n              payload.ltwOffset = _next & 0xefff;\n            }\n            if (piecewise === 1) {\n              _next = stream.readUint24();\n              payload.piecewiseRate = _next & 0x3fffff;\n            }\n            if (seamless === 1) {\n              _next = stream.readInt8();\n              payload.spliceType = _next >>> 4;\n              payload.dtsNextAU1 = _next >>> 1 & 0x7;\n              payload.marker1 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU2 = _next >>> 1;\n              payload.marker2 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU3 = _next;\n            }\n            stream.skip(_length - 1 - (stream.position - start));\n          }\n          var lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n          stream.skip(lastStuffing);\n        }\n      }\n      payload.stream = new XGDataView(stream.buffer.slice(stream.position));\n      ts.payload = payload;\n    }\n\n    /**\n     * http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n     * ISO-13818-1 Table-2-17\n     * packet_start_code_prefix : 24bit 0x000001\n     * stream_id : 8bit\n     * PES_packet_length : 16bit\n     * PTS_DTS_flags : 2bit \u3010PES_packet_length\u540E\u7B2C2\u5B57\u8282\u524D2\u4F4D\u3011& 0xc0  [0x10 0x11]\n     * PES_header_data_length : \u3010PTS_DTS_flags \u540E\u7B2C1\u5B57\u8282\u3011\n     *\n     * | 6\u5B57\u8282header | 3\u5B57\u8282\u6269\u5C55 | PES Header data | payload |\n     */\n\n  }, {\n    key: 'PES',\n    value: function PES(ts) {\n      var ret = {};\n      var buffer = ts.payload.stream;\n\n      var next = buffer.readUint24();\n      if (next !== 1) {\n        ret.ES = {};\n        ret.ES.buffer = buffer;\n      } else {\n        var streamID = buffer.readUint8();\n        if (streamID >= 0xe0 && streamID <= 0xef) {\n          ret.type = 'video';\n        }\n        if (streamID >= 0xc0 && streamID <= 0xdf) {\n          ret.type = 'audio';\n        }\n        var packetLength = buffer.readUint16();\n        ret.packetLength = packetLength;\n        if (ret.type === 'video' || ret.type === 'audio') {\n          var _next2 = buffer.readUint8();\n          var first = _next2 >>> 6;\n          if (first !== 0x02) {\n            throw new Error('error when parse pes header');\n          }\n          _next2 = buffer.readUint8();\n          ret.ptsDTSFlag = _next2 >>> 6;\n          ret.escrFlag = _next2 >>> 5 & 0x01;\n          ret.esRateFlag = _next2 >>> 4 & 0x01;\n          ret.dsmFlag = _next2 >>> 3 & 0x01;\n          ret.additionalFlag = _next2 >>> 2 & 0x01;\n          ret.crcFlag = _next2 >>> 1 & 0x01;\n          ret.extensionFlag = _next2 & 0x01;\n          ret.pesHeaderLength = buffer.readUint8();\n          var N1 = ret.pesHeaderLength;\n\n          // \u8BA1\u7B97pts\n          var pts = [];\n\n          pts.push(buffer.readUint8());\n          pts.push(buffer.readUint8());\n          pts.push(buffer.readUint8());\n          pts.push(buffer.readUint8());\n          pts.push(buffer.readUint8());\n\n          var p = (pts[0] & 0x0e) * 536870912 + // 1 << 29\n          (pts[1] & 0xff) * 4194304 + // 1 << 22\n          (pts[2] & 0xfe) * 16384 + // 1 << 14\n          (pts[3] & 0xff) * 128 + // 1 << 7\n          (pts[4] & 0xfe) / 2;\n          // \u4E0D\u7ECF\u8FC7\u4EFB\u4F55\u5904\u7406\u7684\u539F\u59CB\u7684pts\n          ret.purePts = p;\n          buffer.dataview.position -= 5;\n          pts = [];\n\n          _next2 = buffer.readUint8();\n          pts.push(_next2 >>> 1 & 0x07);\n          _next2 = buffer.readUint16();\n          pts.push(_next2 >>> 1);\n          _next2 = buffer.readUint16();\n          pts.push(_next2 >>> 1);\n          ret.pts = pts[0] << 30 | pts[1] << 15 | pts[2];\n          N1 -= 5;\n\n          // \u89C6\u9891\u5982\u679C\u6CA1\u6709dts\u7528pts\n          if (ret.type === 'video') {\n            ret.dts = ret.pts;\n          }\n\n          if (ret.ptsDTSFlag === 3) {\n            var dts = [];\n            _next2 = buffer.readUint8();\n            dts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            ret.dts = dts[0] << 30 | dts[1] << 15 | dts[2];\n            N1 -= 5;\n          }\n\n          if (ret.escrFlag === 1) {\n            var escr = [];\n            var ex = [];\n            _next2 = buffer.readUint8();\n            escr.push(_next2 >>> 3 & 0x07);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            ex.push(_next2 & 0x03);\n            _next2 = buffer.readUint8();\n            ex.push(_next2 >>> 1);\n            ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n            N1 -= 6;\n          }\n          if (ret.esRateFlag === 1) {\n            _next2 = buffer.readUint24();\n            ret.esRate = _next2 >>> 1 & 0x3fffff;\n            N1 -= 3;\n          }\n          if (ret.dsmFlag === 1) {\n            throw new Error('not support DSM_trick_mode');\n          }\n          if (ret.additionalFlag === 1) {\n            _next2 = buffer.readUint8();\n            ret.additionalCopyInfo = _next2 & 0x7f;\n            N1 -= 1;\n          }\n          if (ret.crcFlag === 1) {\n            ret.pesCRC = buffer.readUint16();\n            N1 -= 2;\n          }\n          if (ret.extensionFlag === 1) {\n            throw new Error('not support extension');\n          }\n          if (N1 > 0) {\n            buffer.skip(N1);\n          }\n          if (ret.dts > ret.pts) {\n            ret.dts = ret.pts;\n          }\n          ret.ES = TsDemuxer.ES(buffer, ret.type, ts.header.streamType);\n        } else {\n          throw new Error('format is not supported');\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: 'ES',\n    value: function ES(buffer, type, streamType) {\n      var ret = {};\n      if (type === 'video') {\n        // TODO readnalu\n        ret.buffer = buffer;\n      } else if (type === 'audio') {\n        if (streamType === 0x0f || streamType === 0x11) {\n          ret = TsDemuxer.parseADTSHeader(buffer);\n        }\n        ret.buffer = buffer;\n      } else {\n        throw new Error('ES ' + type + ' is not supported');\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'parseADTSHeader',\n    value: function parseADTSHeader(buffer) {\n      var ret = {};\n      var next = buffer.readUint16();\n      // adts\u7684\u540C\u6B65\u5B57\u8282\uFF0C12\u4F4D\n      if (next >>> 4 !== 0xfff) {\n        throw new Error('aac ES parse Error');\n      }\n      var fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n      ret.layer = next >>> 1 & 0x03;\n      ret.absent = next & 0x01;\n      next = buffer.readUint16();\n      ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n      ret.profile = ret.audioObjectType - 1;\n      ret.frequencyIndex = next >>> 10 & 0x0f;\n      ret.frequence = fq[ret.frequencyIndex];\n      ret.channel = next >>> 6 & 0x07;\n      ret.frameLength = (next & 0x03) << 11 | buffer.readUint16() >>> 5;\n      TsDemuxer.getAudioConfig(ret);\n      buffer.skip(1);\n      ret.buffer = buffer;\n      return ret;\n    }\n  }, {\n    key: 'TSDT',\n    value: function TSDT(stream, ts, frags) {\n      // TODO\n      ts.payload = {};\n    }\n  }, {\n    key: 'CAT',\n    value: function CAT(stream, ts, frags) {\n      var ret = {};\n      ret.tableID = stream.readUint8();\n      var next = stream.readUint16();\n      ret.sectionIndicator = next >>> 7;\n      ret.sectionLength = next & 0x0fff;\n      stream.skip(2);\n      next = stream.readUint8();\n      ret.version = next >>> 3;\n      ret.currentNextIndicator = next & 0x01;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (this.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({});\n      }\n      ret.crc32 = stream.readUint32();\n      ts.payload = ret;\n    }\n  }, {\n    key: 'getAudioConfig',\n    value: function getAudioConfig(ret) {\n      var userAgent = navigator.userAgent.toLowerCase();\n      var config = void 0;\n      var extensionSampleIndex = void 0;\n      ret.originAudioObjectType = ret.audioObjectType;\n      if (/firefox/i.test(userAgent)) {\n        if (ret.frequencyIndex >= 8) {\n          ret.audioObjectType = 5;\n          config = new Array(4);\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      } else {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        if (ret.frequencyIndex >= 6) {\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          if (ret.channel === 1) {\n            ret.audioObjectType = 2;\n            config = new Array(2);\n          }\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      }\n\n      config[0] = ret.audioObjectType << 3;\n      config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n      config[1] = (ret.frequencyIndex & 0x01) << 7;\n      config[1] |= ret.channel << 3;\n      if (ret.audioObjectType === 5) {\n        config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleIndex & 0x01) << 7;\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n\n      ret.audioConfig = config;\n    }\n  }]);\n\n  return TsDemuxer;\n}(EventEmitter);\n\nexport default TsDemuxer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { TsFrag } from 'xgplayer-helper-models';\n\nvar REGEXP_ABSOLUTE_URL = /^(?:[a-zA-Z0-9+\\-.]+:)?\\/\\//;\nvar REGEXP_URL_PAIR = /^((?:[a-zA-Z0-9+\\-.]+:)?\\/\\/[^/?#]*)?([^?#]*\\/)?/;\n\nfunction getAbsoluteUrl(url, parentUrl) {\n  if (!parentUrl || !url || REGEXP_ABSOLUTE_URL.test(url)) return url;\n  var pairs = REGEXP_URL_PAIR.exec(parentUrl);\n  if (!pairs) return url;\n  if (url[0] === '/') return pairs[1] + url;\n  return pairs[1] + pairs[2] + url;\n}\n\n/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\n\nvar M3U8Parser = function () {\n  function M3U8Parser() {\n    _classCallCheck(this, M3U8Parser);\n  }\n\n  _createClass(M3U8Parser, null, [{\n    key: 'parse',\n\n    /**\n     * @param {string} text\n     * @param {string} baseurl\n     * @return {{duration: number}}\n     */\n    value: function parse(text) {\n      var baseurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var ret = {\n        duration: 0\n      };\n      if (!text || !text.split) {\n        return;\n      }\n      var refs = text.split(/\\r|\\n/);\n      refs = refs.filter(function (ref) {\n        return ref;\n      });\n      var ref = refs.shift();\n      if (!ref.match('#EXTM3U')) {\n        throw new Error('Invalid m3u8 file: not \"#EXTM3U\"');\n      }\n      ref = refs.shift();\n      var nextDiscontinue = false;\n      var nextId = 0;\n      while (ref) {\n        var refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n        var refd = ref.match(/#(.[A-Z|-]*)/);\n        if (refd && refm && refm.length > 2) {\n          switch (refm[1]) {\n            case 'EXT-X-VERSION':\n              ret.version = parseInt(refm[2]);\n              break;\n            case 'EXT-X-MEDIA-SEQUENCE':\n              ret.sequence = parseInt(refm[2]);\n              break;\n            case 'EXT-X-TARGETDURATION':\n              ret.targetduration = parseFloat(refm[2]);\n              break;\n            case 'EXTINF':\n              nextId = M3U8Parser.parseFrag(refm, refs, ret, baseurl, nextDiscontinue, nextId);\n              nextDiscontinue = false;\n              break;\n            case 'EXT-X-KEY':\n              M3U8Parser.parseDecrypt(refm[2], ret);\n              break;\n            default:\n              break;\n          }\n        }if (refd && refd.length > 1) {\n          switch (refd[1]) {\n            case 'EXT-X-DISCONTINUITY':\n              nextDiscontinue = true;\n              break;\n            case 'EXT-X-ENDLIST':\n              var last = ret.frags[ret.frags.length - 1];\n              last.isLast = true;\n              ret.end = true;\n              break;\n            default:\n              break;\n          }\n        }\n        ref = refs[nextId++];\n      }\n      return ret;\n    }\n\n    /**\n     *\n     * @param {string[]}refm\n     * @param {string[]}refs\n     * @param {*} ret\n     * @param {string} baseurl\n     * @param {boolean} discontinue\n     * @param {number} nextId\n     * @return {*}\n     */\n\n  }, {\n    key: 'parseFrag',\n    value: function parseFrag(refm, refs, ret, baseurl, discontinue, nextId) {\n      if (!ret.frags) {\n        ret.frags = [];\n      }\n\n      var frag = new TsFrag({\n        start: ret.duration,\n        duration: parseInt(parseFloat(refm[2]) * 1000)\n      });\n\n      if (frag.duration < 200) {\n        return nextId;\n      }\n\n      ret.duration += frag.duration;\n      var nextline = refs[nextId++];\n      if (nextline.match(/#(.*):(.*)/) || nextline.match(/^#/)) {\n        nextline = refs[nextId++];\n      }\n\n      frag.url = getAbsoluteUrl(nextline, baseurl);\n\n      frag.discontinue = discontinue;\n      // add id\n      if (ret.frags.length) {\n        var last = ret.frags[ret.frags.length - 1];\n        frag.id = last.id + 1;\n        frag.cc = discontinue ? last.cc + 1 : last.cc;\n      } else {\n        frag.id = ret.sequence || 1;\n        frag.cc = 0;\n      }\n      ret.frags.push(frag);\n      return nextId;\n    }\n\n    /**\n     * @param {string[]}refm\n     * @param {*} ret\n     */\n\n  }, {\n    key: 'parseDecrypt',\n    value: function parseDecrypt(refm, ret) {\n      ret.encrypt = {};\n      var refs = refm.split(',');\n      for (var i in refs) {\n        var cmd = refs[i];\n        if (cmd.match(/METHOD=(.*)/)) {\n          ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n        }\n        if (cmd.match(/URI=\"(.*)\"/)) {\n          ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n        }\n\n        if (cmd.match(/IV=0x(.*)/)) {\n          var iv = cmd.match(/IV=0x(.*)/)[1];\n          var length = Math.ceil(iv.length / 2);\n          ret.encrypt.ivb = new Uint8Array(length);\n          for (var _i = length - 1; _i >= 0; _i--) {\n            var im = parseInt(iv.substr(_i * 2, 2), 16);\n            ret.encrypt.ivb[_i] = im;\n          }\n          ret.encrypt.iv = iv;\n        }\n      };\n    }\n\n    /**\n     * @param {string} url\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isHTTPS',\n    value: function isHTTPS(url) {\n      var httpsUrlRegex = /^https:\\/\\//i;\n      return httpsUrlRegex.test(url);\n    }\n  }]);\n\n  return M3U8Parser;\n}();\n\nexport default M3U8Parser;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS } from 'xgplayer-helper-utils';\nimport Remuxer from './remuxer';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar PLAYER_EVENTS = EVENTS.PLAYER_EVENTS;\n\nvar Mp4Remuxer = function () {\n  function Mp4Remuxer() {\n    var curTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, Mp4Remuxer);\n\n    this.TAG = 'Mp4Remuxer';\n    this._curTime = curTime;\n    if (!this.remuxer) {\n      this.initRemuxer();\n    }\n  }\n\n  _createClass(Mp4Remuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this));\n      this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this));\n      this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this));\n      this.on(REMUX_EVENTS.DETECT_FRAG_ID_DISCONTINUE, this.seek.bind(this));\n      this.on(PLAYER_EVENTS.SEEK, this.seek.bind(this));\n    }\n  }, {\n    key: 'initRemuxer',\n    value: function initRemuxer() {\n      this.remuxer = new Remuxer({\n        audioMeta: null,\n        videoMeta: null,\n        curTime: this._curTime\n      });\n      this.remuxer.on(Remuxer.EVENTS.MEDIA_SEGMENT, this.writeToSource.bind(this));\n      this.remuxer.on(Remuxer.EVENTS.TRACK_REMUXED, this.onTrackRemuxed.bind(this));\n    }\n  }, {\n    key: 'remux',\n    value: function remux() {\n      if (!this.remuxer._videoMeta) {\n        this.remuxer._videoMeta = this.videoMeta;\n        this.remuxer._audioMeta = this.audioMeta;\n      }\n\n      var _context$getInstance = this._context.getInstance('TRACKS'),\n          audioTrack = _context$getInstance.audioTrack,\n          videoTrack = _context$getInstance.videoTrack;\n\n      return this.remuxer.remux(audioTrack, videoTrack);\n    }\n  }, {\n    key: 'resetDtsBase',\n    value: function resetDtsBase() {\n      this.remuxer && this.remuxer.resetDtsBase();\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      this.remuxer && this.remuxer.seek(time);\n    }\n  }, {\n    key: 'onMetaDataReady',\n    value: function onMetaDataReady(type) {\n      if (!this.remuxer) {\n        this.initRemuxer();\n      }\n      var track = void 0;\n\n      if (type === 'audio') {\n        var _context$getInstance2 = this._context.getInstance('TRACKS'),\n            audioTrack = _context$getInstance2.audioTrack;\n\n        track = audioTrack;\n      } else {\n        var _context$getInstance3 = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance3.videoTrack;\n\n        track = videoTrack;\n      }\n\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.mimetype = track.meta.codec;\n      source.init = this.remuxer.remuxInitSegment(type, track.meta);\n\n      this.emit(REMUX_EVENTS.INIT_SEGMENT, type);\n    }\n  }, {\n    key: 'onTrackRemuxed',\n    value: function onTrackRemuxed(track) {\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, track);\n    }\n  }, {\n    key: 'writeToSource',\n    value: function writeToSource(type, buffer, bufferDuration) {\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n      source.data.push(buffer);\n      if (bufferDuration) {\n        source.bufferDuration = bufferDuration + (source.bufferDuration || 0);\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.remuxer) {\n        this.remuxer.destroy();\n      }\n      this.remuxer = null;\n    }\n  }, {\n    key: 'videoMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').videoTrack.meta;\n    }\n  }, {\n    key: 'audioMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').audioTrack.meta;\n    }\n  }]);\n\n  return Mp4Remuxer;\n}();\n\nexport default Mp4Remuxer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport { logger } from 'xgplayer-helper-utils';\nimport EventEmitter from 'eventemitter3';\nimport Buffer from './buffer';\nimport Fmp4 from './fmp4';\n\n/**\n * @typedef { import('xgplayer-helper-models').VideoTrack } VideoTrack\n */\n/**\n * @typedef { import('xgplayer-helper-models').AudioTrack } AudioTrack\n */\n\nvar Mp4Remuxer = function (_EventEmitter) {\n  _inherits(Mp4Remuxer, _EventEmitter);\n\n  function Mp4Remuxer(_ref) {\n    var videoMeta = _ref.videoMeta,\n        audioMeta = _ref.audioMeta,\n        curTime = _ref.curTime;\n\n    _classCallCheck(this, Mp4Remuxer);\n\n    var _this = _possibleConstructorReturn(this, (Mp4Remuxer.__proto__ || Object.getPrototypeOf(Mp4Remuxer)).call(this));\n\n    _this.TAG = 'Fmp4Remuxer';\n    _this._dtsBase = curTime * 1000;\n\n    _this._videoMeta = videoMeta;\n    _this._audioMeta = audioMeta;\n\n    _this._audioDtsBase = null;\n    _this._videoDtsBase = null;\n    _this._isDtsBaseInited = false;\n\n    _this.isFirstVideo = true;\n    _this.isFirstAudio = true;\n\n    _this.videoAllDuration = 0;\n    _this.audioAllDuration = 0;\n\n    _this.audioRemuxed = 0;\n    _this.videoRemuxed = 0;\n    _this.mp4Durations = {\n      keys: []\n    };\n    return _this;\n  }\n\n  _createClass(Mp4Remuxer, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._dtsBase = -1;\n      this._isDtsBaseInited = false;\n      this.mp4Durations = {\n        keys: []\n      };\n\n      this.removeAllListeners();\n    }\n\n    /**\n     * @param {AudioTrack} audioTrack\n     * @param {VideoTrack} videoTrack\n     */\n\n  }, {\n    key: 'remux',\n    value: function remux(audioTrack, videoTrack) {\n      !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack);\n      this.remuxVideo(videoTrack);\n      this.remuxAudio(audioTrack);\n\n      logger.groupEnd();\n    }\n  }, {\n    key: 'resetDtsBase',\n    value: function resetDtsBase() {\n      this._dtsBase = 0;\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      logger.log(this.TAG, 'set dtsBase for seek(),time=', time);\n      if (!this._isDtsBaseInited) {\n        this._dtsBase = time * 1000;\n      } else {\n        this._isDtsBaseInited = false;\n        this._dtsBase = time * 1000;\n      }\n\n      this._audioDtsBase = this._videoDtsBase = null;\n    }\n\n    /**\n     * @param {'video' | 'audio' } type\n     * @param {*} meta\n     * @return {Buffer}\n     */\n\n  }, {\n    key: 'remuxInitSegment',\n    value: function remuxInitSegment(type, meta) {\n      logger.log(this.TAG, 'remuxInitSegment: type=', type);\n      var initSegment = new Buffer();\n      var ftyp = meta.streamType === 0x24 ? Fmp4.ftypHEVC() : Fmp4.ftyp();\n      var moov = Fmp4.moov({ type: type, meta: meta });\n\n      initSegment.write(ftyp, moov);\n      return initSegment;\n    }\n\n    /**\n     * @param {AudioTrack} audioTrack\n     * @param {VideoTrack} videoTrack\n     */\n\n  }, {\n    key: 'calcDtsBase',\n    value: function calcDtsBase(audioTrack, videoTrack) {\n      if (!audioTrack && videoTrack.samples.length) {\n        var firstSample = videoTrack.samples[0];\n        var _start = void 0;\n        if (firstSample.options && firstSample.options.start) {\n          _start = firstSample.options.start;\n        }\n        this._videoDtsBase = firstSample.dts - (_start || this._dtsBase);\n        this._isDtsBaseInited = true;\n        return;\n      }\n\n      if ((!audioTrack || !audioTrack.samples.length) && (!videoTrack || !videoTrack.samples.length)) {\n        return;\n      }\n\n      var audioBase = null;\n      var videoBase = null;\n      var start = null;\n      if (audioTrack && audioTrack.samples && audioTrack.samples.length) {\n        var _firstSample = audioTrack.samples[0];\n        audioBase = _firstSample.dts;\n        if (_firstSample.options && _firstSample.options.start) {\n          start = _firstSample.options.start;\n        }\n      }\n      if (videoTrack && videoTrack.samples && videoTrack.samples.length) {\n        var _firstSample2 = videoTrack.samples[0];\n        videoBase = _firstSample2.dts;\n        if (_firstSample2.options && _firstSample2.options.start) {\n          start = _firstSample2.options.start;\n        }\n      }\n\n      var delta = audioBase - videoBase;\n      // \u4E34\u65F6\u517C\u5BB9\u903B\u8F91\uFF0C hls \u8003\u8651\u4E0Aav\u4E4B\u95F4\u7684\u5DEE\u503C\n      if (!!audioBase && delta < 0 && start !== null) {\n        videoTrack.samples.forEach(function (x) {\n          x.dts -= delta;\n          if (x.pts) {\n            x.pts -= delta;\n          }\n        });\n      }\n\n      this._videoDtsBase = (videoBase || audioBase) - (start || this._dtsBase);\n      this._audioDtsBase = (audioBase || videoBase) - (start || this._dtsBase);\n      this._dtsBase = Math.min(videoBase, audioBase);\n      this._isDtsBaseInited = true;\n\n      logger.log(this.TAG, 'calcDtsBase');\n      logger.log(this.TAG, 'video first dts: ' + videoBase + ' , start:' + start + ' , _videoDtsBase:' + this._videoDtsBase + ' , _dtsBase:' + this._dtsBase);\n      logger.log(this.TAG, 'audio first dts: ' + audioBase + ' , start:' + start + ' , _audioDtsBase:' + this._audioDtsBase + ', _dtsBase:' + this._dtsBase);\n    }\n\n    /**\n     * @param {VideoTrack}videoTrack\n     * @return {*}\n     * @private\n     */\n\n  }, {\n    key: 'remuxVideo',\n    value: function remuxVideo(videoTrack) {\n      var _this2 = this;\n\n      var track = videoTrack || {};\n\n      if (!videoTrack || !videoTrack.samples || !videoTrack.samples.length) {\n        return;\n      }\n\n      var samples = track.samples,\n          meta = track.meta;\n\n\n      if (!meta) return;\n\n      var firstDts = -1;\n\n      var initSegment = null;\n      var mp4Samples = [];\n      var mdatBox = {\n        samples: []\n      };\n\n      var maxLoop = 10000;\n      while (samples.length && maxLoop-- > 0) {\n        var avcSample = samples.shift();\n\n        var isKeyframe = avcSample.isKeyframe,\n            options = avcSample.options;\n\n        if (!this.isFirstVideo && options && options.meta) {\n          initSegment = this.remuxInitSegment('video', options.meta);\n          options.meta = null;\n          samples.unshift(avcSample);\n          if (!options.isContinue) {\n            this._videoDtsBase = 0;\n          }\n          break;\n        }\n        var dts = Math.max(0, avcSample.dts - this.videoDtsBase);\n        if (firstDts === -1) {\n          firstDts = dts;\n        }\n\n        var cts = void 0;\n        var pts = void 0;\n        if (avcSample.pts !== undefined) {\n          pts = avcSample.pts - this._dtsBase;\n          cts = pts - dts;\n        }\n        if (avcSample.cts !== undefined) {\n          pts = avcSample.cts + dts;\n          cts = avcSample.cts;\n        }\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        var sampleDuration = 0;\n        if (avcSample.duration) {\n          sampleDuration = avcSample.duration;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this.videoDtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // lastest sample, use second last duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference duration\n            sampleDuration = this._videoMeta.refSampleDuration;\n          }\n        }\n        this.videoAllDuration += sampleDuration;\n        if (logger.long) {\n          logger.log(this.TAG, 'video dts ' + dts, 'pts ' + pts, 'cts: ' + cts, isKeyframe, 'originDts ' + avcSample.originDts, 'duration ' + sampleDuration);\n        }\n        if (sampleDuration >= 0) {\n          mdatBox.samples.push(mdatSample);\n          mdatSample.buffer.push(avcSample.data);\n          mdatSample.size += avcSample.data.byteLength;\n          //  manage same pts sample\n          // if (this.mp4Durations[pts]) {\n          //   pts += this.mp4Durations[pts]\n          //   cts = pts - dts\n          // }\n          mp4Samples.push({\n            dts: dts,\n            cts: cts,\n            pts: pts,\n            data: avcSample.data,\n            size: avcSample.data.byteLength,\n            isKeyframe: isKeyframe,\n            duration: sampleDuration,\n            flags: {\n              isLeading: 0,\n              dependsOn: isKeyframe ? 2 : 1,\n              isDependedOn: isKeyframe ? 1 : 0,\n              hasRedundancy: 0,\n              isNonSync: isKeyframe ? 0 : 1\n            },\n            originDts: dts,\n            type: 'video'\n          });\n          this.mp4Durations[pts] = sampleDuration;\n          this.mp4Durations.keys.push(pts);\n        }\n\n        if (isKeyframe) {\n          this.emit(Mp4Remuxer.EVENTS.RANDOM_ACCESS_POINT, pts);\n        }\n      }\n      // delete too much data\n      if (this.mp4Durations.keys.length > 1e4) {\n        var tmp = this.mp4Durations;\n        this.mp4Durations = {};\n        this.mp4Durations.keys = tmp.keys.slice(-100);\n        this.mp4Durations.keys.forEach(function (key) {\n          _this2.mp4Durations[key] = tmp[key];\n        });\n      }\n      if (mp4Samples.length) {\n        logger.log(this.TAG, 'remux to mp4 video:', [firstDts / 1000, mp4Samples[mp4Samples.length - 1].dts / 1000]);\n      }\n\n      var moofMdat = new Buffer();\n      if (mp4Samples.length && track.meta) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.segmentRemuxed('video', moofMdat, mp4Samples[mp4Samples.length - 1].pts - mp4Samples[0].pts);\n      }\n\n      if (initSegment) {\n        this.segmentRemuxed('video', initSegment);\n\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this.remuxVideo(track);\n        }\n      }\n\n      this.isFirstVideo = false;\n      this.emit(Mp4Remuxer.EVENTS.TRACK_REMUXED, 'video', moofMdat);\n\n      track.samples = [];\n      track.length = 0;\n    }\n\n    /**\n     *\n     * @param {AudioTrack} track\n     * @return {*}\n     * @private\n     */\n\n  }, {\n    key: 'remuxAudio',\n    value: function remuxAudio(track) {\n      var _ref2 = track || {},\n          samples = _ref2.samples;\n\n      var firstDts = -1;\n      var mp4Samples = [];\n\n      var initSegment = null;\n      var mdatBox = {\n        samples: []\n      };\n      if (!samples || !samples.length) {\n        return;\n      }\n\n      var maxLoop = 10000;\n      var isFirstDtsInited = false;\n      while (samples.length && maxLoop-- > 0) {\n        var sample = samples.shift();\n        var data = sample.data,\n            options = sample.options;\n\n        if (!this.isFirstAudio && options && options.meta) {\n          initSegment = this.remuxInitSegment('audio', options.meta);\n          options.meta = null;\n          samples.unshift(sample);\n          if (!options.isContinue) {\n            this._audioDtsBase = 0;\n          }\n          break;\n        }\n\n        var dts = Math.max(0, sample.dts - this.audioDtsBase);\n        var originDts = sample.originDts;\n        if (!isFirstDtsInited) {\n          firstDts = dts;\n          isFirstDtsInited = true;\n        }\n\n        var sampleDuration = 0;\n        if (sample.duration) {\n          sampleDuration = sample.duration;\n        } else if (this._audioMeta.refSampleDurationFixed) {\n          sampleDuration = this._audioMeta.refSampleDurationFixed;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this.audioDtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // use second last sample duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference sample duration\n            sampleDuration = this._audioMeta.refSampleDuration;\n          }\n        }\n\n        if (logger.long) {\n          // logger.log(this.TAG, `audio dts ${dts}`, `pts ${dts}`, `originDts ${originDts}`, `duration ${sampleDuration}`)\n        }\n        this.audioAllDuration += sampleDuration;\n        var mp4Sample = {\n          dts: dts,\n          pts: dts,\n          cts: 0,\n          size: data.byteLength,\n          duration: sample.duration ? sample.duration : sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: 1,\n            isDependedOn: 0,\n            hasRedundancy: 0,\n            isNonSync: 0\n          },\n          isKeyframe: true,\n          originDts: originDts,\n          type: 'audio'\n        };\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        if (sampleDuration >= 0) {\n          mdatSample.buffer.push(data);\n          mdatSample.size += data.byteLength;\n\n          mdatBox.samples.push(mdatSample);\n          mp4Samples.push(mp4Sample);\n        }\n      }\n\n      var moofMdat = new Buffer();\n\n      if (mp4Samples.length && track.meta) {\n        logger.log(this.TAG, 'remux to mp4 audio:', [firstDts / 1000, mp4Samples[mp4Samples.length - 1].dts / 1000]);\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.segmentRemuxed('audio', moofMdat, mp4Samples[mp4Samples.length - 1].dts - mp4Samples[0].dts);\n      }\n\n      if (initSegment) {\n        this.segmentRemuxed('audio', initSegment);\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this.remuxAudio(track);\n        }\n      }\n\n      this.isFirstAudio = false;\n      this.emit(Mp4Remuxer.EVENTS.TRACK_REMUXED, 'audio', moofMdat);\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: 'segmentRemuxed',\n    value: function segmentRemuxed(type, buffer, bufferDuration) {\n      this.emit(Mp4Remuxer.EVENTS.MEDIA_SEGMENT, type, buffer, bufferDuration);\n    }\n  }, {\n    key: 'videoDtsBase',\n    get: function get() {\n      if (this._videoDtsBase !== null) {\n        return this._videoDtsBase;\n      }\n      return this._dtsBase;\n    },\n    set: function set(value) {\n      this._videoDtsBase = value;\n    }\n  }, {\n    key: 'audioDtsBase',\n    get: function get() {\n      if (this._audioDtsBase !== null) {\n        return this._audioDtsBase;\n      }\n      return this._dtsBase;\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n        INIT_SEGMENT: 'INIT_SEGMENT',\n        RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT',\n        TRACK_REMUXED: 'TRACK_REMUXED'\n      };\n    }\n  }]);\n\n  return Mp4Remuxer;\n}(EventEmitter);\n\nexport default Mp4Remuxer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    _classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  _createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n\n  return Buffer;\n}();\n\nexport default Buffer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Buffer from './buffer';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar Fmp4 = function () {\n  function Fmp4() {\n    _classCallCheck(this, Fmp4);\n  }\n\n  _createClass(Fmp4, null, [{\n    key: 'size',\n    value: function size(value) {\n      return Buffer.writeUint32(value);\n    }\n  }, {\n    key: 'initBox',\n    value: function initBox(size, name) {\n      var buffer = new Buffer();\n\n      for (var _len = arguments.length, content = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        content[_key - 2] = arguments[_key];\n      }\n\n      buffer.write.apply(buffer, [Fmp4.size(size), Fmp4.type(name)].concat(content));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'extension',\n    value: function extension(version, flag) {\n      return new Uint8Array([version, flag >> 16 & 0xff, flag >> 8 & 0xff, flag & 0xff]);\n    }\n  }, {\n    key: 'ftyp',\n    value: function ftyp() {\n      return Fmp4.initBox(24, 'ftyp', new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n      ]));\n    }\n  }, {\n    key: 'ftypHEVC',\n    value: function ftypHEVC() {\n      return Fmp4.initBox(24, 'ftyp', new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x64, 0x61, 0x73, 0x68 // hev1\n      ]));\n    }\n  }, {\n    key: 'moov',\n    value: function moov(_ref) {\n      var type = _ref.type,\n          meta = _ref.meta;\n\n      var size = 8;\n      var mvhd = Fmp4.mvhd(meta.duration, meta.timescale);\n      var trak = void 0;\n\n      if (type === 'video') {\n        trak = Fmp4.videoTrak(meta);\n      } else {\n        trak = Fmp4.audioTrak(meta);\n      }\n\n      var mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n      [mvhd, trak, mvex].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moov', mvhd, trak, mvex);\n    }\n  }, {\n    key: 'mvhd',\n    value: function mvhd(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n\n      // duration *= timescale;\n      var bytes = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags     1\u4F4D\u7684box\u7248\u672C+3\u4F4Dflags   box\u7248\u672C\uFF0C0\u62161\uFF0C\u4E00\u822C\u4E3A0\u3002\uFF08\u4EE5\u4E0B\u5B57\u8282\u6570\u5747\u6309version=0\uFF09\n      0x00, 0x00, 0x00, 0x00, // creation_time    \u521B\u5EFA\u65F6\u95F4  \uFF08\u76F8\u5BF9\u4E8EUTC\u65F6\u95F41904-01-01\u96F6\u70B9\u7684\u79D2\u6570\uFF09\n      0x00, 0x00, 0x00, 0x00, // modification_time   \u4FEE\u6539\u65F6\u95F4\n\n      /**\n             * timescale: 4 bytes\u6587\u4EF6\u5A92\u4F53\u57281\u79D2\u65F6\u95F4\u5185\u7684\u523B\u5EA6\u503C\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A1\u79D2\u957F\u5EA6\n             */\n      timescale >>> 24 & 0xFF, timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF,\n\n      /**\n             * duration: 4 bytes\u8BE5track\u7684\u65F6\u95F4\u957F\u5EA6\uFF0C\u7528duration\u548Ctime scale\u503C\u53EF\u4EE5\u8BA1\u7B97track\u65F6\u957F\uFF0C\u6BD4\u5982audio track\u7684time scale = 8000,\n             * duration = 560128\uFF0C\u65F6\u957F\u4E3A70.016\uFF0Cvideo track\u7684time scale = 600, duration = 42000\uFF0C\u65F6\u957F\u4E3A70\n             */\n      duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   \u63A8\u8350\u64AD\u653E\u901F\u7387\uFF0C\u9AD816\u4F4D\u548C\u4F4E16\u4F4D\u5206\u522B\u4E3A\u5C0F\u6570\u70B9\u6574\u6570\u90E8\u5206\u548C\u5C0F\u6570\u90E8\u5206\uFF0C\u5373[16.16] \u683C\u5F0F\uFF0C\u8BE5\u503C\u4E3A1.0\uFF080x00010000\uFF09\u8868\u793A\u6B63\u5E38\u524D\u5411\u64AD\u653E\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * \u4E0Erate\u7C7B\u4F3C\uFF0C[8.8] \u683C\u5F0F\uFF0C1.0\uFF080x0100\uFF09\u8868\u793A\u6700\u5927\u97F3\u91CF\n             */\n      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes\u4FDD\u7559\u4F4D\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // \u89C6\u9891\u53D8\u6362\u77E9\u9635   \u7EBF\u6027\u4EE3\u6570\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre-defined \u4FDD\u7559\u4F4D\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID \u4E0B\u4E00\u4E2Atrack\u4F7F\u7528\u7684id\u53F7\n      ]);\n      return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes));\n    }\n  }, {\n    key: 'videoTrak',\n    value: function videoTrak(data) {\n      var size = 8;\n\n      var tkhd = Fmp4.tkhd({\n        id: 1,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        type: 'video'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'video',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        avcc: data.avcc,\n        parRatio: data.parRatio,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        streamType: data.streamType\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'audioTrak',\n    value: function audioTrak(data) {\n      var size = 8;\n      var tkhd = Fmp4.tkhd({\n        id: 2,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: 0,\n        height: 0,\n        type: 'audio'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'audio',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        channelCount: data.channelCount,\n        samplerate: data.sampleRate,\n        config: data.config\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'tkhd',\n    value: function tkhd(data) {\n      var id = data.id;\n      var duration = data.duration;\n      var width = data.width;\n      var height = data.height;\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x07, // version(0) + flags 1\u4F4D\u7248\u672C box\u7248\u672C\uFF0C0\u62161\uFF0C\u4E00\u822C\u4E3A0\u3002\uFF08\u4EE5\u4E0B\u5B57\u8282\u6570\u5747\u6309version=0\uFF09\u6309\u4F4D\u6216\u64CD\u4F5C\u7ED3\u679C\u503C\uFF0C\u9884\u5B9A\u4E49\u5982\u4E0B\uFF1A\n      // 0x000001 track_enabled\uFF0C\u5426\u5219\u8BE5track\u4E0D\u88AB\u64AD\u653E\uFF1B\n      // 0x000002 track_in_movie\uFF0C\u8868\u793A\u8BE5track\u5728\u64AD\u653E\u4E2D\u88AB\u5F15\u7528\uFF1B\n      // 0x000004 track_in_preview\uFF0C\u8868\u793A\u8BE5track\u5728\u9884\u89C8\u65F6\u88AB\u5F15\u7528\u3002\n      // \u4E00\u822C\u8BE5\u503C\u4E3A7\uFF0C1+2+4 \u5982\u679C\u4E00\u4E2A\u5A92\u4F53\u6240\u6709track\u5747\u672A\u8BBE\u7F6Etrack_in_movie\u548Ctrack_in_preview\uFF0C\u5C06\u88AB\u7406\u89E3\u4E3A\u6240\u6709track\u5747\u8BBE\u7F6E\u4E86\u8FD9\u4E24\u9879\uFF1B\u5BF9\u4E8Ehint track\uFF0C\u8BE5\u503C\u4E3A0\n      // hint track \u8FD9\u4E2A\u7279\u6B8A\u7684track\u5E76\u4E0D\u5305\u542B\u5A92\u4F53\u6570\u636E\uFF0C\u800C\u662F\u5305\u542B\u4E86\u4E00\u4E9B\u5C06\u5176\u4ED6\u6570\u636Etrack\u6253\u5305\u6210\u6D41\u5A92\u4F53\u7684\u6307\u793A\u4FE1\u606F\u3002\n      0x00, 0x00, 0x00, 0x00, // creation_time\u521B\u5EFA\u65F6\u95F4\uFF08\u76F8\u5BF9\u4E8EUTC\u65F6\u95F41904-01-01\u96F6\u70B9\u7684\u79D2\u6570\uFF09\n      0x00, 0x00, 0x00, 0x00, // modification time \u4FEE\u6539\u65F6\u95F4\n      id >>> 24 & 0xFF, // track_ID: 4 bytes id\u53F7\uFF0C\u4E0D\u80FD\u91CD\u590D\u4E14\u4E0D\u80FD\u4E3A0\n      id >>> 16 & 0xFF, id >>> 8 & 0xFF, id & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    \u4FDD\u7559\u4F4D\n      duration >>> 24 & 0xFF, // duration: 4 bytes track\u7684\u65F6\u95F4\u957F\u5EA6\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    \u4FDD\u7559\u4F4D\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  \u89C6\u9891\u5C42\uFF0C\u9ED8\u8BA4\u4E3A0\uFF0C\u503C\u5C0F\u7684\u5728\u4E0A\u5C42.track\u5206\u7EC4\u4FE1\u606F\uFF0C\u9ED8\u8BA4\u4E3A0\u8868\u793A\u8BE5track\u672A\u4E0E\u5176\u4ED6track\u6709\u7FA4\u7EC4\u5173\u7CFB\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] \u683C\u5F0F\uFF0C\u5982\u679C\u4E3A\u97F3\u9891track\uFF0C1.0\uFF080x0100\uFF09\u8868\u793A\u6700\u5927\u97F3\u91CF\uFF1B\u5426\u5219\u4E3A0   +\u4FDD\u7559\u4F4D\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // \u89C6\u9891\u53D8\u6362\u77E9\u9635\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      width >>> 8 & 0xFF, // //\u5BBD\u5EA6\n      width & 0xFF, 0x00, 0x00, height >>> 8 & 0xFF, // \u9AD8\u5EA6\n      height & 0xFF, 0x00, 0x00]);\n      return Fmp4.initBox(8 + content.byteLength, 'tkhd', content);\n    }\n  }, {\n    key: 'edts',\n    value: function edts(data) {\n      var buffer = new Buffer();\n      var duration = data.duration;\n      var mediaTime = data.mediaTime;\n      buffer.write(Fmp4.size(36), Fmp4.type('edts'));\n      // elst\n      buffer.write(Fmp4.size(28), Fmp4.type('elst'));\n      buffer.write(new Uint8Array([0x00, 0x00, 0x00, 0x01, // entry count\n      duration >> 24 & 0xff, duration >> 16 & 0xff, duration >> 8 & 0xff, duration & 0xff, mediaTime >> 24 & 0xff, mediaTime >> 16 & 0xff, mediaTime >> 8 & 0xff, mediaTime & 0xff, 0x00, 0x00, 0x00, 0x01 // media rate\n      ]));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(data) {\n      var size = 8;\n      var mdhd = Fmp4.mdhd(data.timescale, data.duration);\n      var hdlr = Fmp4.hdlr(data.type);\n      var minf = Fmp4.minf(data);\n      [mdhd, hdlr, minf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf);\n    }\n  }, {\n    key: 'mdhd',\n    value: function mdhd() {\n      var timescale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      var duration = arguments[1];\n\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x00, // creation_time    \u521B\u5EFA\u65F6\u95F4\n      0x00, 0x00, 0x00, 0x00, // modification_time\u4FEE\u6539\u65F6\u95F4\n      timescale >>> 24 & 0xFF, // timescale: 4 bytes    \u6587\u4EF6\u5A92\u4F53\u57281\u79D2\u65F6\u95F4\u5185\u7684\u523B\u5EA6\u503C\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A1\u79D2\u957F\u5EA6\n      timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes  track\u7684\u65F6\u95F4\u957F\u5EA6\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x55, 0xC4, // language: und (undetermined) \u5A92\u4F53\u8BED\u8A00\u7801\u3002\u6700\u9AD8\u4F4D\u4E3A0\uFF0C\u540E\u976215\u4F4D\u4E3A3\u4E2A\u5B57\u7B26\uFF08\u89C1ISO 639-2/T\u6807\u51C6\u4E2D\u5B9A\u4E49\uFF09\n      0x00, 0x00 // pre_defined = 0\n      ]);\n      return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'hdlr',\n    value: function hdlr(type) {\n      var value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ];\n      if (type === 'audio') {\n        value.splice.apply(value, [8, 4].concat([0x73, 0x6f, 0x75, 0x6e]));\n        value.splice.apply(value, [24, 13].concat([0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00]));\n      }\n      return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value));\n    }\n  }, {\n    key: 'minf',\n    value: function minf(data) {\n      var size = 8;\n      var vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd();\n      var dinf = Fmp4.dinf();\n      var stbl = Fmp4.stbl(data);\n      [vmhd, dinf, stbl].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl);\n    }\n  }, {\n    key: 'vmhd',\n    value: function vmhd() {\n      return Fmp4.initBox(20, 'vmhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]));\n    }\n  }, {\n    key: 'smhd',\n    value: function smhd() {\n      return Fmp4.initBox(16, 'smhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n      ]));\n    }\n  }, {\n    key: 'dinf',\n    value: function dinf() {\n      var buffer = new Buffer();\n      var dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ];\n      buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(data) {\n      var size = 8;\n      var stsd = Fmp4.stsd(data);\n      var stts = Fmp4.stts();\n      var stsc = Fmp4.stsc();\n      var stsz = Fmp4.stsz();\n      var stco = Fmp4.stco();\n      [stsd, stts, stsc, stsz, stco].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco);\n    }\n  }, {\n    key: 'stsd',\n    value: function stsd(data) {\n      var content = void 0;\n      if (data.type === 'audio') {\n        // if (!data.isAAC && data.codec === 'mp4') {\n        //     content = FMP4.mp3(data);\n        // } else {\n        //\n        // }\n\n        // \u652F\u6301mp4a\n        content = Fmp4.mp4a(data);\n      } else {\n        if (data.streamType === 0x24) {\n          content = Fmp4.hvc1(data);\n        } else {\n          content = Fmp4.avc1(data);\n        }\n      }\n      return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content);\n    }\n  }, {\n    key: 'mp4a',\n    value: function mp4a(data) {\n      var content = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      data.samplerate >> 8 & 0xff, data.samplerate & 0xff, //\n      0x00, 0x00]);\n      var esds = Fmp4.esds(data.config);\n      return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds);\n    }\n  }, {\n    key: 'esds',\n    value: function esds() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [43, 146, 8, 0];\n\n      var configlen = config.length;\n      var buffer = new Buffer();\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]));\n      buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'avc1',\n    value: function avc1(data) {\n      var buffer = new Buffer();\n      var size = 40; // 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n      // let sps = data.sps\n      // let pps = data.pps\n      var width = data.width;\n      var height = data.height;\n      var hSpacing = data.parRatio.width;\n      var vSpacing = data.parRatio.height;\n      // let avccBuffer = new Buffer()\n      // avccBuffer.write(new Uint8Array([\n      //   0x01, // version\n      //   sps[1], // profile\n      //   sps[2], // profile compatible\n      //   sps[3], // level\n      //   0xfc | 3,\n      //   0xE0 | 1 // \u76EE\u524D\u53EA\u5904\u7406\u4E00\u4E2Asps\n      // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n      // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n      var avcc = data.avcc;\n      var avc1 = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      width >> 8 & 0xff, width & 0xff, // width\n      height >> 8 & 0xff, height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12, 0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]); // pre_defined = -1\n      var btrt = new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]);\n      var pasp = new Uint8Array([hSpacing >> 24, // hSpacing\n      hSpacing >> 16 & 0xff, hSpacing >> 8 & 0xff, hSpacing & 0xff, vSpacing >> 24, // vSpacing\n      vSpacing >> 16 & 0xff, vSpacing >> 8 & 0xff, vSpacing & 0xff]);\n\n      buffer.write(Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1, Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc, Fmp4.size(20), Fmp4.type('btrt'), btrt, Fmp4.size(16), Fmp4.type('pasp'), pasp);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'hvc1',\n    value: function hvc1(track) {\n      var buffer = new Buffer();\n      var content = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      track.width >> 8 & 0xFF, track.width & 0xff, // width\n      track.height >> 8 & 0xFF, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x00, 0x00, 0x00, 0x00, 0x00, // dailymotion/hls.js\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0xFF, 0xFF, 0x00, 0x00, 0x00, 0x7A, 0x68, 0x76, 0x63, 0x43, 0x01, // configurationVersion\n      0x01, // profile_space + tier_flag + profile_idc\n      0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n      0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n      0x5D, // level_idc=90\n      0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n      0xF8, // \u201811111\u2019b + bitDepthLumaMinus8\n      0xF8, // \u201811111\u2019b + bitDepthChromaMinus8\n      0x00, 0x00, // avgFrameRate\n      0x0F, // constantFrameRate + numTemporalLayers + \u20181\u2019b + lengthSizeMinusOne\n      0x03, // numOfArrays\n\n      // vps\n      0xA0, 0x00, 0x01, // array_completeness + \u20180\u2019b + NAL_unit_type + numNalus\n      0x00, 0x18, // nalUnitLength\n      0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n      // sps\n      0xA1, 0x00, 0x01, // array_completeness + \u20180\u2019b + NAL_unit_type + numNalus\n      0x00, 0x2D, // nalUnitLength\n      0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02, 0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x03, 0x00, 0x32, 0x10,\n\n      // pps\n      0xA2, 0x00, 0x01, // array_completeness + \u20180\u2019b + NAL_unit_type + numNalus\n      0x00, 0x07, // nalUnitLength\n      0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40]);\n      buffer.write(Fmp4.size(8 + content.byteLength + 10), Fmp4.type('hvc1'), content, Fmp4.size(10), Fmp4.type('fiel'), new Uint8Array([0x01, 0x00]));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stts',\n    value: function stts() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stts', content);\n    }\n  }, {\n    key: 'stsc',\n    value: function stsc() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stsc', content);\n    }\n  }, {\n    key: 'stco',\n    value: function stco() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stco', content);\n    }\n  }, {\n    key: 'stsz',\n    value: function stsz() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      return Fmp4.initBox(20, 'stsz', content);\n    }\n  }, {\n    key: 'mvex',\n    value: function mvex(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n      var trackID = arguments[2];\n\n      var buffer = new Buffer();\n      var mehd = Buffer.writeUint32(duration);\n      buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'trex',\n    value: function trex(id) {\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0xff, id >> 8 & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      return Fmp4.initBox(8 + content.byteLength, 'trex', content);\n    }\n  }, {\n    key: 'moof',\n    value: function moof(data) {\n      var size = 8;\n      var mfhd = Fmp4.mfhd();\n      var traf = Fmp4.traf(data);\n      [mfhd, traf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moof', mfhd, traf);\n    }\n  }, {\n    key: 'mfhd',\n    value: function mfhd() {\n      var content = Buffer.writeUint32(Fmp4.sequence);\n      Fmp4.sequence += 1;\n      return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'traf',\n    value: function traf(data) {\n      var size = 8;\n      var tfhd = Fmp4.tfhd(data.id);\n      var tfdt = Fmp4.tfdt(data.time);\n      var sdtp = Fmp4.sdtp(data);\n      var trun = Fmp4.trun(data, sdtp.byteLength);\n\n      [tfhd, tfdt, trun, sdtp].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp);\n    }\n  }, {\n    key: 'tfhd',\n    value: function tfhd(id) {\n      var content = Buffer.writeUint32(id);\n      return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'tfdt',\n    value: function tfdt(time) {\n      // let upper = Math.floor(time / (UINT32_MAX + 1)),\n      //     lower = Math.floor(time % (UINT32_MAX + 1));\n      return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time));\n    }\n  }, {\n    key: 'trun',\n    value: function trun(data, sdtpLength) {\n      // let id = data.id;\n      // let ceil = id === 1 ? 16 : 12;\n      var buffer = new Buffer();\n      var sampleCount = Buffer.writeUint32(data.samples.length);\n      // mdat-header 8\n      // moof-header 8\n      // mfhd 16\n      // traf-header 8\n      // thhd 16\n      // tfdt 20\n      // trun-header 12\n      // sampleCount 4\n      // data-offset 4\n      // samples.length\n      var offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength);\n      buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset);\n\n      // let size = buffer.buffer.byteLength\n      // let writeOffset = 0\n      // data.samples.forEach(() => {\n      //   size += 16\n      // })\n      //\n      // let trunBox = new Uint8Array(size)\n\n      // trunBox.set(buffer.buffer, 0)\n\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        // console.log(item.type, item.dts, item.duration)\n\n        buffer.write(new Uint8Array([item.duration >>> 24 & 0xFF, // sample_duration\n        item.duration >>> 16 & 0xFF, item.duration >>> 8 & 0xFF, item.duration & 0xFF, item.size >>> 24 & 0xFF, // sample_size\n        item.size >>> 16 & 0xFF, item.size >>> 8 & 0xFF, item.size & 0xFF, flags.isLeading << 2 | flags.dependsOn, // sample_flags\n        flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.isNonSync, 0x00, 0x00, // sample_degradation_priority\n        item.cts >>> 24 & 0xFF, // sample_composition_time_offset\n        item.cts >>> 16 & 0xFF, item.cts >>> 8 & 0xFF, item.cts & 0xFF]));\n        // writeOffset += 16\n        // buffer.write(Buffer.writeUint32(0));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'sdtp',\n    value: function sdtp(data) {\n      var buffer = new Buffer();\n      buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0));\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        var num = flags.isLeading << 6 | // is_leading: 2 (bit)\n        flags.dependsOn << 4 | // sample_depends_on\n        flags.isDependedOn << 2 | // sample_is_depended_on\n        flags.hasRedundancy; // sample_has_redundancy\n\n        buffer.write(new Uint8Array([num]));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdat',\n    value: function mdat(data) {\n      var buffer = new Buffer();\n      var size = 8;\n      data.samples.forEach(function (item) {\n        size += item.size;\n      });\n      buffer.write(Fmp4.size(size), Fmp4.type('mdat'));\n      var mdatBox = new Uint8Array(size);\n      var offset = 0;\n      mdatBox.set(buffer.buffer, offset);\n      offset += 8;\n      data.samples.forEach(function (item) {\n        item.buffer.forEach(function (unit) {\n          mdatBox.set(unit, offset);\n          offset += unit.byteLength;\n          // buffer.write(unit.data);\n        });\n      });\n      return mdatBox;\n    }\n  }]);\n\n  return Fmp4;\n}();\n\nFmp4.type = function (name) {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)]);\n};\nFmp4.sequence = 1;\n\nexport default Fmp4;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* eslint-disable no-useless-return */\nimport { logger } from 'xgplayer-helper-utils';\nimport EventEmitter from 'eventemitter3';\nimport Buffer from './buffer';\nimport Mp4 from './mp4';\n\nvar DEFAULT_SAMPLE_DURATION = 40;\n\nvar Mp4Box = function (_EventEmitter) {\n  _inherits(Mp4Box, _EventEmitter);\n\n  function Mp4Box(_ref) {\n    var videoMeta = _ref.videoMeta,\n        audioMeta = _ref.audioMeta,\n        curTime = _ref.curTime,\n        options = _ref.options;\n\n    _classCallCheck(this, Mp4Box);\n\n    var _this = _possibleConstructorReturn(this, (Mp4Box.__proto__ || Object.getPrototypeOf(Mp4Box)).call(this));\n\n    _this._dtsBase = curTime * 1000;\n    _this._options = options || {};\n    _this._samplePerChunk = _this._options.sampleNumberPerChunk || 100;\n    _this._videoMeta = videoMeta;\n    _this._audioMeta = audioMeta;\n\n    _this._audioDtsBase = null;\n    _this._videoDtsBase = -1;\n    _this._isDtsBaseInited = false;\n\n    _this.isFirstVideo = true;\n    _this.isFirstAudio = true;\n\n    _this.videoAllDuration = 0;\n    _this.audioAllDuration = 0;\n    _this.audioSamples = [];\n    _this.audioRemuxed = 0;\n    _this.videoRemuxed = 0;\n    _this.mp4Durations = {\n      keys: []\n    };\n    _this.ctsNum = 0;\n    return _this;\n  }\n\n  _createClass(Mp4Box, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._dtsBase = -1;\n      this._isDtsBaseInited = false;\n    }\n  }, {\n    key: 'remux',\n    value: function remux(audioTrack, videoTrack) {\n      if (!audioTrack && !videoTrack) {\n        return;\n      }\n      if (!videoTrack) {\n        this.remuxMp4(audioTrack, 'audio');\n      }\n      if (!audioTrack) {\n        this.remuxMp4(videoTrack, 'video');\n      }\n      if (audioTrack && videoTrack) {\n        this.remuxMix(audioTrack, videoTrack);\n      }\n\n      logger.groupEnd();\n    }\n\n    /**\n     * @description \u751F\u6210\u5305\u542B\u97F3\u9891\u548C\u89C6\u9891\u7684mp4\n     * @param {*} audioTrack \u97F3\u9891track\n     * @param {*} videoTrack \u89C6\u9891track\n     * @returns null\n     */\n\n  }, {\n    key: 'remuxMix',\n    value: function remuxMix(audioTrack, videoTrack) {\n      if (!audioTrack || !audioTrack.samples || !audioTrack.samples.length) {\n        return;\n      }\n      if (!videoTrack || !videoTrack.samples || !videoTrack.samples.length) {\n        return;\n      }\n\n      var audioSamples = audioTrack.samples,\n          audioMeta = audioTrack.meta;\n      var videoSamples = videoTrack.samples,\n          videoMeta = videoTrack.meta;\n\n\n      if (!audioMeta || !videoMeta) {\n        return;\n      }\n      // \u5982\u679C\u662F\u97F3\u89C6\u9891\u90FD\u6709\uFF0C\u6BCF\u4E2Achunk\u6709\u4E00\u4E2Asample\n      this._samplePerChunk = 1;\n\n      var mdat = null;\n      var moov = null;\n      // 1 \u6784\u9020ftyp\n      var ftyp = Mp4.ftyp();\n      var mdatBox = {\n        samples: []\n      };\n\n      var firstAudioSample = audioSamples[0];\n      var firstVideoSample = videoSamples[0];\n      var baseDts = Math.min(firstAudioSample.dts, firstVideoSample.dts);\n      var trackInfo = {\n        offset: ftyp.byteLength + 8,\n        audio: {\n          meta: audioMeta,\n          samples: audioSamples,\n          length: audioSamples.length,\n          sampleDuration: 0,\n          trackDuration: 0,\n          frameIndex: 0,\n          deltas: [], // \u5B58\u50A8\u6BCF\u4E2Asample\u7684duration\n          sampleCtss: [],\n          chunks: [],\n          sampleSizes: [],\n          chunksOffset: []\n        },\n        video: {\n          meta: videoMeta,\n          samples: videoSamples,\n          length: videoSamples.length,\n          sampleDuration: 0,\n          trackDuration: 0,\n          frameIndex: 0,\n          deltas: [],\n          sampleCtss: [],\n          chunks: [],\n          sampleSizes: [],\n          chunksOffset: [],\n          keyFrames: []\n        }\n      };\n      var type = null;\n      try {\n        while (audioSamples.length || videoSamples.length) {\n          var sample = void 0;\n          if (audioSamples.length && videoSamples.length) {\n            // \u6BCF\u6B21\u5199\u5165dts\u6700\u5C0F\u7684sample\n            if (audioSamples[0].dts < videoSamples[0].dts) {\n              sample = audioSamples.shift();\n              type = 'audio';\n            } else {\n              sample = videoSamples.shift();\n              type = 'video';\n            }\n          }\n          // \u53EA\u6709\u97F3\u9891\n          if (audioSamples.length && !videoSamples.length) {\n            sample = audioSamples.shift();\n            type = 'audio';\n          }\n          // \u53EA\u6709\u89C6\u9891\n          if (!audioSamples.length && videoSamples.length) {\n            sample = videoSamples.shift();\n            type = 'video';\n          }\n\n          var _sample = sample,\n              isKeyframe = _sample.isKeyframe;\n\n          var cts = void 0;\n          var pts = void 0;\n          var dts = Math.max(0, sample.dts - baseDts);\n\n          if (sample.cts !== undefined && type === 'video') {\n            pts = sample.cts + dts;\n            cts = sample.cts;\n          }\n          var currentTrackInfo = trackInfo[type];\n          var sampleDuration = this.getSttsBoxData(sample, currentTrackInfo.samples[0], currentTrackInfo.deltas);\n          currentTrackInfo.trackDuration = this.getDuration(currentTrackInfo.trackDuration, sampleDuration);\n          this.getCttsBoxData(cts, currentTrackInfo.sampleCtss);\n\n          var mdatSample = {\n            buffer: [],\n            size: 0\n          };\n          var sampleByteSize = sample.data.byteLength;\n          if (logger.long) {\n            logger.log(this.TAG, type + ' dts ' + dts, 'pts ' + pts, 'cts: ' + cts, 'isKeyframe ' + isKeyframe, 'originDts ' + sample.originDts, 'duration ' + sampleDuration);\n          }\n\n          if (sampleDuration >= 0) {\n            mdatBox.samples.push(mdatSample);\n            mdatSample.buffer.push(sample.data);\n            mdatSample.size += sampleByteSize;\n          }\n          currentTrackInfo.frameIndex++;\n          this.getStszBoxData(sampleByteSize, currentTrackInfo.sampleSizes);\n          trackInfo.offset = this.getStcoBoxData(currentTrackInfo.frameIndex, sampleByteSize, currentTrackInfo.length, trackInfo.offset, currentTrackInfo.chunksOffset);\n\n          if (isKeyframe) {\n            this.getStssBoxData(currentTrackInfo.frameIndex, currentTrackInfo.keyFrames);\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      this.getStscBoxData(trackInfo.audio.length, trackInfo.audio.chunks);\n      this.getStscBoxData(trackInfo.video.length, trackInfo.video.chunks);\n\n      // 2\u6784\u9020mdat box\n      if (mdatBox.samples.length) {\n        mdat = Mp4.mdat(mdatBox);\n      }\n\n      // 3 \u6784\u9020moov box\n      [{ meta: videoMeta, type: 'video' }, { meta: audioMeta, type: 'audio' }].forEach(function (item) {\n        item.meta.duration = trackInfo[item.type].trackDuration;\n        item.meta.sampleDeltas = trackInfo[item.type].deltas;\n        item.meta.keyFrames = trackInfo[item.type].keyFrames;\n        item.meta.sampleCtss = trackInfo[item.type].sampleCtss;\n        item.meta.chunks = trackInfo[item.type].chunks;\n        item.meta.sampleSizes = trackInfo[item.type].sampleSizes;\n        item.meta.chunksOffset = trackInfo[item.type].chunksOffset;\n      });\n\n      moov = this.mixMoov(videoMeta.duration, videoMeta.timeScale, [videoMeta, audioMeta]);\n\n      var mp4 = new Buffer();\n      mp4.write(ftyp, mdat, moov);\n      this.emit(Mp4Box.EVENTS.TRACK_REMUXED, type, mp4);\n      // \u4E0B\u8F7Dmp4\u6587\u4EF6\u5230\u672C\u5730\uFF0C\u6D4B\u8BD5\u7528\n      // this.downLoadMp4(mp4)\n    }\n\n    /**\n     * @description remux\u5355\u72EC\u7684\u97F3\u9891\u6216\u8005\u89C6\u9891\u751F\u6210mp4\u6587\u4EF6\n     * @param {*} track \u97F3\u9891\u6216\u8005\u89C6\u9891\u7684track\u5BF9\u8C61\n     * @param {*} type \u8868\u793Atrack\u7C7B\u578B\uFF0C'audio'\u6216\u8005'video'\n     * @returns null\n     */\n\n  }, {\n    key: 'remuxMp4',\n    value: function remuxMp4() {\n      var track = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var type = arguments[1];\n\n      if (!track || !track.samples || !track.samples.length) {\n        return;\n      }\n\n      var samples = track.samples,\n          meta = track.meta;\n\n\n      if (!meta) {\n        return;\n      }\n      var frameIndex = 0;\n      var mdat = null;\n      var moov = null;\n      // 1 \u6784\u9020ftyp\n      var ftyp = Mp4.ftyp();\n      var keyFrames = [];\n      var mdatBox = {\n        samples: []\n      };\n\n      var firstSample = samples[0];\n      var baseDts = firstSample.dts || 0;\n      var trackDuration = 0;\n      var sampleDeltas = [];\n      var sampleCtss = [];\n      var chunks = [];\n      var sampleSizes = [];\n      var sampleCount = samples.length;\n      var chunksOffset = [];\n      var chunkOffset = ftyp.byteLength + 8;\n      var maxLoop = 10000;\n      try {\n        while (samples.length && maxLoop-- > 0) {\n          var currentSample = samples.shift();\n          var isKeyframe = currentSample.isKeyframe;\n\n          var cts = void 0;\n          var pts = void 0;\n          var dts = Math.max(0, currentSample.dts - baseDts);\n\n          if (currentSample.pts !== undefined) {\n            pts = currentSample.pts - baseDts;\n            cts = pts - dts;\n          }\n\n          if (currentSample.cts !== undefined) {\n            pts = currentSample.cts + dts;\n            cts = currentSample.cts;\n          }\n          var sampleDuration = this.getSttsBoxData(currentSample, samples[0], sampleDeltas);\n          trackDuration = this.getDuration(trackDuration, sampleDuration);\n          this.getCttsBoxData(cts, sampleCtss);\n\n          var mdatSample = {\n            buffer: [],\n            size: 0\n          };\n          var sampleByteSize = currentSample.data.byteLength;\n          if (logger.long) {\n            logger.log(this.TAG, 'video dts ' + dts, 'pts ' + pts, 'cts: ' + cts, isKeyframe, 'originDts ' + currentSample.originDts, 'duration ' + sampleDuration);\n          }\n\n          if (sampleDuration >= 0) {\n            mdatBox.samples.push(mdatSample);\n            mdatSample.buffer.push(currentSample.data);\n            mdatSample.size += sampleByteSize;\n          }\n          frameIndex++;\n          this.getStszBoxData(sampleByteSize, sampleSizes);\n          chunkOffset = this.getStcoBoxData(frameIndex, sampleByteSize, sampleCount, chunkOffset, chunksOffset);\n\n          if (isKeyframe) {\n            this.getStssBoxData(frameIndex, keyFrames);\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      meta.duration = trackDuration;\n      this.getStscBoxData(sampleCount, chunks);\n\n      // 2\u6784\u9020mdat box\n      if (mdatBox.samples.length && track.meta) {\n        mdat = Mp4.mdat(mdatBox);\n      }\n\n      // 3 \u6784\u9020moov box\n      meta.sampleDeltas = sampleDeltas;\n      meta.chunks = chunks;\n      meta.sampleSizes = sampleSizes;\n      meta.chunksOffset = chunksOffset;\n      if (type === 'video') {\n        meta.keyFrames = keyFrames;\n        meta.sampleCtss = sampleCtss;\n      }\n      moov = Mp4.moov({ type: type, meta: meta });\n      track.samples = [];\n      track.length = 0;\n\n      var mp4 = new Buffer();\n      mp4.write(ftyp, mdat, moov);\n      this.emit(Mp4Box.EVENTS.TRACK_REMUXED, type, mp4);\n      this.ctsNum = 0;\n      // \u4E0B\u8F7Dmp4\u6587\u4EF6\u5230\u672C\u5730\uFF0C\u6D4B\u8BD5\u7528\n      // this.downLoadMp4(mp4)\n    }\n\n    /**\n     * @description \u751F\u6210\u97F3\u89C6\u9891\u90FD\u6709\u7684mp4\u7684moov\n     * @param {*} duration \u89C6\u9891\u7684\u65F6\u957F\n     * @param {*} timeScale \u89C6\u9891\u7684timescale\n     * @param {array} tracksMeta \u97F3\u89C6\u9891\u7684meta\n     * @returns null\n     */\n\n  }, {\n    key: 'mixMoov',\n    value: function mixMoov(duration, timeScale, tracksMeta) {\n      var size = 8;\n      var mvhd = Mp4.mvhd(duration, timeScale);\n      var tracks = [];\n      tracksMeta.forEach(function (item) {\n        var track = void 0;\n        if (item.type === 'video') {\n          track = Mp4.videoTrak(item);\n        } else {\n          track = Mp4.audioTrak(item);\n        }\n        tracks.push(track);\n      });\n      var boxs = [mvhd].concat(tracks);\n      boxs.forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Mp4.initBox.apply(Mp4, [size, 'moov', mvhd].concat(tracks));\n    }\n\n    /**\n     * @description dts to sample\u7684\u6620\u5C04\u8868\n     * @param {*} sample \u97F3\u9891\u6216\u8005\u89C6\u9891\u7684\u4E00\u4E2Asample\n     * @param {*} nextSample sample\u7684\u4E0B\u4E00\u4E2Asample\n     * @param {*} sampleDeltas sample\u7684duration\n     * @returns sample\u7684duration\n     */\n\n  }, {\n    key: 'getSttsBoxData',\n    value: function getSttsBoxData(sample, nextSample, sampleDeltas) {\n      var duration = sample.duration;\n      var len = sampleDeltas.length;\n      var delta = void 0;\n      // samples \u6570\u91CF\u5927\u4E8E\u7B49\u4E8E2\n      if (nextSample) {\n        var dts = sample.dts;\n        var nextDts = nextSample.dts;\n        if (duration) {\n          delta = duration;\n        } else {\n          delta = nextDts - dts;\n        }\n        if (!len) {\n          sampleDeltas.push({ delta: delta, deltaCount: 1 });\n          return delta;\n        }\n        if (delta === sampleDeltas[len - 1].delta) {\n          sampleDeltas[len - 1].deltaCount += 1;\n        } else {\n          sampleDeltas.push({ delta: delta, deltaCount: 1 });\n        }\n      } else {\n        // \u6700\u540E\u4E00\u4E2Asample\n        // \u53EA\u6709\u4E00\u4E2Asample\n        if (!len) {\n          sampleDeltas.push({ delta: DEFAULT_SAMPLE_DURATION, deltaCount: 1 });\n          delta = DEFAULT_SAMPLE_DURATION;\n        } else {\n          // \u9ED8\u8BA4\u6700\u540E\u4E00\u4E2Asample\u7684duration\u4E0E\u524D\u4E00\u4E2A\u76F8\u540C\n          sampleDeltas[len - 1].deltaCount += 1;\n          delta = sampleDeltas[len - 1].delta;\n        }\n      }\n      return delta;\n    }\n\n    /**\n     * @description \u4FDD\u5B58pts\u4E0Edts\u7684\u5DEE\u503C\u5230ctsEntry\uFF0C\u5982\u679C\u6CA1\u6709B\u5E27\uFF0C\u6CA1\u6709\u8FD9\u4E2A\u8868\n     * @param {*} cts \u89C6\u9891\u5E27\u7684cts\n     * @param {*} ctsEntry \u4FDD\u5B58cts\u7684\u6570\u7EC4\n     * @returns null\n     */\n\n  }, {\n    key: 'getCttsBoxData',\n    value: function getCttsBoxData(cts, ctsEntry) {\n      var len = ctsEntry.length;\n      // \u7B2C\u4E00\u4E2Asample\n      if (!len) {\n        this.ctsNum += 1;\n        ctsEntry.push({ cts: cts, ctsCount: 1 });\n        return;\n      }\n\n      if (ctsEntry[len - 1].cts === cts) {\n        this.ctsNum += 1;\n        ctsEntry[len - 1].ctsCount += 1;\n      } else {\n        this.ctsNum += 1;\n        ctsEntry.push({ cts: cts, ctsCount: 1 });\n      }\n    }\n\n    /**\n     * @description \u751F\u6210trunk\u4E0Esample\u7684\u6620\u5C04\u5173\u7CFB\u8868\n     * @param {*} sampleCount \u4E00\u5171\u6709\u591A\u5C11\u4E2Asample\n     * @param {*} chunks \u4FDD\u5B58\u6620\u5C04\u5173\u7CFB\u7684\u6570\u7EC4\n     */\n\n  }, {\n    key: 'getStscBoxData',\n    value: function getStscBoxData(sampleCount, chunks) {\n      if (sampleCount <= this._samplePerChunk) {\n        chunks.push({ firstChunk: 1, samplesPerChunk: sampleCount, sampleDescIndex: 1 });\n      } else {\n        var len = Math.floor(sampleCount / this._samplePerChunk);\n        var lastSampleNumber = sampleCount % this._samplePerChunk;\n        chunks.push({ firstChunk: 1, samplesPerChunk: this._samplePerChunk, sampleDescIndex: 1 });\n        if (lastSampleNumber) {\n          chunks.push({ firstChunk: len + 1, samplesPerChunk: lastSampleNumber, sampleDescIndex: 1 });\n        }\n      }\n    }\n\n    /**\n     * @description \u751F\u6210chunk offset\n     * @param {*} sampleIndex \u5F53\u524Dsample\u7684\u7D22\u5F15\u503C\n     * @param {*} sampleSize \u5F53\u524Dsample\u7684\u5B57\u8282\u5927\u5C0F\n     * @param {*} sampleCount track\u7684sample\u7684\u4E2A\u6570\n     * @param {*} chunkOffset \u5F53\u524Dsample\u5728mp4\u6587\u4EF6\u4E2D\u7684\u5B57\u8282\u4FBF\u5B9C\u91CF\n     * @param {*} chunksOffset \u5B58\u50A8chunkoffset\u7684\u6570\u7EC4\n     * @returns \u5F53\u524Dsample\u7684\u5B57\u8282\u504F\u79FB\n     */\n\n  }, {\n    key: 'getStcoBoxData',\n    value: function getStcoBoxData(sampleIndex, sampleSize, sampleCount, chunkOffset, chunksOffset) {\n      if (sampleIndex % this._samplePerChunk === 0) {\n        chunksOffset.push(chunkOffset);\n      }\n      chunkOffset += sampleSize;\n      return chunkOffset;\n    }\n\n    /**\n     * @description \u628A\u6BCF\u4E2Asample\u7684\u5B57\u8282\u5927\u5C0F\u5B58\u50A8\u5230sampleSizes\u91CC\n     * @param {int} sampleByteSize \u6BCF\u4E2Asample\u7684\u5B57\u8282\u5927\u5C0F\n     * @param {array} sampleSizes \u5B58\u50A8\u5B57\u8282\u5927\u5C0F\u7684\u6570\u7EC4\n     */\n\n  }, {\n    key: 'getStszBoxData',\n    value: function getStszBoxData(sampleByteSize, sampleSizes) {\n      sampleSizes.push(sampleByteSize);\n    }\n\n    /**\n     * @description \u628A\u5173\u952E\u5E27\u5BF9\u5E94\u7684index\u653E\u5230keyFrames\u6570\u7EC4\u4E2D\n     * @param {int} sampleIndex keyframe\u5728\u6240\u6709sample\u4E2D\u7684\u7D22\u5F15\u503C\n     * @param {array} keyFrames \u5B58\u50A8keyframe\u7684index\u7684\u6570\u7EC4\n     */\n\n  }, {\n    key: 'getStssBoxData',\n    value: function getStssBoxData(sampleIndex, keyFrames) {\n      keyFrames.push(sampleIndex);\n    }\n  }, {\n    key: 'getDuration',\n    value: function getDuration(currentDuration, duration) {\n      return currentDuration + duration;\n    }\n  }, {\n    key: 'downLoadMp4',\n    value: function downLoadMp4(mp4) {\n      var url = window.URL.createObjectURL(new Blob([mp4.buffer]));\n      var link = document.createElement('a');\n      link.style.display = 'none';\n      link.href = url;\n      link.setAttribute('download', 'v.mp4');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }, {\n    key: 'videoMeta',\n    get: function get() {\n      return this._videoMeta;\n    },\n    set: function set(meta) {\n      this._videoMeta = meta;\n    }\n  }, {\n    key: 'audioMeta',\n    get: function get() {\n      return this._audioMeta;\n    },\n    set: function set(meta) {\n      this._audioMeta = meta;\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n        INIT_SEGMENT: 'INIT_SEGMENT',\n        RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT',\n        TRACK_REMUXED: 'TRACK_REMUXED'\n      };\n    }\n  }]);\n\n  return Mp4Box;\n}(EventEmitter);\n\nexport default Mp4Box;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Buffer from './buffer';\nimport Fmp4 from './fmp4';\n\nvar Mp4 = function (_Fmp) {\n  _inherits(Mp4, _Fmp);\n\n  function Mp4() {\n    _classCallCheck(this, Mp4);\n\n    return _possibleConstructorReturn(this, (Mp4.__proto__ || Object.getPrototypeOf(Mp4)).apply(this, arguments));\n  }\n\n  _createClass(Mp4, null, [{\n    key: 'moov',\n    value: function moov(_ref) {\n      var type = _ref.type,\n          meta = _ref.meta;\n\n      var size = 8;\n      var mvhd = Mp4.mvhd(meta.duration, meta.timescale);\n      var trak = void 0;\n\n      if (type === 'video') {\n        trak = Mp4.videoTrak(meta);\n      } else {\n        trak = Mp4.audioTrak(meta);\n      }\n\n      [mvhd, trak].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Mp4.initBox(size, 'moov', mvhd, trak);\n    }\n  }, {\n    key: 'videoTrak',\n    value: function videoTrak(data) {\n      var size = 8;\n\n      var tkhd = Mp4.tkhd({\n        id: 1,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        type: 'video'\n      });\n      var mdia = Mp4.mdia({\n        type: 'video',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        avcc: data.avcc,\n        parRatio: data.parRatio,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        streamType: data.streamType,\n        sampleDeltas: data.sampleDeltas,\n        keyFrames: data.keyFrames,\n        sampleCtss: data.sampleCtss,\n        chunks: data.chunks,\n        sampleSizes: data.sampleSizes,\n        chunksOffset: data.chunksOffset\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Mp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'audioTrak',\n    value: function audioTrak(data) {\n      var size = 8;\n      var tkhd = Mp4.tkhd({\n        id: 2,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: 0,\n        height: 0,\n        type: 'audio'\n      });\n      var mdia = Mp4.mdia({\n        type: 'audio',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        channelCount: data.channelCount,\n        samplerate: data.sampleRate,\n        config: data.config,\n        sampleDeltas: data.sampleDeltas,\n        keyFrames: data.keyFrames,\n        sampleCtss: data.sampleCtss,\n        chunks: data.chunks,\n        sampleSizes: data.sampleSizes,\n        chunksOffset: data.chunksOffset\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Mp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(data) {\n      var size = 8;\n      var mdhd = Mp4.mdhd(data.timescale, data.duration);\n      var hdlr = Mp4.hdlr(data.type);\n      var minf = Mp4.minf(data);\n      [mdhd, hdlr, minf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Mp4.initBox(size, 'mdia', mdhd, hdlr, minf);\n    }\n  }, {\n    key: 'minf',\n    value: function minf(data) {\n      var size = 8;\n      var vmhd = data.type === 'video' ? Mp4.vmhd() : Mp4.smhd();\n      var dinf = Mp4.dinf();\n      var stbl = Mp4.stbl(data);\n      [vmhd, dinf, stbl].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Mp4.initBox(size, 'minf', vmhd, dinf, stbl);\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(data) {\n      var size = 8;\n      var stsd = Mp4.stsd(data);\n      var stts = Mp4.stts(data.sampleDeltas);\n      var stss = void 0;\n      if (data.keyFrames) {\n        stss = Mp4.stss(data.keyFrames);\n      }\n      var ctts = void 0;\n      if (data.sampleCtss) {\n        ctts = Mp4.ctts(data.sampleCtss);\n      }\n      var stsc = Mp4.stsc(data.chunks);\n      var stsz = Mp4.stsz(data.sampleSizes);\n      var stco = Mp4.stco(data.chunksOffset);\n      var tables = [stsd, stts, stsc, stsz, stco];\n      if (stss) {\n        tables.push(stss);\n      }\n      if (ctts) {\n        tables.push(ctts);\n      }\n\n      tables.forEach(function (item) {\n        // [stsd, stts, stss, stsc, stsz, stco].forEach(item => {\n        size += item.byteLength;\n      });\n      return Mp4.initBox.apply(Mp4, [size, 'stbl'].concat(tables));\n      // return Mp4.initBox(size, 'stbl', stsd, stts, stss, stsc, stsz, stco)\n    }\n    /**\n     * @description dts-sample\u7684\u6620\u5C04\u8868\uFF0C\u53EF\u4EE5\u8BA1\u7B97\u51FA\u6BCF\u4E2Asample\u7684dts\n     * @param {object} data\n     */\n\n  }, {\n    key: 'stts',\n    value: function stts(data) {\n      var entryCount = data.length;\n      var uCount = new Uint8Array([entryCount >> 24, entryCount >> 16 & 0xff, entryCount >> 8 & 0xff, entryCount & 0xff]);\n      var entryByteLength = 8 * entryCount;\n      var uEntry = new Uint8Array(entryByteLength);\n      var offset = 0;\n      for (var i = 0; i < entryCount; i++) {\n        var count = data[i].deltaCount;\n        var delta = data[i].delta;\n        var uDelta = new Uint8Array([count >> 24, count >> 16 & 0xff, count >> 8 & 0xff, count & 0xff, delta >> 24, delta >> 16 & 0xff, delta >> 8 & 0xff, delta & 0xff]);\n        uEntry.set(uDelta, offset);\n        offset += 8;\n      }\n      var buffer = new Buffer();\n      buffer.write(Mp4.size(12 + 4 + entryByteLength), Mp4.type('stts'), Mp4.extension(0, 0), uCount, uEntry);\n      return buffer.buffer;\n    }\n\n    /**\n     * @description \u53EF\u4EE5\u8BA1\u7B97\u51FApts\uFF0C\u4FDD\u5B58\u4E86\u6BCF\u4E2Asample\u4E0Edts\u7684\u5DEE\u503C\n     * @param {object} data\n     */\n\n  }, {\n    key: 'ctts',\n    value: function ctts(data) {\n      var entryCount = data.length;\n      var uCount = new Uint8Array([entryCount >> 24, entryCount >> 16 & 0xff, entryCount >> 8 & 0xff, entryCount & 0xff]);\n      var entryByteLength = 8 * entryCount;\n      var uEntry = new Uint8Array(entryByteLength);\n      var offset = 0;\n      for (var i = 0; i < entryCount; i++) {\n        var count = data[i].ctsCount;\n        var delta = data[i].cts;\n        var uDelta = new Uint8Array([count >> 24, count >> 16 & 0xff, count >> 8 & 0xff, count & 0xff, delta >> 24, delta >> 16 & 0xff, delta >> 8 & 0xff, delta & 0xff]);\n        uEntry.set(uDelta, offset);\n        offset += 8;\n      }\n      var buffer = new Buffer();\n      buffer.write(Mp4.size(12 + 4 + entryByteLength), Mp4.type('ctts'), Mp4.extension(0, 0), uCount, uEntry);\n      return buffer.buffer;\n    }\n\n    /**\n     * @description trunk\u548Csample\u7684\u6620\u5C04\u8868\n     * @param {object} data\n     */\n\n  }, {\n    key: 'stsc',\n    value: function stsc(data) {\n      var entryCount = data.length;\n      var uCount = new Uint8Array([entryCount >> 24, entryCount >> 16 & 0xff, entryCount >> 8 & 0xff, entryCount & 0xff]);\n      var entrySize = 12;\n      var entryByteLength = entrySize * entryCount;\n      var uEntry = new Uint8Array(entryByteLength);\n      var offset = 0;\n      for (var i = 0; i < entryCount; i++) {\n        var firstChunk = data[i].firstChunk;\n        var samplesPerChunk = data[i].samplesPerChunk;\n        var index = data[i].sampleDescIndex;\n        var uDelta = new Uint8Array([firstChunk >> 24, firstChunk >> 16 & 0xff, firstChunk >> 8 & 0xff, firstChunk & 0xff, samplesPerChunk >> 24, samplesPerChunk >> 16 & 0xff, samplesPerChunk >> 8 & 0xff, samplesPerChunk & 0xff, index >> 24, index >> 16 & 0xff, index >> 8 & 0xff, index & 0xff]);\n        uEntry.set(uDelta, offset);\n        offset += entrySize;\n      }\n      var buffer = new Buffer();\n      buffer.write(Mp4.size(12 + 4 + entryByteLength), Mp4.type('stsc'), Mp4.extension(0, 0), uCount, uEntry);\n      return buffer.buffer;\n    }\n\n    /**\n     * @description \u6BCF\u4E2Asample\u7684\u5B57\u8282\u6570\n     */\n\n  }, {\n    key: 'stsz',\n    value: function stsz(data) {\n      var count = data.length;\n      var entryByteLength = 4 * count;\n      var uSampleSize = new Uint8Array([0x00, 0x00, 0x00, 0x00]);\n      var uCount = new Uint8Array([count >> 24, count >> 16 & 0xff, count >> 8 & 0xff, count & 0xff]);\n      var uEntry = new Uint8Array(entryByteLength);\n      var offset = 0;\n      for (var i = 0; i < count; i++) {\n        var size = data[i];\n        var uSize = new Uint8Array([size >> 24, size >> 16 & 0xff, size >> 8 & 0xff, size & 0xff]);\n        uEntry.set(uSize, offset);\n        offset += 4;\n      }\n      var buffer = new Buffer();\n      // headersize + countsize + entryByteLength\n      buffer.write(Mp4.size(12 + 4 + 4 + entryByteLength), Mp4.type('stsz'), Mp4.extension(0, 0), uSampleSize, uCount, uEntry);\n      return buffer.buffer;\n    }\n\n    /**\n     * @description \u5173\u952E\u5E27\u5217\u8868\uFF0C\u8868\u793A\u54EA\u4E2Asample\u65F6\u5173\u952E\u5E27\n     */\n\n  }, {\n    key: 'stss',\n    value: function stss(data) {\n      var count = data.length;\n      var entryByteLength = 4 * count;\n      var uCount = new Uint8Array([count >> 24, count >> 16 & 0xff, count >> 8 & 0xff, count & 0xff]);\n      var uEntry = new Uint8Array(entryByteLength);\n      var offset = 0;\n      for (var i = 0; i < count; i++) {\n        var index = data[i];\n        var uDelta = new Uint8Array([index >> 24, index >> 16 & 0xff, index >> 8 & 0xff, index & 0xff]);\n        uEntry.set(uDelta, offset);\n        offset += 4;\n      }\n      var buffer = new Buffer();\n      // headersize + countsize + entryByteLength\n      buffer.write(Mp4.size(12 + 4 + entryByteLength), Mp4.type('stss'), Mp4.extension(0, 0), uCount, uEntry);\n      return buffer.buffer;\n    }\n\n    /**\n     * @description chunk offset\u8868\uFF0C\u5B58\u50A8\u4E86chunk\u5728\u6587\u4EF6\u4E2D\u7684\u504F\u79FB\u91CF\n     */\n\n  }, {\n    key: 'stco',\n    value: function stco(data) {\n      var count = data.length;\n      var entryByteLength = 4 * count;\n\n      var uCount = new Uint8Array([count >> 24, count >> 16 & 0xff, count >> 8 & 0xff, count & 0xff]);\n      var uEntry = new Uint8Array(entryByteLength);\n      var offset = 0;\n      for (var i = 0; i < count; i++) {\n        var size = data[i];\n        var uSize = new Uint8Array([size >> 24, size >> 16 & 0xff, size >> 8 & 0xff, size & 0xff]);\n        uEntry.set(uSize, offset);\n        offset += 4;\n      }\n      var buffer = new Buffer();\n\n      buffer.write(Mp4.size(12 + 4 + entryByteLength), Mp4.type('stco'), Mp4.extension(0, 0), uCount, uEntry);\n      return buffer.buffer;\n    }\n  }]);\n\n  return Mp4;\n}(Fmp4);\n\nexport default Mp4;", "var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Player from 'xgplayer';\nimport { EVENTS, Context } from 'xgplayer-helper-utils';\nimport HlsLiveController from './hls-live-mobile';\nimport defaultConfig from './config';\n// import 'xgplayer-mobilevideo'\nvar HlsAllowedEvents = EVENTS.HlsAllowedEvents;\n\nvar HlsLivePlayer = function (_Player) {\n  _inherits(HlsLivePlayer, _Player);\n\n  _createClass(HlsLivePlayer, null, [{\n    key: 'isSupported',\n    value: function isSupported() {\n      var wasmSupported = 'WebAssembly' in window;\n      var WebComponentSupported = 'customElements' in window && window.customElements.define;\n      var isComponentDefined = false;\n      if (WebComponentSupported) {\n        isComponentDefined = window.customElements.get('live-video');\n      }\n      return wasmSupported && isComponentDefined;\n    }\n  }]);\n\n  function HlsLivePlayer(options) {\n    _classCallCheck(this, HlsLivePlayer);\n\n    if (!options.mediaType) {\n      options.mediaType = 'live-video';\n      if (options.videoConfig) {\n        options.videoConfig.preloadtime = options.preloadTime || 5;\n      } else {\n        options.videoConfig = {\n          preloadtime: options.preloadTime || 5\n        };\n      }\n    }\n\n    var _this = _possibleConstructorReturn(this, (HlsLivePlayer.__proto__ || Object.getPrototypeOf(HlsLivePlayer)).call(this, options));\n\n    _this.hlsOps = {};\n    _this.util = Player.util;\n    _this.hlsOps = Object.assign(_this.hlsOps, defaultConfig);\n    _this.util.deepCopy(_this.hlsOps, options);\n    if (!_this.playerInited) {\n      _this.initPlayer();\n    }\n    // this.started = false;\n    return _this;\n  }\n\n  _createClass(HlsLivePlayer, [{\n    key: 'initPlayer',\n    value: function initPlayer() {\n      this.video.width = Number.parseInt(this.hlsOps.width || 600);\n      this.video.height = Number.parseInt(this.hlsOps.height || 337.5);\n      this.video.style.outline = 'none';\n      this.playerInited = true;\n    }\n  }, {\n    key: '_initEvents',\n    value: function _initEvents() {\n      var _this2 = this;\n\n      this.once('canplay', function () {\n        _this2.video.play();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.hlsOps.url;\n\n      if (!url || this.started) {\n        return;\n      }\n\n      if (!this.playerInited) {\n        this.initPlayer();\n      }\n\n      if (!this._context) {\n        this._context = new Context(HlsAllowedEvents);\n      }\n\n      this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({ player: this, container: this.video, preloadTime: this.config.preloadTime });\n      this._context.init();\n      this.url = url;\n      this.__core__.load(url);\n      _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'start', this).call(this, url);\n      this._initEvents();\n      this.started = true;\n      this.addLiveFlag();\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.started) {\n        this._context.destroy();\n        this._context = new Context(HlsAllowedEvents);\n        this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({ player: this, container: this.video, preloadTime: this.config.preloadTime });\n        this._context.init();\n        this._initEvents();\n        this.__core__.load(this.url);\n      }\n      _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'play', this).call(this);\n    }\n  }, {\n    key: 'addLiveFlag',\n    value: function addLiveFlag() {\n      var player = this;\n      Player.util.addClass(player.root, 'xgplayer-is-live');\n      if (!Player.util.findDom(this.root, 'xg-live')) {\n        var live = Player.util.createDom('xg-live', '\u6B63\u5728\u76F4\u64AD', {}, 'xgplayer-live');\n        player.controls.appendChild(live);\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      var isDelDOM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      return new Promise(function (resolve) {\n        _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'destroy', _this3).call(_this3);\n        var video = _this3.video,\n            root = _this3.root;\n\n        _get(HlsLivePlayer.prototype.__proto__ || Object.getPrototypeOf(HlsLivePlayer.prototype), 'destroy', _this3).call(_this3, isDelDOM);\n        if (video && video.remove) {\n          video.remove();\n        } else if (root) {\n          root.removeChild(video);\n        }\n        if (video) {\n          video.destroy();\n        }\n        setTimeout(function () {\n          resolve();\n        }, 50);\n      });\n    }\n  }, {\n    key: 'src',\n    set: function set(url) {\n      this.onWaiting = this.onWaiting.bind(this);\n      this._context.destroy();\n      this._context = null;\n      this.started = false;\n      this.video.currentTime = 0;\n\n      this.start(url);\n    }\n  }], [{\n    key: 'install',\n    value: function install(name, plugin) {\n      return Player.install(name, plugin);\n    }\n  }]);\n\n  return HlsLivePlayer;\n}(Player);\n\nexport default HlsLivePlayer;\n\n\nHlsLivePlayer.install = Player.install.bind(Player);", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS } from 'xgplayer-helper-utils';\nimport { XGDataView } from 'xgplayer-helper-models';\nimport { avc, hevc } from 'xgplayer-helper-codec';\n\nvar NalUnitHEVC = hevc.NalUnitHEVC;\nvar NalUnit = avc.NalUnit;\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar HLS_EVENTS = EVENTS.HLS_EVENTS;\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nvar HLS_ERROR = 'HLS_ERROR';\n\nvar MASTER_PLAYLIST_REGEX = /#EXT-X-STREAM-INF:([^\\n\\r]*)[\\r\\n]+([^\\r\\n]+)/g;\n\nvar HlsLiveController = function () {\n  function HlsLiveController(configs) {\n    _classCallCheck(this, HlsLiveController);\n\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.preloadTime = this.configs.preloadTime;\n    this.container = this.configs.container;\n    this._m3u8lasttime = 0;\n    this._timmer = setInterval(this._checkStatus.bind(this), 50);\n    this._lastCheck = 0;\n\n    this.m3u8Text = null;\n  }\n\n  _createClass(HlsLiveController, [{\n    key: 'init',\n    value: function init() {\n      var _player$hlsOps = this._player.hlsOps,\n          XgBuffer = _player$hlsOps.XgBuffer,\n          Tracks = _player$hlsOps.Tracks,\n          Playlist = _player$hlsOps.Playlist,\n          FetchLoader = _player$hlsOps.FetchLoader,\n          TsDemuxer = _player$hlsOps.TsDemuxer;\n      // \u521D\u59CB\u5316Buffer \uFF08M3U8/TS/Playlist);\n\n      this._context.registry('M3U8_BUFFER', XgBuffer);\n      this._context.registry('TS_BUFFER', XgBuffer);\n      this._context.registry('TRACKS', Tracks);\n\n      this._playlist = this._context.registry('PLAYLIST', Playlist)({ autoclear: true });\n\n      // \u521D\u59CB\u5316M3U8Loader;\n      this._m3u8loader = this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n      this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n      // \u521D\u59CB\u5316TS Demuxer\n      this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n      this.initEvents();\n    }\n  }, {\n    key: 'initEvents',\n    value: function initEvents() {\n      this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete.bind(this));\n\n      this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed.bind(this));\n\n      this.on(DEMUX_EVENTS.SEI_PARSED, this._handleSEIParsed.bind(this));\n\n      this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete.bind(this));\n\n      this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError.bind(this));\n\n      this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError.bind(this));\n    }\n  }, {\n    key: '_onError',\n    value: function _onError(type, mod, err, fatal) {\n      var error = {\n        errorType: type,\n        errorDetails: '[' + mod + ']: ' + (err ? err.message : ''),\n        errorFatal: fatal\n      };\n      this._player.emit(HLS_ERROR, error);\n    }\n  }, {\n    key: '_onDemuxComplete',\n    value: function _onDemuxComplete() {\n      var _this = this;\n\n      if (this._player.video) {\n        var _context$getInstance = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance.videoTrack,\n            audioTrack = _context$getInstance.audioTrack;\n\n        videoTrack.samples.forEach(function (sample) {\n          if (sample.analyzed) {\n            return;\n          }\n          sample.analyzed = true;\n          var buffer = new XGDataView(sample.data.buffer);\n          var nals = void 0;\n          if (_this._isHEVC(videoTrack.meta)) {\n            nals = NalUnitHEVC.getHvccNals(buffer);\n          } else {\n            nals = NalUnit.getNalunits(buffer);\n          }\n          var nalsLength = nals.reduce(function (len, current) {\n            return len + 4 + current.body.byteLength;\n          }, 0);\n          var newData = new Uint8Array(nalsLength);\n          var offset = 0;\n          nals.forEach(function (nal) {\n            newData.set([0, 0, 0, 1], offset);\n            offset += 4;\n            newData.set(new Uint8Array(nal.body), offset);\n            offset += nal.body.byteLength;\n          });\n\n          sample.data = newData;\n        });\n        this._player.video.onDemuxComplete(videoTrack, audioTrack);\n      }\n    }\n  }, {\n    key: '_onMetadataParsed',\n    value: function _onMetadataParsed(type) {\n      if (type === 'audio') {\n        // \u5C06\u97F3\u9891meta\u4FE1\u606F\u4EA4\u7ED9audioContext\uFF0C\u4E0D\u8D70remux\u5C01\u88C5\n        var _context$getInstance2 = this._context.getInstance('TRACKS'),\n            audioTrack = _context$getInstance2.audioTrack;\n\n        if (audioTrack && audioTrack.meta) {\n          this._setMetaToAudio(audioTrack.meta);\n        }\n      } else {\n        var _context$getInstance3 = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance3.videoTrack;\n\n        if (videoTrack && videoTrack.meta) {\n          this._setMetaToVideo(videoTrack.meta);\n        }\n      }\n    }\n  }, {\n    key: '_setMetaToAudio',\n    value: function _setMetaToAudio(audioMeta) {\n      if (this._player.video) {\n        this._player.video.setAudioMeta(audioMeta);\n      }\n    }\n  }, {\n    key: '_setMetaToVideo',\n    value: function _setMetaToVideo(videoMeta) {\n      if (this._player.video) {\n        this._player.video.setVideoMeta(videoMeta);\n      }\n    }\n  }, {\n    key: '_onLoadError',\n    value: function _onLoadError(loader, error) {\n      if (!this._tsloader.loading && !this._m3u8loader.loading && this.retrytimes > 1) {\n        this.retrytimes--;\n        this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, false);\n      } else if (this.retrytimes <= 1) {\n        this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, true);\n        this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n        if (this._player.video) {\n          this._player.video.handleEnded();\n        }\n      }\n    }\n  }, {\n    key: '_onDemuxError',\n    value: function _onDemuxError(mod, error, fatal) {\n      if (fatal === undefined) {\n        fatal = true;\n      }\n      this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n    }\n  }, {\n    key: '_handleSEIParsed',\n    value: function _handleSEIParsed(sei) {\n      this._player.emit('SEI_PARSED', sei);\n    }\n  }, {\n    key: '_onLoadComplete',\n    value: function _onLoadComplete(buffer) {\n      if (buffer.TAG === 'M3U8_BUFFER') {\n        var mdata = void 0;\n        try {\n          this.m3u8Text = buffer.shift();\n          var result = MASTER_PLAYLIST_REGEX.exec(this.m3u8Text);\n          if (result && result[2]) {\n            // redirect\n            this.load(result[2]);\n          } else {\n            mdata = this._player.hlsOps.M3U8Parser.parse(this.m3u8Text, this.url);\n          }\n        } catch (error) {\n          this._onError('M3U8_PARSER_ERROR', 'M3U8_PARSER', error, false);\n        }\n\n        if (!mdata) {\n          if (this.retrytimes > 0) {\n            this.retrytimes--;\n            this._preload();\n          } else {\n            this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n            if (this._player.video) {\n              this._player.video.handleEnded();\n            }\n          }\n          return;\n        }\n\n        try {\n          this._playlist.pushM3U8(mdata, true);\n        } catch (error) {\n          this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, false);\n        }\n\n        if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n          var _player$hlsOps2 = this._player.hlsOps,\n              XgBuffer = _player$hlsOps2.XgBuffer,\n              FetchLoader = _player$hlsOps2.FetchLoader;\n\n          this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n          this._context.registry('KEY_BUFFER', XgBuffer)();\n          this._tsloader.buffer = 'DECRYPT_BUFFER';\n          this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({ buffer: 'KEY_BUFFER', readtype: 3 });\n          this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri);\n        } else {\n          this._m3u8Loaded(mdata);\n        }\n      } else if (buffer.TAG === 'TS_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.downloaded(this._tsloader.url, true);\n        this.emit(DEMUX_EVENTS.DEMUX_START);\n      } else if (buffer.TAG === 'DECRYPT_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.downloaded(this._tsloader.url, true);\n        this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT);\n      } else if (buffer.TAG === 'KEY_BUFFER') {\n        var Crypto = this._player.hlsOps.Crypto;\n\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.encrypt.key = buffer.shift();\n        this._crypto = this._context.registry('CRYPTO', Crypto)({\n          key: this._playlist.encrypt.key,\n          iv: this._playlist.encrypt.ivb,\n          method: this._playlist.encrypt.method,\n          inputbuffer: 'DECRYPT_BUFFER',\n          outputbuffer: 'TS_BUFFER'\n        });\n        this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n      }\n    }\n  }, {\n    key: '_onDcripted',\n    value: function _onDcripted() {\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }\n  }, {\n    key: '_m3u8Loaded',\n    value: function _m3u8Loaded(mdata) {\n      if (!this.preloadTime) {\n        this.preloadTime = this._playlist.targetduration ? this._playlist.targetduration : 5;\n      }\n      if (this._playlist.fragLength > 0 && this._playlist.sequence < mdata.sequence) {\n        this.retrytimes = this.configs.retrytimes || 3;\n      } else {\n        if (this.retrytimes > 0) {\n          this.retrytimes--;\n          this._preload();\n        } else {\n          this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n          if (this._player.video) {\n            this._player.video.handleEnded();\n          }\n        }\n      }\n    }\n  }, {\n    key: '_checkStatus',\n    value: function _checkStatus() {\n      if (this.retrytimes < 1 && new Date().getTime() - this._lastCheck < 10000) {\n        return;\n      }\n      this._lastCheck = new Date().getTime();\n      if (this.container.buffered.length < 1) {\n        this._preload();\n      } else {\n        // Check for load.\n        var currentTime = this.container.currentTime;\n        if (this.container.readyState <= 2) {\n          this._preload();\n        }\n        var bufferend = this.container.buffered.end(this.container.buffered.length - 1);\n\n        if (currentTime > bufferend - this.preloadTime) {\n          this._preload();\n        }\n      }\n    }\n  }, {\n    key: '_preload',\n    value: function _preload() {\n      if (this._tsloader.loading || this._m3u8loader.loading) {\n        return;\n      }\n      var frag = this._playlist.getTs();\n\n      if (frag && !frag.downloaded && !frag.downloading) {\n        this._playlist.downloading(frag.url, true);\n        this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url);\n      } else {\n        var preloadTime = this.preloadTime ? this.preloadTime : 0;\n        var current = new Date().getTime();\n        if ((!frag || frag.downloaded) && (current - this._m3u8lasttime) / 1000 > preloadTime) {\n          this._m3u8lasttime = current;\n          this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n        }\n      }\n    }\n  }, {\n    key: '_isHEVC',\n    value: function _isHEVC(meta) {\n      return meta && meta.codec === 'hev1.1.6.L93.B0';\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      this.url = url;\n      this._preload();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      clearInterval(this._timmer);\n      this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete);\n      // this.off(REMUX_EVENTS.REMUX_ERROR);\n      this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n      this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n      this.m3u8Text = null;\n    }\n  }]);\n\n  return HlsLiveController;\n}();\n\nexport default HlsLiveController;", "import { Tracks, Buffer as XgBuffer, Playlist } from 'xgplayer-helper-models';\nimport { Crypto, FetchLoader } from 'xgplayer-helper-utils';\nimport { M3U8Parser, TsDemuxer } from 'xgplayer-helper-transmuxers';\n\nexport default {\n  Tracks: Tracks,\n  XgBuffer: XgBuffer,\n  FetchLoader: FetchLoader,\n  Crypto: Crypto,\n  M3U8Parser: M3U8Parser,\n  TsDemuxer: TsDemuxer,\n  Playlist: Playlist\n};", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Player from 'xgplayer';\nimport { EVENTS, common, Context } from 'xgplayer-helper-utils';\nimport HlsVodController from './hls-vod';\n\nvar debounce = common.debounce;\n\nvar HlsAllowedEvents = EVENTS.HlsAllowedEvents;\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar HLS_EVENTS = EVENTS.HLS_EVENTS;\nvar MSE_EVENTS = EVENTS.MSE_EVENTS;\n\nvar HlsVodPlayer = function (_Player) {\n  _inherits(HlsVodPlayer, _Player);\n\n  function HlsVodPlayer(options) {\n    _classCallCheck(this, HlsVodPlayer);\n\n    var _this = _possibleConstructorReturn(this, (HlsVodPlayer.__proto__ || Object.getPrototypeOf(HlsVodPlayer)).call(this, options));\n\n    _this.hlsOps = {};\n    _this.util = Player.util;\n    _this.util.deepCopy(_this.hlsOps, options);\n    _this._handleSetCurrentTime = debounce(_this._handleSetCurrentTime.bind(_this), 200);\n    _this.onWaiting = _this.onWaiting.bind(_this);\n    // this.started = false;\n    return _this;\n  }\n\n  _createClass(HlsVodPlayer, [{\n    key: '_handleSetCurrentTime',\n    value: function _handleSetCurrentTime(time) {\n      time = parseFloat(time);\n      if (time === this.currentTime) return;\n      _set(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'currentTime', time, this);\n      if (this._context) {\n        this.__core__.seek(time);\n      }\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this2 = this;\n\n      return this.video.play().catch(function (e) {\n        if (e && e.code === 20) {\n          // fix: chrome The play() request was interrupted by a new load request.\n          _this2.once('canplay', function () {\n            _this2.video.play();\n          });\n        }\n      });\n    }\n  }, {\n    key: 'replay',\n    value: function replay() {\n      var _this3 = this;\n\n      this.__core__.mse.cleanBuffers().then(function () {\n        _this3.__core__.replay();\n        _get(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'replay', _this3).call(_this3);\n      });\n    }\n  }, {\n    key: '_initEvents',\n    value: function _initEvents() {\n      var _this4 = this;\n\n      this.__core__.once(REMUX_EVENTS.INIT_SEGMENT, function () {\n        var mse = _this4.__core__.mse;\n        _get(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'start', _this4).call(_this4, mse.url);\n      });\n\n      this.__core__.once(HLS_EVENTS.RETRY_TIME_EXCEEDED, function () {\n        _this4.emit('error', new Player.Errors('network', _this4.config.url));\n      });\n\n      this.__core__.on(MSE_EVENTS.SOURCE_UPDATE_END, function () {\n        _this4._onSourceUpdateEnd();\n      });\n\n      this.once('canplay', function () {\n        if (_this4.config.autoplay) {\n          _this4.play();\n        }\n      });\n    }\n  }, {\n    key: 'initHlsBackupEvents',\n    value: function initHlsBackupEvents(hls, ctx) {\n      var _this5 = this;\n\n      hls.once(REMUX_EVENTS.INIT_SEGMENT, function () {\n        if (!_this5.video.src) {\n          console.log('\u6302\u8F7D src blob');\n          var mse = hls.mse;\n          _get(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'start', _this5).call(_this5, mse.url);\n        }\n      });\n      hls.once(EVENTS.REMUX_EVENTS.MEDIA_SEGMENT, function () {\n        _this5.__core__ = hls;\n        _this5.__core__.mse.cleanBuffers().then(function () {\n          _this5.__core__.mse.resetContext(ctx);\n          _this5.__core__.mse.doAppend();\n          _this5._context = ctx;\n        });\n      });\n\n      hls.once(EVENTS.LOADER_EVENTS.LOADER_ERROR, function () {\n        ctx.destroy();\n      });\n    }\n  }, {\n    key: '_onSourceUpdateEnd',\n    value: function _onSourceUpdateEnd() {\n      if (this.video.readyState === 1 || this.video.readyState === 2) {\n        var _detectBufferGap = this.detectBufferGap(),\n            gap = _detectBufferGap.gap,\n            start = _detectBufferGap.start,\n            method = _detectBufferGap.method;\n\n        if (gap) {\n          if (method === 'ceil' && this.currentTime < Math[method](start)) {\n            this.currentTime = Math[method](start);\n          } else if (method === 'floor' && this.currentTime > Math[method](start)) {\n            this.currentTime = Math[method](start);\n          }\n        }\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.url;\n\n      if (!url || this.started) {\n        return;\n      }\n      if (!this._context) {\n        this._context = new Context(this, this.hlsOps, HlsAllowedEvents);\n      }\n\n      this.__core__ = this._context.registry('HLS_VOD_CONTROLLER', HlsVodController)({ player: this, container: this.video, preloadTime: this.config.preloadTime });\n      this._context.init();\n      this.__core__.load(url);\n      this._initEvents();\n\n      this.started = true;\n    }\n  }, {\n    key: 'switchURL',\n    value: function switchURL(url) {\n      this.config.url = url;\n      var context = new Context(this, this.hlsOps, HlsAllowedEvents);\n      var hls = context.registry('HLS_VOD_CONTROLLER', HlsVodController)({\n        player: this,\n        container: this.video,\n        mse: this.__core__.mse,\n        preloadTime: this.config.preloadTime\n      });\n      this.newContext = context;\n      this.newHls = hls;\n      context.init();\n      this._context.destroy();\n      this.initHlsBackupEvents(hls, context);\n      this.__core__.mse.cleanBuffers().then(function () {\n        hls.load(url);\n      });\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this6 = this;\n\n      return new Promise(function (resolve) {\n        if (_this6.__core__ && _this6.__core__.mse) {\n          _this6.__core__.mse.destroy().then(function () {\n            if (_this6._context) {\n              _this6._context.destroy();\n            }\n            _get(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'destroy', _this6).call(_this6);\n            resolve();\n          });\n          setTimeout(function () {\n            resolve();\n          }, 100);\n        } else {\n          _get(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'destroy', _this6).call(_this6);\n          setTimeout(function () {\n            resolve();\n          }, 50);\n        }\n      });\n    }\n  }, {\n    key: 'detectBufferGap',\n    value: function detectBufferGap() {\n      var video = this.video;\n\n      var result = {\n        gap: false,\n        start: -1\n      };\n      var isStartPlay = this.currentTime === 0;\n      for (var i = 0; i < video.buffered.length; i++) {\n        var bufferStart = video.buffered.start(i);\n        var bufferEnd = video.buffered.end(i);\n        if ((!video.played.length || bufferStart <= this.currentTime && bufferEnd - this.currentTime >= 0.5) && !isStartPlay) {\n          break;\n        }\n        var startGap = bufferStart - this.currentTime;\n        var endGap = this.currentTime - bufferEnd;\n        if (startGap > 0.01 && (startGap <= 2 || isStartPlay)) {\n          result = {\n            gap: true,\n            start: bufferStart,\n            method: 'ceil'\n          };\n          break;\n        } else if (endGap > 0.1 && (endGap <= 2 || isStartPlay)) {\n          result = {\n            gap: true,\n            start: bufferEnd,\n            method: 'floor'\n          };\n        } else {\n          result = {\n            gap: false,\n            start: -1\n          };\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return _get(HlsVodPlayer.prototype.__proto__ || Object.getPrototypeOf(HlsVodPlayer.prototype), 'currentTime', this);\n    },\n    set: function set(time) {\n      this._handleSetCurrentTime(time);\n    }\n  }, {\n    key: 'src',\n    get: function get() {\n      return this.currentSrc;\n    },\n    set: function set(url) {\n      var _this7 = this;\n\n      this.onWaiting = this.onWaiting.bind(this);\n      this.__core__.mse.destroy().then(function () {\n        _this7._context.destroy();\n        _this7._context = null;\n        _this7.video.src = '';\n        _this7.video.load();\n        _this7.started = false;\n        _this7.video.currentTime = 0;\n\n        if (!_this7.paused) {\n          _this7.pause();\n          _this7.once('canplay', function () {\n            _this7.play();\n          });\n        } else {\n          _this7.play();\n        }\n\n        _this7.start(url);\n      });\n    }\n  }, {\n    key: 'context',\n    get: function get() {\n      return this._context;\n    }\n  }], [{\n    key: 'isSupported',\n    value: function isSupported() {\n      return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    }\n  }, {\n    key: 'install',\n    value: function install(name, plugin) {\n      return Player.install(name, plugin);\n    }\n  }]);\n\n  return HlsVodPlayer;\n}(Player);\n\nexport default HlsVodPlayer;", "var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS, Mse, Crypto, FetchLoader, logger } from 'xgplayer-helper-utils';\nimport { RemuxedBufferManager, Tracks, Buffer as XgBuffer, Playlist } from 'xgplayer-helper-models';\nimport { CompatHls as Compatibility } from 'xgplayer-helper-codec';\nimport { Mp4Remuxer, M3U8Parser, TsDemuxer } from 'xgplayer-helper-transmuxers';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar HLS_EVENTS = EVENTS.HLS_EVENTS;\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nvar MSE_EVENTS = EVENTS.MSE_EVENTS;\n\nvar HLS_ERROR = 'HLS_ERROR';\n\nvar HlsVodController = function () {\n  function HlsVodController(configs) {\n    _classCallCheck(this, HlsVodController);\n\n    this.TAG = 'HlsVodController';\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.container = this.configs.container;\n    this.preloadTime = this.configs.preloadTime || 5;\n    this.mse = this.configs.mse;\n    this._lastSeekTime = 0;\n\n    this.m3u8Text = null;\n  }\n\n  _createClass(HlsVodController, [{\n    key: 'init',\n    value: function init() {\n      // \u521D\u59CB\u5316Buffer \uFF08M3U8/TS/Playlist);\n      this._context.registry('M3U8_BUFFER', XgBuffer);\n      this._tsBuffer = this._context.registry('TS_BUFFER', XgBuffer)();\n      this._tracks = this._context.registry('TRACKS', Tracks)();\n\n      this._playlist = this._context.registry('PLAYLIST', Playlist)({ autoclear: false });\n      this._presource = this._context.registry('PRE_SOURCE_BUFFER', RemuxedBufferManager)();\n\n      this._compat = this._context.registry('COMPATIBILITY', Compatibility)();\n\n      // \u521D\u59CB\u5316M3U8Loader;\n      this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n      this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n      // \u521D\u59CB\u5316TS Demuxer\n      this._demuxer = this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n      // \u521D\u59CB\u5316MP4 Remuxer\n      this._context.registry('MP4_REMUXER', Mp4Remuxer)(this._player.currentTime);\n\n      // \u521D\u59CB\u5316MSE\n      if (!this.mse) {\n        this.mse = new Mse({ container: this.container, preloadTime: this.preloadTime }, this._context);\n        this.mse.init();\n      }\n      this.initEvents();\n    }\n  }, {\n    key: 'initEvents',\n    value: function initEvents() {\n      this._onLoaderCompete = this._onLoaderCompete.bind(this);\n      this._onLoadError = this._onLoadError.bind(this);\n      this._onInitSegment = this._onInitSegment.bind(this);\n      this._handleSEIParsed = this._handleSEIParsed.bind(this);\n      this._onMediaSegment = this._onMediaSegment.bind(this);\n      this._onMetadataParsed = this._onMetadataParsed.bind(this);\n      this._onDemuxComplete = this._onDemuxComplete.bind(this);\n      this._onDemuxError = this._onDemuxError.bind(this);\n      this._onRemuxError = this._onRemuxError.bind(this);\n      this._handleMseError = this._handleMseError.bind(this);\n      this._onUpdateEnd = this._onUpdateEnd.bind(this);\n      this._onTimeUpdate = this._onTimeUpdate.bind(this);\n      this._onWaiting = this._onWaiting.bind(this);\n\n      this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoaderCompete);\n\n      this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError);\n\n      this.on(REMUX_EVENTS.INIT_SEGMENT, this._onInitSegment);\n\n      this.on(DEMUX_EVENTS.SEI_PARSED, this._handleSEIParsed);\n\n      this.on(REMUX_EVENTS.MEDIA_SEGMENT, this._onMediaSegment);\n\n      this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n\n      this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n      this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError);\n\n      this.on(REMUX_EVENTS.REMUX_ERROR, this._onRemuxError);\n      this.on(MSE_EVENTS.MSE_ERROR, this._handleMseError);\n      this.on(MSE_EVENTS.SOURCE_UPDATE_END, this._onUpdateEnd);\n\n      this.on('TIME_UPDATE', this._onTimeUpdate);\n\n      this.on(MSE_EVENTS.SOURCE_UPDATE_END, this._onTimeUpdate);\n\n      this.on('WAITING', this._onWaiting);\n    }\n  }, {\n    key: '_onError',\n    value: function _onError(type, mod, err, fatal) {\n      var error = {\n        errorType: type,\n        errorDetails: '[' + mod + ']: ' + (err ? err.message : ''),\n        errorFatal: fatal\n      };\n      this._player && this._player.emit(HLS_ERROR, error);\n    }\n  }, {\n    key: '_onLoadError',\n    value: function _onLoadError(mod, error) {\n      this._player.emit('error', {\n        errorType: 'network',\n        ex: '[' + mod + ']: ' + error.message,\n        errd: {}\n      });\n      this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, true);\n      // this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED)\n    }\n  }, {\n    key: '_onDemuxError',\n    value: function _onDemuxError(mod, error, fatal) {\n      if (fatal === undefined) {\n        fatal = true;\n      }\n      this._player.emit('error', {\n        errorType: 'parse',\n        ex: '[' + mod + ']: ' + error.message,\n        errd: {}\n      });\n      this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n    }\n  }, {\n    key: '_onRemuxError',\n    value: function _onRemuxError(mod, error, fatal) {\n      if (fatal === undefined) {\n        fatal = true;\n      }\n      this._player.emit('error', {\n        errorType: 'parse',\n        ex: '[' + mod + ']: ' + error.message,\n        errd: {}\n      });\n      this._onError(REMUX_EVENTS.REMUX_ERROR, mod, error, fatal);\n    }\n  }, {\n    key: '_handleMseError',\n    value: function _handleMseError(tag, err, fatal) {\n      if (fatal === undefined) {\n        fatal = false;\n      }\n      this._player.emit('error', {\n        errorType: 'format',\n        ex: '[' + tag + ']: ' + err.message,\n        errd: {}\n      });\n      this._onError(MSE_EVENTS.MSE_ERROR, tag, err, fatal);\n    }\n  }, {\n    key: '_onWaiting',\n    value: function _onWaiting(container) {\n      var end = true;\n\n      logger.log(this.TAG, 'waiting.......', this._player.video.currentTime);\n      this._seekToBufferStart();\n      var playList = Object.keys(this._playlist.list);\n      var playListLen = playList.length;\n      if (!playListLen) {\n        return;\n      }\n\n      for (var i = 0; i < playListLen; i++) {\n        if (this.container.currentTime * 1000 < parseInt(playList[i])) {\n          end = false;\n        }\n      }\n      if (end) {\n        var ts = this._playlist.getTs(this.container.currentTime * 1000);\n        if (!ts) {\n          this._player.emit('ended');\n          this.mse.endOfStream();\n        } else {\n          if (ts.downloaded) {\n            this._player.emit('ended');\n            this.mse.endOfStream();\n          }\n        }\n      }\n    }\n  }, {\n    key: '_seekToBufferStart',\n    value: function _seekToBufferStart() {\n      var video = this._player.video;\n      var buffered = video.buffered;\n      var range = [0, 0];\n      var currentTime = video.currentTime;\n      if (buffered) {\n        for (var i = 0, len = buffered.length; i < len; i++) {\n          range[0] = buffered.start(i);\n          range[1] = buffered.end(i);\n          if (range[0] <= currentTime && currentTime <= range[1]) {\n            return;\n          }\n        }\n      }\n\n      var bufferStart = range[0];\n\n      if (currentTime === 0 && currentTime < bufferStart && Math.abs(currentTime - bufferStart) < 5) {\n        video.currentTime = bufferStart;\n      }\n    }\n  }, {\n    key: '_checkEnd',\n    value: function _checkEnd() {\n      var video = this._player.video;\n      var buffered = video.buffered;\n      var len = buffered.length;\n      if (!len) return;\n      var end = buffered.end(len - 1);\n      if (Math.abs(end - video.duration) < 1) {\n        this.mse.endOfStream();\n      }\n    }\n  }, {\n    key: '_onUpdateEnd',\n    value: function _onUpdateEnd() {\n      this._checkEnd();\n      this._seekToBufferStart();\n      this._preload(this._player.currentTime);\n    }\n  }, {\n    key: '_onTimeUpdate',\n    value: function _onTimeUpdate() {\n      this._seekToBufferStart();\n      // this.cleanBuffer()\n      this._preload(this._player.currentTime);\n    }\n  }, {\n    key: '_onDemuxComplete',\n    value: function _onDemuxComplete() {\n      this.emit(REMUX_EVENTS.REMUX_MEDIA, 'ts');\n    }\n  }, {\n    key: '_handleSEIParsed',\n    value: function _handleSEIParsed(sei) {\n      this._player.emit('SEI_PARSED', sei);\n    }\n  }, {\n    key: '_onMetadataParsed',\n    value: function _onMetadataParsed(type) {\n      try {\n        var m = this._tracks[type + 'Track'].meta;\n        logger.warn(this.TAG, 'meta detect or changed , ', type, Object.assign({}, m));\n      } catch (e) {}\n      var duration = parseInt(this._playlist.duration);\n      if (type === 'video') {\n        this._context.mediaInfo.hasVideo = true;\n        this._tracks.videoTrack.meta.duration = duration;\n      } else if (type === 'audio') {\n        this._context.mediaInfo.hasAudio = true;\n        this._tracks.audioTrack.meta.duration = duration;\n      }\n      this.emit(REMUX_EVENTS.REMUX_METADATA, type);\n    }\n  }, {\n    key: '_onMediaSegment',\n    value: function _onMediaSegment() {\n      if (Object.keys(this.mse.sourceBuffers).length < 1) {\n        this.mse.addSourceBuffers();\n      }\n\n      this.mse.doAppend();\n    }\n  }, {\n    key: '_onInitSegment',\n    value: function _onInitSegment() {\n      this.mse.addSourceBuffers();\n    }\n  }, {\n    key: '_onLoaderCompete',\n    value: function _onLoaderCompete(buffer) {\n      if (buffer.TAG === 'M3U8_BUFFER') {\n        this.m3u8Text = buffer.shift();\n        try {\n          var mdata = M3U8Parser.parse(this.m3u8Text, this.url);\n          this._playlist.pushM3U8(mdata);\n        } catch (error) {\n          this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, true);\n        }\n        if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n          this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n          this._context.registry('KEY_BUFFER', XgBuffer)();\n          this._tsloader.buffer = 'DECRYPT_BUFFER';\n          this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({ buffer: 'KEY_BUFFER', readtype: 3 });\n          this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri);\n        } else {\n          if (!this.preloadTime) {\n            if (this._playlist.targetduration) {\n              this.preloadTime = this._playlist.targetduration;\n              this.mse.preloadTime = this._playlist.targetduration;\n            } else {\n              this.preloadTime = 5;\n              this.mse.preloadTime = 5;\n            }\n          }\n          // \u8D77\u64AD\u5206\u7247 < 0.5s\u7684\u8FC7\u6EE4\u6389\n          var frag = this._playlist.getTs((this._player.currentTime + 0.5) * 1000);\n          if (frag) {\n            this._logDownSegment(frag);\n            this._playlist.downloading(frag.url, true);\n            this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url);\n          } else {\n            if (this.retrytimes > 0) {\n              this.retrytimes--;\n              this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n            }\n          }\n        }\n      } else if (buffer.TAG === 'TS_BUFFER') {\n        this._playlist.downloaded(this._tsloader.url, true);\n        this._demuxer.demux(Object.assign({ url: this._tsloader.url }, this._playlist._ts[this._tsloader.url]), true);\n        this._preload(this.mse.container.currentTime);\n      } else if (buffer.TAG === 'DECRYPT_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.downloaded(this._tsloader.url, true);\n        this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT, Object.assign({ url: this._tsloader.url }, this._playlist._ts[this._tsloader.url]));\n      } else if (buffer.TAG === 'KEY_BUFFER') {\n        this.retrytimes = this.configs.retrytimes || 3;\n        this._playlist.encrypt.key = buffer.shift();\n        this._crypto = this._context.registry('CRYPTO', Crypto)({\n          key: this._playlist.encrypt.key,\n          iv: this._playlist.encrypt.ivb,\n          method: this._playlist.encrypt.method,\n          inputbuffer: 'DECRYPT_BUFFER',\n          outputbuffer: 'TS_BUFFER'\n        });\n\n        this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n\n        var _frag = this._playlist.getTs();\n        if (_frag) {\n          this._playlist.downloading(_frag.url, true);\n          this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, _frag.url);\n        } else {\n          if (this.retrytimes > 0) {\n            this.retrytimes--;\n            this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n          }\n        }\n      }\n    }\n  }, {\n    key: '_onDcripted',\n    value: function _onDcripted() {\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      var video = this._player.video;\n\n\n      for (var i = 0; i < video.buffered.length; i++) {\n        if (time >= video.buffered.start(i) && time < video.buffered.end(i)) {\n          // this._playlist.clearDownloaded();\n          return;\n        }\n      }\n\n      logger.warn(this.TAG, 'seek: ', time, 'tsloading:', this._tsloader.loading);\n\n      // \u8FDE\u7EEDseek,\u5339\u914D\u7684\u662F\u540C\u4E00\u4E2A\u5206\u7247\u4E14\u6B63\u5728\u52A0\u8F7D,tsloader\u4E0D\u9500\u6BC1\n      var frag = this._playlist.getTs((time + 0.5) * 1000);\n      if (frag && this._tsloader.loading && this._tsloader.url === frag.url) return;\n\n      this._lastSeekTime = time;\n      this._tsloader.destroy();\n      this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n      if (this._presource.sources.video) {\n        this._presource.sources.video.data = [];\n      }\n      if (this._presource.sources.audio) {\n        this._presource.sources.audio.data = [];\n      }\n      if (this._tracks.audioTrack) {\n        this._tracks.audioTrack.samples = [];\n      }\n      if (this._tracks.videoTrack) {\n        this._tracks.videoTrack.samples = [];\n      }\n\n      if (this._compat) {\n        this._compat.reset();\n      }\n\n      if (this._tsBuffer) {\n        this._tsBuffer.array = [];\n        this._tsBuffer.length = 0;\n        this._tsBuffer.offset = 0;\n      }\n      this._playlist.clearDownloaded();\n      this._context.seek(time);\n      this._preload(time);\n    }\n  }, {\n    key: 'replay',\n    value: function replay() {\n      this._compat.reset();\n      this._playlist.clearDownloaded();\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      this.url = url;\n      this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, url, null, 0);\n    }\n  }, {\n    key: '_preload',\n    value: function _preload(time) {\n      time = Math.floor(time);\n      if (this._tsloader.loading) {\n        return;\n      }\n      logger.log(this.TAG, 'preload: time=', time);\n      var video = this.mse.container;\n      // Get current time range\n      var currentbufferend = -1;\n      if (!time && video.buffered.length) {\n        time = video.buffered.start(0);\n      }\n\n      for (var i = 0; i < video.buffered.length; i++) {\n        if (time >= Math.floor(video.buffered.start(i)) && time <= Math.ceil(video.buffered.end(i))) {\n          currentbufferend = video.buffered.end(i);\n        }\n      }\n\n      if (currentbufferend < 0) {\n        var frag = this._playlist.getTs((time + 0.5) * 1000); // FIXME: Last frame buffer shortens duration\n        if (frag && frag.downloaded) {\n          frag = this._playlist.getTs(frag.time + frag.duration);\n        }\n        if (frag && !frag.downloading && !frag.downloaded) {\n          this._logDownSegment(frag);\n          this._playlist.downloading(frag.url, true);\n          this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url);\n        }\n      } else if (currentbufferend < time + this.preloadTime) {\n        var _frag2 = this._playlist.getLastDownloadedTs() || this._playlist.getTs(currentbufferend * 1000);\n\n        if (!_frag2) {\n          return;\n        }\n\n        // let fragend = frag ? (frag.time + frag.duration) / 1000 : 0;\n\n        var curTime = _frag2.time + _frag2.duration;\n        var curFragTime = _frag2.time;\n\n        if (_frag2.downloaded) {\n          var loopMax = 1000;\n          while (loopMax-- > 0) {\n            curTime += 10;\n            _frag2 = this._playlist.getTs(curTime);\n            if (!_frag2 || _frag2.time > curFragTime) {\n              break;\n            }\n          }\n        }\n\n        if (_frag2 && !_frag2.downloading && !_frag2.downloaded) {\n          this._logDownSegment(_frag2);\n          this._playlist.downloading(_frag2.url, true);\n          this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, _frag2.url);\n        }\n      }\n    }\n  }, {\n    key: 'cleanBuffer',\n    value: function cleanBuffer() {\n      var _this = this;\n\n      var time = this._player.currentTime;\n\n      var video = this._player.video;\n      var buffered = video.buffered;\n\n      if (!buffered || !buffered.length) {\n        return;\n      }\n\n      var range = [0, 0];\n      var currentTime = video.currentTime;\n      if (buffered) {\n        for (var i = 0, len = buffered.length; i < len; i++) {\n          range[0] = buffered.start(i);\n          range[1] = buffered.end(i);\n          if (range[0] <= currentTime && currentTime <= range[1]) {\n            break;\n          }\n        }\n      }\n\n      var bufferStart = range[0];\n      var bufferEnd = range[1];\n\n      if (time - bufferStart > 10 || buffered.length > 1) {\n        this.mse.remove(Math.max(Math.min(time - 10, bufferEnd - 10), 0.1), 0);\n\n        this.bufferClearTimer = setTimeout(function () {\n          _this.bufferClearTimer = null;\n        }, 5000);\n      }\n    }\n  }, {\n    key: 'destory',\n    value: function destory() {\n      this.configs = {};\n      this.url = '';\n      this.sequence = 0;\n      this._playlist = null;\n      this.retrytimes = 3;\n      this.container = undefined;\n      this.preloadTime = 5;\n      this._lastSeekTime = 0;\n      this.m3u8Text = null;\n      this.mse = null;\n\n      this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoaderCompete);\n\n      this.off(LOADER_EVENTS.LOADER_ERROR, this._onLoadError);\n\n      this.off(REMUX_EVENTS.INIT_SEGMENT, this._onInitSegment);\n\n      this.off(REMUX_EVENTS.MEDIA_SEGMENT, this._onMediaSegment);\n\n      this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n\n      this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n      this.off('TIME_UPDATE', this._onTimeUpdate);\n\n      this.off('WAITING', this._onWaiting);\n    }\n  }, {\n    key: '_logDownSegment',\n    value: function _logDownSegment(frag) {\n      if (!frag) return;\n      logger.groupEnd();\n      logger.group(this.TAG, 'load ' + frag.id + ': [' + frag.time / 1000 + ' , ' + (frag.time + frag.duration) / 1000 + '], downloading: ' + frag.downloading + ' , donwloaded: ' + frag.downloaded);\n    }\n  }]);\n\n  return HlsVodController;\n}();\n\nexport default HlsVodController;"],
  "mappings": "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",
  "names": []
}
